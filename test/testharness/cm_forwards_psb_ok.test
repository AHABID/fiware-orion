# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

--NAME--
CM forwards PSB OK
--SHELL-INIT--
source harnessFunctions.sh

dbInit CB
dbInit CM

brokerStart CB 0-255
brokerStart CM  230

date > /tmp/pss
ps aux | grep contextBroker >> /tmp/pss
--SHELL--
# Do a NGSI10 request to check the operation is avoided
(curl localhost:${CM_PORT}/NGSI10/queryContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format -) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="Room" isPattern="false">
      <id>OfficeRoom</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>pressure</attribute>
    <attribute>lightstatus</attribute>
  </attributeList>
</queryContextRequest>
EOF
echo "1: ++++++++++++++++++++"
# Do initial registration in the CM
REG_OUT=$((curl localhost:${CM_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/application</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>
EOF)
REG_ID=$(echo "$REG_OUT" | grep registrationId | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep -v '^$' )
echo "$REG_OUT"
echo "2: ++++++++++++++++++++"

# Check the registration in CM 
(curl localhost:${CM_PORT}/NGSI9/discoverContextAvailability -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <entityId type="Room" isPattern="false">
        <id>OfficeRoom</id>
      </entityId>
    </entityIdList>
    <attributeList>
      <attribute>temperature</attribute>
      <attribute>pressure</attribute>
    </attributeList>
  </discoverContextAvailabilityRequest>
EOF
echo "3: ++++++++++++++++++++"

# Check the registration in PSB
(curl localhost:${BROKER_PORT}/NGSI9/discoverContextAvailability -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type="Room" isPattern="false">
        <id>ConferenceRoom</id>
      </entityId>
      <entityId type="Room" isPattern="false">
        <id>OfficeRoom</id>
      </entityId>
    </entityIdList>
    <attributeList>
      <attribute>temperature</attribute>
      <attribute>pressure</attribute>
    </attributeList>
  </discoverContextAvailabilityRequest>
EOF
echo "4: ++++++++++++++++++++"

# Update registration in CM
(curl localhost:${CM_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Car" isPattern="false">
            <id>MyCar</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>speed</name>
            <type>float</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/mycar</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT5H</duration>
    <registrationId>$REG_ID</registrationId>
  </registerContextRequest>
EOF
echo "5: ++++++++++++++++++++"

# Check the registration in CM
(curl localhost:${CM_PORT}/NGSI9/discoverContextAvailability -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type="Car" isPattern="false">
        <id>MyCar</id>
      </entityId>
    </entityIdList>
    <attributeList>
    </attributeList>
  </discoverContextAvailabilityRequest>
EOF
echo "6: ++++++++++++++++++++"

# Check the registration in PSB
(curl localhost:${BROKER_PORT}/NGSI9/discoverContextAvailability -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type="Car" isPattern="false">
        <id>MyCar</id>
      </entityId>
    </entityIdList>
    <attributeList>
    </attributeList>
  </discoverContextAvailabilityRequest>
EOF
echo "7: ++++++++++++++++++++"

# Check that everything is ok at database layer
mongo --quiet ${BROKER_DATABASE_NAME} << EOF
db.registrations.count()
EOF

mongo --quiet ${BROKER_DATABASE_AUX_NAME} << EOF
db.registrations.count()
EOF

RESULT=$(mongo --quiet ${BROKER_DATABASE_NAME} <<EOF
db.registrations.find({}, {_id: 1})
EOF)
# The next line is based in processing the following pattern:
#   { "_id" : ObjectId("5213a9a1db818a34990755c3") }
ID1=$(echo $RESULT | awk '{print $4}' | awk -F '"' '{print $2}')

RESULT=$(mongo --quiet ${BROKER_DATABASE_AUX_NAME} <<EOF
db.registrations.find({}, {fwdRegId: 1, _id: 0})
EOF)
# The next line is based in processing the following pattern:
#   { "fwdRegId" : "5213a9a1db818a34990755c3" }
ID2=$(echo $RESULT | awk '{print $4}' | awk -F '"' '{print $2}')

if [ "$ID1" == "$ID2" ]
then
   echo "OK"
else
   echo "different IDs: <$ID1> and <$ID2>"
fi

--REGEXPECT--
<?xml version="1.0"?>
<orionError>
  <code>400</code>
  <reasonPhrase>bad request</reasonPhrase>
  <details>service '/NGSI10/queryContext' not found</details>
</orionError>
1: ++++++++++++++++++++
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
2: ++++++++++++++++++++
<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/application</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
3: ++++++++++++++++++++
<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/application</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
4: ++++++++++++++++++++
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT5H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
5: ++++++++++++++++++++
<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Car" isPattern="false">
            <id>MyCar</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>speed</name>
            <type>float</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/mycar</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
6: ++++++++++++++++++++
<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Car" isPattern="false">
            <id>MyCar</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>speed</name>
            <type>float</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/mycar</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
7: ++++++++++++++++++++
1
1
OK
--TEARDOWN--
source harnessFunctions.sh

brokerStop CB
brokerStop CM
