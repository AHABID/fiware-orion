# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create and query compound vector 2 (xml json)
--SHELL-INIT--
source harnessFunctions.sh

dbInit CB
brokerStart CB

--SHELL--
(curl localhost:${BROKER_PORT}/NGSI10/updateContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="T" isPattern="false">
        <id>EVector</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>att</name>
          <type>compound</type>
          <contextValue type="vector">
             <item>22</item>
             <item>
               <x type="vector">
                 <item>x1</item>
                 <item>x2</item>
               </x>
               <y>3</y>
             </item>
             <item type="vector">
               <item>z1</item>
               <item>z2</item>
             </item>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>
EOF

echo
echo "+++++++++ vector compound created +++++++++++"
echo
echo

(curl localhost:${BROKER_PORT}/NGSI10/queryContext -s -S --header 'Content-Type: application/json' --header 'Accept: application/json' -d @-) <<EOF
{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EVector"
        }
    ]
}
EOF
--REGEXPECT--
<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EVector</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>

+++++++++ vector compound created +++++++++++


{
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T",
        "isPattern" : "false",
        "id" : "EVector",
        "attributes" : [
          {
            "name" : "att",
            "type" : "compound",
            "value" : [
              "22",
              {
                "x" : [
                  "x1",
                  "x2"
                ],
                "y" : "3"
              },
              [
                "z1",
                "z2"
              ]
            ]
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
--TEARDOWN--
source harnessFunctions.sh
brokerStop CB
