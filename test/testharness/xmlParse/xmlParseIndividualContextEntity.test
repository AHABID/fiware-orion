# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

--NAME--
broker version via REST
--SHELL-INIT--
# Test to see if we have a broker running on ${BROKER_PORT} if so kill it!
running_broker=$(ps -fe | grep contextBroker | grep ${BROKER_PORT} | wc -l)
if [ $running_broker -ne 0 ]; then
  kill $(ps -fe | grep contextBroker | grep ${BROKER_PORT} | awk '{print $2}')
  # Wait some time so the broker can finish properly
  sleep 1
  running_broker=$(ps -fe | grep contextBroker | grep ${BROKER_PORT} | wc -l)
  if [ $running_broker -ne 0 ]; then
    # If the broker refuses to stop politely, kill the process by brute force
    kill -9 $(ps -fe | grep contextBroker | grep ${BROKER_PORT} | awk '{print $2}')
    sleep 1
    running_broker=$(ps -fe | grep contextBroker | grep ${BROKER_PORT} | wc -l)
    if [ $running_broker -ne 0 ]; then
      echo "Existing contextBroker is inmortal, can not be killed!"
      exit 1
    fi
  fi
fi

echo 'db.dropDatabase()' | mongo ${BROKER_DATABASE_NAME} --quiet
CB_START_CMD="contextBroker -harakiri -port ${BROKER_PORT} -pidpath ${BROKER_PID_FILE} -db ${BROKER_DATABASE_NAME} -t 0-255"
if [ "$VALGRIND" == "" ]; then
  $CB_START_CMD
  # Wait some time so that the contextBroker is able to do its initial steps (reset database, start HTTP server, etc.)
  sleep 1
else
  valgrind $CB_START_CMD > ${TEST_BASENAME}.valgrind.out 2>&1 &
  # Waiting for valgrind to start (sleep 10)
  sleep 10s
fi

# Test to see if we have a broker running on ${BROKER_PORT} if not raise an error
running_broker=$(ps -fe | grep contextBroker | grep ${BROKER_PORT} | wc -l)
if [ $running_broker -ne 1 ]; then
  echo "Unable to start contextBroker"
  exit 1
fi

--SHELL--
# 1. GET that fails
echo "1: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' | xmllint --format -)

# 2. POST that fails
echo "2: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -d @- | xmllint --format -) << EOF
<?xml version="1.0" encoding="UTF-8"?>
<appendContextElementRequest>
  <attributeDomainName></attributeDomainName>
  <contextAttributeList>
    <contextAttribute>
      <name>pressure</name>
      <type>clima</type>
      <contextValue>p23</contextValue>
    </contextAttribute>
  </contextAttributeList>
</appendContextElementRequest>
EOF

# 3. PUT that fails
echo "3: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -X PUT -d @- | xmllint --format -) << EOF
<?xml version="1.0" encoding="UTF-8"?>
<updateContextElementRequest>
  <attributeDomainName></attributeDomainName>
  <contextAttributeList>
    <contextAttribute>
      <name>temperature</name>
      <type>degree</type>
      <contextValue>10</contextValue>
    </contextAttribute>
  </contextAttributeList>
</updateContextElementRequest>
EOF

# 4. DELETE that fails
echo "4: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -X DELETE | xmllint --format -)

# 5. Register an entity
echo "5: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -d @- | xmllint --format -) << EOF
<?xml version="1.0" encoding="UTF-8"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/application</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
  </registerContextRequest>
EOF

# 6. GET that is OK
echo "6: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' | xmllint --format -)

# 7. POST that is OK
echo "7: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -d @- | xmllint --format -) << EOF
<?xml version="1.0" encoding="UTF-8"?>
<appendContextElementRequest>
  <attributeDomainName></attributeDomainName>
  <contextAttributeList>
    <contextAttribute>
      <name>pressure</name>
      <type>clima</type>
      <contextValue>p23</contextValue>
    </contextAttribute>
  </contextAttributeList>
</appendContextElementRequest>
EOF

# 8. PUT that is OK
echo "8: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -X PUT -d @- | xmllint --format -) << EOF
<?xml version="1.0" encoding="UTF-8"?>
<updateContextElementRequest>
  <attributeDomainName></attributeDomainName>
  <contextAttributeList>
    <contextAttribute>
      <name>temperature</name>
      <type>degree</type>
      <contextValue>10</contextValue>
    </contextAttribute>
  </contextAttributeList>
</updateContextElementRequest>
EOF

# 9. DELETE that is OK
echo "9: +++++++++++++++++++++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/contextEntities/ENTITY_ID -s -S --header 'Content-Type: application/xml' --header 'Accept: application/xml' -X DELETE | xmllint --format -)

--REGEXPECT--
1: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<contextElementResponse>
  <contextElement>
    <entityId type="" isPattern="false">
      <id>ENTITY_ID</id>
    </entityId>
  </contextElement>
  <statusCode>
    <code>404</code>
    <reasonPhrase>Entity Not Found</reasonPhrase>
    <details>ENTITY_ID</details>
  </statusCode>
</contextElementResponse>
2: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<appendContextElementResponse>
  <contextResponseList>
    <contextAttributeResponse>
      <contextAttributeList>
        <contextAttribute>
          <name>pressure</name>
          <type>clima</type>
          <contextValue/>
        </contextAttribute>
      </contextAttributeList>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextAttributeResponse>
  </contextResponseList>
</appendContextElementResponse>
3: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<updateContextElementResponse>
  <errorCode>
    <code>472</code>
    <reasonPhrase>Not Found Attribute in UPDATE</reasonPhrase>
    <details>action: UPDATE - entity: (ENTITY_ID, ) - offending attribute: temperature</details>
  </errorCode>
</updateContextElementResponse>
4: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<statusCode>
  <code>200</code>
  <reasonPhrase>OK</reasonPhrase>
</statusCode>
5: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
6: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<contextElementResponse>
  <contextElement>
    <entityId type="" isPattern="false">
      <id>ENTITY_ID</id>
    </entityId>
    <contextAttributeList>
      <contextAttribute>
        <name>pressure</name>
        <type>clima</type>
        <contextValue>p23</contextValue>
      </contextAttribute>
    </contextAttributeList>
  </contextElement>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</contextElementResponse>
7: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<appendContextElementResponse>
  <contextResponseList>
    <contextAttributeResponse>
      <contextAttributeList>
        <contextAttribute>
          <name>pressure</name>
          <type>clima</type>
          <contextValue/>
        </contextAttribute>
      </contextAttributeList>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextAttributeResponse>
  </contextResponseList>
</appendContextElementResponse>
8: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<updateContextElementResponse>
  <errorCode>
    <code>472</code>
    <reasonPhrase>Not Found Attribute in UPDATE</reasonPhrase>
    <details>action: UPDATE - entity: (ENTITY_ID, ) - offending attribute: temperature</details>
  </errorCode>
</updateContextElementResponse>
9: +++++++++++++++++++++++++++++
<?xml version="1.0"?>
<statusCode>
  <code>200</code>
  <reasonPhrase>OK</reasonPhrase>
</statusCode>
--TEARDOWN--
if [ "$VALGRIND" == "" ]; then
  kill $(cat ${BROKER_PID_FILE})
  rm /tmp/orion_${BROKER_PORT}.pid
else
  curl localhost:${BROKER_PORT}/exit/harakiri >> ${TEST_BASENAME}.valgrind.stop.out
  # Waiting for valgrind to terminate (sleep 10)
  sleep 10
fi
