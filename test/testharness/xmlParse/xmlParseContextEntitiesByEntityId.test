# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
XML Parse ContextEntitiesByEntityId
--SHELL-INIT--
source ../harnessFunctions.sh

dbInit CB
brokerStart CB

--SHELL--
source ../harnessFunctions.sh

echo "1: ++++++++++++++++++++"

# Make a registration using conv op /NGSI9/contextEntities/ENTITY_ID
url="/NGSI9/contextEntities/ENTITY_ID"
payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<registerProviderRequest>
  <metadata>
    <contextMetadata>
      <name>ID</name>
      <type>string</type>
      <value>1110</value>
    </contextMetadata>
    <contextMetadata>
      <name>cm2</name>
      <type>string</type>
      <value>XXX</value>
    </contextMetadata>
  </metadata>
  <duration>PT1H</duration>
  <providingApplication>http://kz.tid.es/abc</providingApplication>
</registerProviderRequest>"
curlXml ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml"

REG_ID=$(echo "$response" | grep registrationId | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep -v '^$')


# Make a discovery to see that the registration went OK
echo "2: ++++++++++++++++++++"
url="/NGSI9/discoverContextAvailability"
payload="<?xml version=\"1.0\"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type=\"\" isPattern=\"true\">
        <id>ENTITY_ID</id>
      </entityId>
    </entityIdList>
  </discoverContextAvailabilityRequest>"
curlXml ${url} "${payload}" "Content-Type: application/xml"

# Modify the first registration
echo "3: ++++++++++++++++++++"
url="/NGSI9/contextEntities/ENTITY_ID"
payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<registerProviderRequest>
  <metadata>
    <contextMetadata>
      <name>ID</name>
      <type>string</type>
      <value>1111</value>
    </contextMetadata>
    <contextMetadata>
      <name>cm2</name>
      <type>string</type>
      <value>YYY</value>
    </contextMetadata>
  </metadata>
  <duration>PT2H</duration>
  <providingApplication>http://kz.tid.es/abc2</providingApplication>
  <registrationId>$REG_ID</registrationId>
</registerProviderRequest>"
curlXml ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml"

echo "4: ++++++++++++++++++++"

# Now discover that very registration again to see the change
url="/NGSI9/discoverContextAvailability"
payload="<?xml version=\"1.0\"?>
  <discoverContextAvailabilityRequest>
    <entityIdList>
      <entityId type=\"\" isPattern=\"true\">
        <id>ENTITY_ID</id>
      </entityId>
    </entityIdList>
  </discoverContextAvailabilityRequest>"
curlXml ${url} "${payload}" "Content-Type: application/xml"

echo "5: ++++++++++++++++++++"

# Now try the GET method
curlXmlNoPayload "/NGSI9/contextEntities/ENTITY_ID"

echo "6: ++++++++++++++++++++"

# And a GET that fails
curlXmlNoPayload "/NGSI9/contextEntities/ENTITY_ID2"
echo "7: ++++++++++++++++++++"

# DELETE and PUT should give errors
curlXmlNoPayload "/NGSI9/contextEntities/ENTITY_ID" "-X DELETE"

echo "8: ++++++++++++++++++++"

url="/NGSI9/contextEntities/ENTITY_ID"
payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<registerProviderRequest>
  <metadata>
    <contextMetadata>
      <name>ID</name>
      <type>string</type>
      <value>1111</value>
    </contextMetadata>
    <contextMetadata>
      <name>cm2</name>
      <type>string</type>
      <value>YYY</value>
    </contextMetadata>
  </metadata>
  <duration>PT2H</duration>
  <providingApplication>http://kz.tid.es/abc2</providingApplication>
</registerProviderRequest>"
curlXml ${url} "${payload}" "Content-Type: application/xml" "Accept: application/xml" "-X PUT"

echo "9: ++++++++++++++++++++"

--REGEXPECT--
1: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
2: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 497
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <providingApplication>http://kz.tid.es/abc</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
3: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 141
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT2H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
4: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 498
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <providingApplication>http://kz.tid.es/abc2</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
5: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 498
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <providingApplication>http://kz.tid.es/abc2</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
6: ++++++++++++++++++++
HTTP/1.1 200 OK
Content-Length: 199
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <errorCode>
    <code>404</code>
    <reasonPhrase>No context element registrations found</reasonPhrase>
  </errorCode>
</discoverContextAvailabilityResponse>
7: ++++++++++++++++++++
HTTP/1.1 405 Method Not Allowed
Content-Length: 0
Allow: POST, GET
Date: REGEX(.*)

8: ++++++++++++++++++++
HTTP/1.1 405 Method Not Allowed
Content-Length: 0
Allow: POST, GET
Date: REGEX(.*)

9: ++++++++++++++++++++
--TEARDOWN--
source ../harnessFunctions.sh
brokerStop CB
