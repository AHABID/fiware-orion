# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription availability sequence with wildcards
--SHELL-INIT--
source harnessFunctions.sh

dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

(curl localhost:${BROKER_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>
EOF
echo "1: ++++++++++++++++++++"

(curl localhost:${BROKER_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom2</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor2:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>
EOF
echo "2: ++++++++++++++++++++"

SUB_OUT=$((curl localhost:${BROKER_PORT}/NGSI9/subscribeContextAvailability -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format -) <<EOF
<?xml version="1.0"?>
<subscribeContextAvailabilityRequest>
        <entityIdList>
                <entityId type="Room" isPattern="true">
                        <id>ConferenceRoom.*</id>
                </entityId>
        </entityIdList>
        <attributeList>
                <attribute>temperature</attribute>
                <attribute>occupancy</attribute>
                <attribute>lightstatus</attribute>
        </attributeList>
        <reference>http://localhost:${LISTENER_PORT}/notify</reference>
        <duration>PT5H</duration>
</subscribeContextAvailabilityRequest>
EOF)
SUB_ID=$(echo "$SUB_OUT" | grep subscriptionId | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep -v '^$' )
echo "$SUB_OUT"
echo "3: ++++++++++++++++++++"

(curl localhost:${BROKER_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor3:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>
EOF
echo "4: ++++++++++++++++++++"

(curl localhost:${BROKER_PORT}/NGSI9/updateContextAvailabilitySubscription -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0"?>
<updateContextAvailabilitySubscriptionRequest>
        <entityIdList>
                <entityId type="Room" isPattern="true">
                        <id>OfficeRoom.*</id>
                </entityId>
        </entityIdList>
        <attributeList>
                <attribute>temperature</attribute>
                <attribute>occupancy</attribute>
                <attribute>lightstatus</attribute>
        </attributeList>
        <duration>PT5H</duration>
        <subscriptionId>$SUB_ID</subscriptionId>
</updateContextAvailabilitySubscriptionRequest>
EOF
echo "5: ++++++++++++++++++++"

(curl localhost:${BROKER_PORT}/NGSI9/registerContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor4:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <duration>PT1H</duration>
    <registrationId></registrationId>
  </registerContextRequest>
EOF
echo "6: ++++++++++++++++++++"

(curl localhost:${BROKER_PORT}/NGSI9/unsubscribeContextAvailability -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0"?>
<unsubscribeContextAvailabilityRequest>
        <subscriptionId>$SUB_ID</subscriptionId>
</unsubscribeContextAvailabilityRequest>
EOF
echo "7: ++++++++++++++++++++"

#Get accumulated data
curl localhost:${LISTENER_PORT}/dump -s -S 

--REGEXPECT--
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
1: ++++++++++++++++++++
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
2: ++++++++++++++++++++
<?xml version="1.0"?>
<subscribeContextAvailabilityResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <duration>PT5H</duration>
</subscribeContextAvailabilityResponse>
3: ++++++++++++++++++++
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
4: ++++++++++++++++++++
<?xml version="1.0"?>
<updateContextAvailabilitySubscriptionResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <duration>PT5H</duration>
</updateContextAvailabilitySubscriptionResponse>
5: ++++++++++++++++++++
<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>
6: ++++++++++++++++++++
<?xml version="1.0"?>
<unsubscribeContextAvailabilityResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</unsubscribeContextAvailabilityResponse>
7: ++++++++++++++++++++
POST http://localhost:REGEX(\d+)/notify
Content-Length: 1472
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor2:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>

=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 839
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor3:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>

=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 1464
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor1:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor2:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>

=======================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 835
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextAvailabilityRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom3</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://sensor4:1028</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</notifyContextAvailabilityRequest>

=======================================
--TEARDOWN--
source harnessFunctions.sh

brokerStop CB
accumulatorStop
