# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
JSON Parse Post DiscoverContextAvailability with Geolocalization areas
--SHELL-INIT--
source ../harnessFunctions.sh

dbInit CB
brokerStart CB

--SHELL--
source ../harnessFunctions.sh

#
# Discovery with circle area - notning foun of course, but the
# importance here is that we get no XML parse error for the input payload
# Once the broker starts to give errors for unwanted JSON/XML input, this
# test will be more valuable
#
url="/NGSI9/discoverContextAvailability"
payload='{
  "entities": [
    {
      "type": "Room",
      "isPattern": "false",
      "id": "ConferenceRoom"
    },
    {
      "type": "Room",
      "isPattern": "false",
      "id": "OfficeRoom"
    }
  ],
  "attributes": [
    "temperature",
    "pressure"
  ],
  "restriction" : {
    "attributeExpression" : "Attribute Expression",
    "scopes" : [
      {
        "type" : "FIWARE_Location",
        "value" : {
          "circle" : {
            "center_latitude"  : "45",
            "center_longitude" : "45",
            "radius" : "6"
          }
        }
      }
    ]
  }
}'
curlJson ${url} "${payload}"

echo "+++++ Discovery 1 Done +++++++++++++++"
--REGEXPECT--
HTTP/1.1 200 OK
Content-Length: 94
Content-Type: application/json
Date: REGEX(.*)

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}
+++++ Discovery 1 Done +++++++++++++++
--TEARDOWN--
source ../harnessFunctions.sh
brokerStop CB
