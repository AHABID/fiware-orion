# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Restict chars in id

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. POST /v2/entities: attempt to create Espa<a/T1 (error in ID)
# 02. POST /v2/entities: attempt to create E1/T( (error in TYPE)
# 03. POST /v2/entities: attempt to create E=/T1 (error in ID)
# 04. POST /v2/entities: attempt to create E1/T" (error in TYPE)
# 05. GET /v2/entities to see that no entity has been added
#

echo '01. POST /v2/entities: attempt to create Espa<a/T1 (error in ID)'
echo "================================================================"
payload='{ "id": "Espa<a", "type": "T1", "A1": "" }'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo '02. POST /v2/entities: attempt to create E1/T( (error in TYPE)'
echo "=============================================================="
payload='{ "id": "E1", "type": "T(", "A1": { "value": "" }}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '03. POST /v2/entities: attempt to create E=/T1 (error in ID)'
echo "============================================================"
payload='{ "id": "E=", "type": "T1", "A2": { "value": "" }}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '04. POST /v2/entities: attempt to create E1/T" (error in TYPE)'
echo "=============================================================="
payload='{ "id": "E1", "type": "T\"", "A2": { "value": "" }}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '05. GET /v2/entities to see that no entity has been added'
echo "========================================================="
orionCurl --url /v2/entities
echo
echo


--REGEXPECT--
01. POST /v2/entities: attempt to create Espa<a/T1 (error in ID)
================================================================
HTTP/1.1 400 Bad Request
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid characters in entity id",
    "error": "BadRequest"
}


02. POST /v2/entities: attempt to create E1/T( (error in TYPE)
==============================================================
HTTP/1.1 400 Bad Request
Content-Length: 72
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid characters in entity type",
    "error": "BadRequest"
}


03. POST /v2/entities: attempt to create E=/T1 (error in ID)
============================================================
HTTP/1.1 400 Bad Request
Content-Length: 70
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid characters in entity id",
    "error": "BadRequest"
}


04. POST /v2/entities: attempt to create E1/T" (error in TYPE)
==============================================================
HTTP/1.1 400 Bad Request
Content-Length: 72
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Invalid characters in entity type",
    "error": "BadRequest"
}


05. GET /v2/entities to see that no entity has been added
=========================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
