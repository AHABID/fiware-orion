# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create and update csubs with metatata flags field

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create subscription with metadataFlags: foo, see error
# 02. Create subscription with metadataFlags: true
# 03. Get subscription and see metadataFlags: true
# 04. Update subscription with metadataFlags: bar, see error
# 05. Update subscription without touching metadataFlags
# 06. Get subscription and see metadataFlags: true
# 07. Update subscription with metadataFlags: false
# 08. Get subscription and see no metadataFlags
#

echo "01. Create subscription with metadataFlags: foo, see error"
echo "=========================================================="
payload='
{
    "subject": {
        "entities": [
            {
                "id": "E1",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ]
         }
    },
    "notification": {
        "http": {"url": "http://localhost:1234/notify"},
        "metadataFlags": "foo",
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create subscription with metadataFlags: true"
echo "================================================"
payload='
{
    "subject": {
        "entities": [
            {
                "id": "E1",
                "type": "T"
            }
        ],
        "condition": {
            "attrs": [ ]
         }
    },
    "notification": {
        "http": {"url": "http://localhost:1234/notify"},
        "metadataFlags": true,
        "attrs": [ ]
    },
    "expires": "2050-04-05T14:00:00.00Z"
}
'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "03. Get subscription and see metadataFlags: true"
echo "================================================"
orionCurl --url /v2/subscriptions
echo
echo


echo "04. Update subscription with metadataFlags: bar, see error"
echo "=========================================================="
payload='{
  "notification": {
    "http": {"url": "http://localhost:1234/notify"},
    "metadataFlags": "bar",
    "attrs": [ ]
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "05. Update subscription without touching metadataFlags"
echo "======================================================"
payload='{
  "expires": "2060-04-05T14:00:00.00Z"
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "06. Get subscription and see metadataFlags: true"
echo "================================================"
orionCurl --url /v2/subscriptions
echo
echo


echo "07. Update subscription with metadataFlags: false"
echo "================================================="
payload='{
  "notification": {
    "http": {"url": "http://localhost:1234/notify"},
    "metadataFlags": false,
    "attrs": [ ]
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "08. Get subscription and see metadataFlags: "
echo "================================================"
orionCurl --url /v2/subscriptions
echo
echo


--REGEXPECT--
01. Create subscription with metadataFlags: foo, see error
==========================================================
HTTP/1.1 400 Bad Request
Content-Length: 66
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "metadataFlags is not a bool",
    "error": "BadRequest"
}


02. Create subscription with metadataFlags: true
================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Get subscription and see metadataFlags: true
================================================
HTTP/1.1 200 OK
Content-Length: 284
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "expires": "2050-04-05T14:00:00.00Z",
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "http": {
                "url": "http://localhost:1234/notify"
            },
            "metadataFlags": true
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": []
            },
            "entities": [
                {
                    "id": "E1",
                    "type": "T"
                }
            ]
        }
    }
]


04. Update subscription with metadataFlags: bar, see error
==========================================================
HTTP/1.1 400 Bad Request
Content-Length: 66
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "metadataFlags is not a bool",
    "error": "BadRequest"
}


05. Update subscription without touching metadataFlags
======================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Get subscription and see metadataFlags: true
================================================
HTTP/1.1 200 OK
Content-Length: 284
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "expires": "2060-04-05T14:00:00.00Z",
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "http": {
                "url": "http://localhost:1234/notify"
            },
            "metadataFlags": true
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": []
            },
            "entities": [
                {
                    "id": "E1",
                    "type": "T"
                }
            ]
        }
    }
]


07. Update subscription with metadataFlags: false
=================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Get subscription and see metadataFlags:
================================================
HTTP/1.1 200 OK
Content-Length: 263
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "expires": "2060-04-05T14:00:00.00Z",
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "http": {
                "url": "http://localhost:1234/notify"
            }
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": []
            },
            "entities": [
                {
                    "id": "E1",
                    "type": "T"
                }
            ]
        }
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
