# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

#
# Uncached/Cached query
#
# 01. Start the contextBroker 'broker'
# 02. Start contextProvider 'CP' (contextBroker functioning as contextProvider)
# 03. Query broker for E1/A1 (nothing found)
# 04. Register an entity/attribute E1/A1 in broker, with CP as providing application
# 05. Query broker for E1/A1 (will go to CP, but CP doesn't know about E1/A1)
# 06. Update/APPEND E1/A1(=CP) in CP
# 07. Query broker for E1/A1 (will go to CP and it will work, A1=CP is returned)
# 08. Update/APPEND E1/A1(=broker) in broker
# 09. Query broker for E1/A1 (will NOT go to CP, but broker's local info is returned (A1=broker))
#

--NAME--
Query Redirect Operation
--SHELL-INIT--
dbInit CB
brokerStart CB
brokerStart CP1


--SHELL--
echo "01. contextBroker running"
echo "02. contextProvider running (contextBroker functioning as contextProvider)"
echo
echo


echo "03. Query broker for E1/A1 (nothing found)"
url="/ngsi10/queryContext"
payload='<?xml version="1.0"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="E" isPattern="false">
      <id>E1</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>A1</attribute>
  </attributeList>
</queryContextRequest>'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "04. Register an entity/attribute E1/A1 in broker, with CP as providing application"
url="/ngsi9/registerContext"
payload='<?xml version="1.0"?>
  <registerContextRequest>
    <contextRegistrationList>
      <contextRegistration>
        <entityIdList>
          <entityId type="E" isPattern="false">
            <id>E1</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>A1</name>
            <type>T1</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:'$CP1_PORT'/</providingApplication>
      </contextRegistration>
    </contextRegistrationList>
    <registrationId></registrationId>
  </registerContextRequest>'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "05. Query broker for E1/A1 (will go to CP, but CP doesn't know about E1/A1)"
url="/ngsi10/queryContext"
payload='<?xml version="1.0"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="E" isPattern="false">
      <id>E1</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>A1</attribute>
  </attributeList>
</queryContextRequest>'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "06. Update/APPEND E1/A1(=CP) in CP"
url="/ngsi10/updateContext"
payload='<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="E" isPattern="false">
        <id>E1</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>A1</name>
          <type>T1</type>
          <contextValue>CP1</contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "$payload" --port $CP1_PORT
echo
echo


echo "07. Query broker for E1/A1 (will go to CP and it will work, A1=CP is returned)"
url="/ngsi10/queryContext"
payload='<?xml version="1.0"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="E" isPattern="false">
      <id>E1</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>A1</attribute>
  </attributeList>
</queryContextRequest>'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "08. Update/APPEND E1/A1(=broker) in broker"
url="/ngsi10/updateContext"
payload='<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="E" isPattern="false">
        <id>E1</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>A1</name>
          <type>T1</type>
          <contextValue>CB</contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url "$url" --payload "$payload"
echo
echo


echo "09. Query broker for E1/A1 (will NOT go to CP, but broker's local info is returned (A1=broker))"
url="/ngsi10/queryContext"
payload='<?xml version="1.0"?>
<queryContextRequest>
  <entityIdList>
    <entityId type="E" isPattern="false">
      <id>E1</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>A1</attribute>
  </attributeList>
</queryContextRequest>'
orionCurl --url "$url" --payload "$payload"
echo
echo


--REGEXPECT--
01. contextBroker running
02. contextProvider running (contextBroker functioning as contextProvider)


03. Query broker for E1/A1 (nothing found)
HTTP/1.1 200 OK
Content-Length: 155
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <errorCode>
    <code>404</code>
    <reasonPhrase>No context element found</reasonPhrase>
  </errorCode>
</queryContextResponse>


04. Register an entity/attribute E1/A1 in broker, with CP as providing application
HTTP/1.1 200 OK
Content-Length: 142
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<registerContextResponse>
  <duration>PT24H</duration>
  <registrationId>REGEX([0-9a-f]{24})</registrationId>
</registerContextResponse>


05. Query broker for E1/A1 (will go to CP, but CP doesn't know about E1/A1)
HTTP/1.1 200 OK
Content-Length: 182
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <errorCode>
    <code>302</code>
    <reasonPhrase>Found</reasonPhrase>
    <details>http://localhost:9801/</details>
  </errorCode>
</queryContextResponse>


06. Update/APPEND E1/A1(=CP) in CP
HTTP/1.1 200 OK
Content-Length: 616
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="E" isPattern="false">
          <id>E1</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A1</name>
            <type>T1</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>


07. Query broker for E1/A1 (will go to CP and it will work, A1=CP is returned)
HTTP/1.1 200 OK
Content-Length: 182
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <errorCode>
    <code>302</code>
    <reasonPhrase>Found</reasonPhrase>
    <details>http://localhost:9801/</details>
  </errorCode>
</queryContextResponse>


08. Update/APPEND E1/A1(=broker) in broker
HTTP/1.1 200 OK
Content-Length: 616
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="E" isPattern="false">
          <id>E1</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A1</name>
            <type>T1</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>


09. Query broker for E1/A1 (will NOT go to CP, but broker's local info is returned (A1=broker))
HTTP/1.1 200 OK
Content-Length: 616
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="E" isPattern="false">
          <id>E1</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>A1</name>
            <type>T1</type>
            <contextValue>CB</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>


--TEARDOWN--
brokerStop CB
brokerStop CP1
