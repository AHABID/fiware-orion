# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Query filter propagation to CPr

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Register E1/A1 in CB, provApp: accumulator
# 02. Query with q filter
# 03. Query with geo filter
# 04. Dump accumulator to see the forwarded messages
#

echo "01. Register E1/A1 in CB, provApp: accumulator"
echo "=============================================="
payload='{
  "contextRegistrations": [
    {
      "entities": [
        {
          "id": "E1",
          "type": "T1"
        }
      ],
      "attributes": [
        {
          "name": "A1",
          "isDomain": "false"
        }
      ],
      "providingApplication": "http://localhost:'${LISTENER_PORT}'/v1"
    }
  ],
  "duration": "P1M"
}'
orionCurl --url /v1/registry/registerContext --payload "$payload"
echo
echo


echo "02. Query with q filter"
echo "======================="
orionCurl --url '/v2/entities?q=temperature>40'
echo
echo


echo "03. Query with geo filter"
echo "========================="
orionCurl --url '/v2/entities?georel=coveredBy&geometry=box&coords=3,2;10,8'
echo
echo


echo "04. Dump accumulator to see the forwarded messages"
echo "=================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Register E1/A1 in CB, provApp: accumulator
==============================================
HTTP/1.1 200 OK
Content-Length: 74
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "duration": "P1M",
    "registrationId": "REGEX([0-9a-f]{24})"
}




03. 04. Dump accumulator to see the forwarded messages
======================================================
POST http://localhost:REGEX(\d+)/v1/updateContext
Content-Length: 332
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})


=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
