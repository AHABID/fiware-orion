# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Attribute dates

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1/A1
# 02. GET E1/A1, see dateCreated == dateModified
# 03. Update E1/A1
# 04. GET E1/A1, see dateModified > dateCreated
#

echo "01. Create E1/A1"
echo "================"
payload='{
  "id": "E1",
  "A1": {
    "value": 1
  }
}'
T_0=$(TZ=GMT date +"%Y-%m-%dT%H:%M:%S.00Z")
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET E1/A1, see dateCreated == dateModified"
echo "=============================================="
orionCurl --url '/v2/entities/E1/attrs/A1?options=dateCreated'
dateCreated=$(echo "$_response" | python -mjson.tool | grep value | awk -F '"' '{print $4}')
echo "=============================================="
orionCurl --url '/v2/entities/E1/attrs/A1?options=dateModified'
dateModified=$(echo "$_response" | python -mjson.tool | grep value | awk -F '"' '{print $4}')

if [ "$dateCreated" != "$dateModified" ]
then
  echo dateCreated $dateCreated differs from dateModified
fi
if [ "$dateCreated" != "$T_0" ]
then
  echo "invalid dateCreated"
  echo "dateCreated: $dateCreated"
  echo "should be:   $T_0"
fi

echo
echo


echo "03. Update E1/A1"
echo "================"
sleep 1.1
payload='{
  "A1": {
    "value": 3
  }
}'
T_1=$(TZ=GMT date +"%Y-%m-%dT%H:%M:%S.00Z")
orionCurl --url /v2/entities/E1/attrs --payload "$payload"
echo
echo


echo "04. GET E1/A1, check dateModified and dateCreated"
echo "================================================="
orionCurl --url '/v2/entities/E1/attrs/A1?options=dateCreated'
dateCreated=$(echo "$_response" | python -mjson.tool | grep value | awk -F '"' '{print $4}')
echo "================================================="
orionCurl --url '/v2/entities/E1/attrs/A1?options=dateModified'
dateModified=$(echo "$_response" | python -mjson.tool | grep value | awk -F '"' '{print $4}')

if [ "$dateCreated" != "$T_0" ]
then
  echo "invalid dateCreated"
  echo "dateCreated: $dateCreated"
  echo "should be:   $T_0"
fi

if [ "$dateModified" != "$T_1" ]
then
  echo "invalid dateModified"
  echo "dateModified: $dateModified"
  echo "should be:   $T_1"
fi

echo
echo


--REGEXPECT--
01. Create E1/A1
================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET E1/A1, see dateCreated == dateModified
==============================================
HTTP/1.1 200 OK
Content-Length: 108
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {
        "dateCreated": {
            "type": "DateTime",
            "value": "REGEX(.*)"
        }
    },
    "type": "Number",
    "value": 1
}
==============================================
HTTP/1.1 200 OK
Content-Length: 109
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {
        "dateModified": {
            "type": "DateTime",
            "value": "REGEX(.*)"
        }
    },
    "type": "Number",
    "value": 1
}


03. Update E1/A1
================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET E1/A1, check dateModified and dateCreated
=================================================
HTTP/1.1 200 OK
Content-Length: 108
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {
        "dateCreated": {
            "type": "DateTime",
            "value": "REGEX(.*)"
        }
    },
    "type": "Number",
    "value": 3
}
=================================================
HTTP/1.1 200 OK
Content-Length: 109
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "metadata": {
        "dateModified": {
            "type": "DateTime",
            "value": "REGEX(.*)"
        }
    },
    "type": "Number",
    "value": 3
}


--TEARDOWN--
brokerStop CB
dbDrop CB
