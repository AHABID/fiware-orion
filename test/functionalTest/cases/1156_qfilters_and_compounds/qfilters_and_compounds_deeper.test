# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
String filters for compound values of attributes: string match

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with A1 with compound value containing all JSON types in deeper levels than one
# 02. EQ match with Bool: A1.L1.L2.T==true: see E1
# 03. NEQ match with Float: A1.L1.L2.f!=3.15: see E1
# 04. LT match with String: A1.L1.L2.s<uest_string: See E1
# 05. LE match with Integer: A1.L1.L2.i<=10: see E1
# 06. GT match with Float: A1.L1.L2.f>3.13: see E1
# 07. GE match with String: A1.L1.L2.s>=test_string: see E1
# 08. String match: A1.L1.L2.s~=t_str: see E1
# 09. String no-match: A1.L1.L2.s~=f_str: see nothing
# 10. Existence: A1.L1.L2.F: see E1
# 11. Existence: A1.L1.L2: see E1
# 12. Non Existence: A1.L1.L3: see E1
# 13. Non Existence: A1.L1.L2.Not: see E1
# 14. Existence: A1.L1.L2.Not: see nothing
#

echo "01. Create E1 with A1 with compound value containing all JSON types in deeper levels than one"
echo "============================================================================================="
payload='{
  "id": "E1",
  "A1": {
    "value": {
      "L1": {
        "L2": {
          "i": 10,
          "f": 3.14,
          "s": "test_string",
          "T": true,
          "F": false,
          "N": null
        }
      }
    }
  }
}'
orionCurl --url /v2/entities --payload "${payload}"
echo
echo


echo "02. EQ match with Bool: A1.L1.L2.T==true: see E1"
echo "================================================"
orionCurl --url '/v2/entities?q=A1.L1.L2.T==true'
echo
echo


echo "03. NEQ match with Float: A1.L1.L2.f!=3.15: see E1"
echo "=================================================="
orionCurl --url '/v2/entities?q=A1.L1.L2.f!=3.15'
echo
echo


echo "04. LT match with String: A1.L1.L2.s<uest_string: See E1"
echo "========================================================"
orionCurl --url '/v2/entities?q=A1.L1.L2.s<uest_string'
echo
echo


echo "05. LE match with Integer: A1.L1.L2.i<=10: see E1"
echo "================================================="
orionCurl --url '/v2/entities?q=A1.L1.L2.i<=10'
echo
echo


echo "06. GT match with Float: A1.L1.L2.f>3.13: see E1"
echo "================================================"
orionCurl --url '/v2/entities?q=A1.L1.L2.f>3.13'
echo
echo


echo "07. GE match with String: A1.L1.L2.s>=test_string: see E1"
echo "========================================================="
orionCurl --url '/v2/entities?q=A1.L1.L2.s>=test_string'
echo
echo


echo "08. String match: A1.L1.L2.s~=t_str: see E1"
echo "==========================================="
orionCurl --url '/v2/entities?q=A1.L1.L2.s~=t_str'
echo
echo


echo "09. String no-match: A1.L1.L2.s~=f_str: see nothing"
echo "==================================================="
orionCurl --url '/v2/entities?q=A1.L1.L2.s~=f_str'
echo
echo


echo "10. Existence: A1.L1.L2.F: see E1"
echo "================================="
orionCurl --url '/v2/entities?q=A1.L1.L2.F'
echo
echo


echo "11. Existence: A1.L1.L2: see E1"
echo "==============================="
orionCurl --url '/v2/entities?q=A1.L1.L2'
echo
echo


echo "12. Non Existence: A1.L1.L3: see E1"
echo "==================================="
orionCurl --url '/v2/entities?q=!A1.L1.L3'
echo
echo


echo "13. Non Existence: A1.L1.L2.Not: see E1"
echo "======================================="
orionCurl --url '/v2/entities?q=!A1.L1.L2.Not'
echo
echo


echo "14. Existence: A1.L1.L2.Not: see nothing"
echo "========================================"
orionCurl --url '/v2/entities?q=A1.L1.L2.Not'
echo
echo


--REGEXPECT--
01. Create E1 with A1 with compound value containing all JSON types in deeper levels than one
=============================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=none
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. EQ match with Bool: A1.L1.L2.T==true: see E1
================================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


03. NEQ match with Float: A1.L1.L2.f!=3.15: see E1
==================================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


04. LT match with String: A1.L1.L2.s<uest_string: See E1
========================================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


05. LE match with Integer: A1.L1.L2.i<=10: see E1
=================================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


06. GT match with Float: A1.L1.L2.f>3.13: see E1
================================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


07. GE match with String: A1.L1.L2.s>=test_string: see E1
=========================================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


08. String match: A1.L1.L2.s~=t_str: see E1
===========================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


09. String no-match: A1.L1.L2.s~=f_str: see nothing
===================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


10. Existence: A1.L1.L2.F: see E1
=================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


11. Existence: A1.L1.L2: see E1
===============================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


12. Non Existence: A1.L1.L3: see E1
===================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


13. Non Existence: A1.L1.L2.Not: see E1
=======================================
HTTP/1.1 200 OK
Content-Length: 148
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {},
            "type": "none",
            "value": {
                "L1": {
                    "L2": {
                        "F": false,
                        "N": null,
                        "T": true,
                        "f": 3.14,
                        "i": 10,
                        "s": "test_string"
                    }
                }
            }
        },
        "id": "E1",
        "type": "none"
    }
]


14. Existence: A1.L1.L2.Not: see nothing
========================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
