# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
notifyFormat_ngsi10

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. Subscribe to E1/A1 (no pattern)
# 02. Subscribe to E2.*/A1
# 03. Subscribe to E3.*/A1
# 04. Statistics
#

echo "01. Subscribe to E1/A1 (no pattern)"
echo "==================================="
payload='{
  "entities": [
    {
        "id":   "E1",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload" --json
echo
echo


echo "02. Subscribe to E2.*/A1"
echo "========================"
payload='{
  "entities": [
    {
        "id":   "E2.*",
        "isPattern": "true",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload" --json
echo
echo


echo "03. Subscribe to E3.*/A1"
echo "========================"
payload='{
  "entities": [
    {
        "id":   "E3.*",
        "isPattern": "true",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload" --json
echo
echo


echo "04. Statistics"
echo "=============="
orionCurl --url /statistics --json
echo
echo



--REGEXPECT--
01. Subscribe to E1/A1 (no pattern)
===================================
HTTP/1.1 200 OK
Content-Length: 135
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M", 
        "subscriptionId": "REGEX([0-9a-f]{24})", 
        "throttling": "PT1S"
    }
}


02. Subscribe to E2.*/A1
========================
HTTP/1.1 200 OK
Content-Length: 135
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M", 
        "subscriptionId": "REGEX([0-9a-f]{24})", 
        "throttling": "PT1S"
    }
}


03. Subscribe to E3.*/A1
========================
HTTP/1.1 200 OK
Content-Length: 135
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M", 
        "subscriptionId": "REGEX([0-9a-f]{24})", 
        "throttling": "PT1S"
    }
}


04. Statistics
==============
HTTP/1.1 200 OK
Content-Length: 203
Content-Type: application/json
Date: REGEX(.*)

{
    "orion": {
        "jsonRequests": "4", 
        "measuring_interval_in_secs": "REGEX(\d)", 
        "statisticsRequests": "1", 
        "subCacheEntries": "2", 
        "subscriptions": "3", 
        "uptime_in_secs": "REGEX(\d)"
    }
}


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
