# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Error handling For PUT Individual Entity Attribute

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. BADVERB /v2/entities/E1/attrs/A1/value to see BAD METHOD, only GET, PUT 
# 02. PUT /v2/entities/E1/attrs/A1/value without 'value' in payload
# 03. PUT /v2/entities/E1/attrs/A1/value with 'value' and 'type' in payload
#

echo "01. BADVERB /v2/entities/E1/attrs/A1/value to see BAD METHOD, only GET, PUT"
echo "==========================================================================="
payload='{ "value": 1 }'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --json -X BADVERB
echo
echo


echo "02. PUT /v2/entities/E1/attrs/A1/value without 'value' in payload"
echo "================================================================="
payload='{ "type": 1 }'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --json -X PUT
echo
echo


echo "03. PUT /v2/entities/E1/attrs/A1/value with 'value' and 'type' in payload"
echo "========================================================================="
payload='{ "value": 3, "type": 3 }'
orionCurl --url /v2/entities/E1/attrs/A1/value --payload "$payload" --json -X PUT
echo
echo


--REGEXPECT--
01. BADVERB /v2/entities/E1/attrs/A1/value to see BAD METHOD, only GET, PUT
===========================================================================
HTTP/1.1 405 Method Not Allowed
Content-Length: 0
Allow: GET, PUT
Date: REGEX(.*)



02. PUT /v2/entities/E1/attrs/A1/value without 'value' in payload
=================================================================
HTTP/1.1 400 Bad Request
Content-Length: 67
Content-Type: application/json
Date: REGEX(.*)

{
    "description": "no attribute value specified",
    "error": "BadRequest"
}


03. PUT /v2/entities/E1/attrs/A1/value with 'value' and 'type' in payload
=========================================================================
HTTP/1.1 400 Bad Request
Content-Length: 85
Content-Type: application/json
Date: REGEX(.*)

{
    "description": "unexpected JSON field - accepting only /value/",
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
