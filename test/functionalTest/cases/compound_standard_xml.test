# Copyright 2014 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Create and query compound values (standard op and XML creation)
--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "1: +++++++++ create vector compound +++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/updateContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="T" isPattern="false">
        <id>EVector</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>att</name>
          <type>compound</type>
          <contextValue type="vector">
             <item>22</item>
             <item>
               <x type="vector">
                 <item>x1</item>
                 <item>x2</item>
               </x>
               <y>3</y>
             </item>
             <item type="vector">
               <item>z1</item>
               <item>z2</item>
             </item>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>
EOF

echo "2: +++++++++ create object compound +++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/updateContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format - ) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
  <contextElementList>
    <contextElement>
      <entityId type="T" isPattern="false">
        <id>EObject</id>
      </entityId>
      <contextAttributeList>
        <contextAttribute>
          <name>att</name>
          <type>compound</type>
          <contextValue>
             <x>
               <x1>a</x1>
               <x2>b</x2>
             </x>
             <y type="vector">
                <item>y1</item>
                <item>y2</item>
             </y>
          </contextValue>
        </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>
EOF

echo "3: ++++++++++ query for vector compound in XML ++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/queryContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format -) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
        <entityId type="T" isPattern="false">
          <id>EVector</id>
        </entityId>
  </entityIdList>
  <attributeList/>
</queryContextRequest>
EOF

echo "4: ++++++++++ query for object compound in XML ++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/queryContext -s -S --header 'Content-Type: application/xml' -d @- | xmllint --format -) <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<queryContextRequest>
  <entityIdList>
        <entityId type="T" isPattern="false">
          <id>EObject</id>
        </entityId>
  </entityIdList>
  <attributeList/>
</queryContextRequest>
EOF

echo "5: ++++++++++ query for vector compound in JSON ++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/queryContext -s -S --header 'Content-Type: application/json' --header 'Accept: application/json' -d @- | python -mjson.tool) <<EOF
{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EVector"
        }
    ]
}
EOF

echo "6: ++++++++++ query for object compound in JSON ++++++++++"
(curl localhost:${BROKER_PORT}/NGSI10/queryContext -s -S --header 'Content-Type: application/json' --header 'Accept: application/json' -d @- | python -mjson.tool) <<EOF
{
    "entities": [
        {
            "type": "T",
            "isPattern": "false",
            "id": "EObject"
        }
    ]
}
EOF

echo "7: ++++++++++ query for vector compound in XML convop ++++++++++"
curl localhost:${BROKER_PORT}/ngsi10/contextEntities/EVector -s -S --header 'Content-Type: application/xml' | xmllint --format -

echo "8: ++++++++++ query for object compound in XML convop ++++++++++"
curl localhost:${BROKER_PORT}/ngsi10/contextEntities/EObject -s -S --header 'Content-Type: application/xml' | xmllint --format -

echo "9: ++++++++++ query for vector compound in JSON convop ++++++++++"
curl localhost:${BROKER_PORT}/NGSI10/contextEntities/EVector -s -S --header 'Content-Type: application/json' --header 'Accept: application/json' | python -mjson.tool

echo "10: ++++++++++ query for object compound in JSON convop ++++++++++"
curl localhost:${BROKER_PORT}/NGSI10/contextEntities/EObject -s -S --header 'Content-Type: application/json' --header 'Accept: application/json' | python -mjson.tool

--REGEXPECT--
1: +++++++++ create vector compound +++++++++++
<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EVector</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
2: +++++++++ create object compound +++++++++++
<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EObject</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
3: ++++++++++ query for vector compound in XML ++++++++++
<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EVector</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue type="vector">
              <item>22</item>
              <item>
                <x type="vector">
                  <item>x1</item>
                  <item>x2</item>
                </x>
                <y>3</y>
              </item>
              <item type="vector">
                <item>z1</item>
                <item>z2</item>
              </item>
            </contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
4: ++++++++++ query for object compound in XML ++++++++++
<?xml version="1.0"?>
<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="T" isPattern="false">
          <id>EObject</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>att</name>
            <type>compound</type>
            <contextValue>
              <x>
                <x1>a</x1>
                <x2>b</x2>
              </x>
              <y type="vector">
                <item>y1</item>
                <item>y2</item>
              </y>
            </contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
5: ++++++++++ query for vector compound in JSON ++++++++++
{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att",
                        "type": "compound",
                        "value": [
                            "22",
                            {
                                "x": [
                                    "x1",
                                    "x2"
                                ],
                                "y": "3"
                            },
                            [
                                "z1",
                                "z2"
                            ]
                        ]
                    }
                ],
                "id": "EVector",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
6: ++++++++++ query for object compound in JSON ++++++++++
{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "att",
                        "type": "compound",
                        "value": {
                            "x": {
                                "x1": "a",
                                "x2": "b"
                            },
                            "y": [
                                "y1",
                                "y2"
                            ]
                        }
                    }
                ],
                "id": "EObject",
                "isPattern": "false",
                "type": "T"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}
7: ++++++++++ query for vector compound in XML convop ++++++++++
<?xml version="1.0"?>
<contextElementResponse>
  <contextElement>
    <entityId type="" isPattern="false">
      <id>EVector</id>
    </entityId>
    <contextAttributeList>
      <contextAttribute>
        <name>att</name>
        <type>compound</type>
        <contextValue type="vector">
          <item>22</item>
          <item>
            <x type="vector">
              <item>x1</item>
              <item>x2</item>
            </x>
            <y>3</y>
          </item>
          <item type="vector">
            <item>z1</item>
            <item>z2</item>
          </item>
        </contextValue>
      </contextAttribute>
    </contextAttributeList>
  </contextElement>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</contextElementResponse>
8: ++++++++++ query for object compound in XML convop ++++++++++
<?xml version="1.0"?>
<contextElementResponse>
  <contextElement>
    <entityId type="" isPattern="false">
      <id>EObject</id>
    </entityId>
    <contextAttributeList>
      <contextAttribute>
        <name>att</name>
        <type>compound</type>
        <contextValue>
          <x>
            <x1>a</x1>
            <x2>b</x2>
          </x>
          <y type="vector">
            <item>y1</item>
            <item>y2</item>
          </y>
        </contextValue>
      </contextAttribute>
    </contextAttributeList>
  </contextElement>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</contextElementResponse>
9: ++++++++++ query for vector compound in JSON convop ++++++++++
{
    "contextElement": {
        "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": [
                    "22",
                    {
                        "x": [
                            "x1",
                            "x2"
                        ],
                        "y": "3"
                    },
                    [
                        "z1",
                        "z2"
                    ]
                ]
            }
        ],
        "id": "EVector",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
10: ++++++++++ query for object compound in JSON convop ++++++++++
{
    "contextElement": {
        "attributes": [
            {
                "name": "att",
                "type": "compound",
                "value": {
                    "x": {
                        "x1": "a",
                        "x2": "b"
                    },
                    "y": [
                        "y1",
                        "y2"
                    ]
                }
            }
        ],
        "id": "EObject",
        "isPattern": "false",
        "type": ""
    },
    "statusCode": {
        "code": "200",
        "reasonPhrase": "OK"
    }
}
--TEARDOWN--
brokerStop CB
