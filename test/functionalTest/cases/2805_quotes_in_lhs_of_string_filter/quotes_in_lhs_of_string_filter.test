# Copyright 2017 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Quotes in LHS of String Filters

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with an attribute called A1.B1, with value 'A1' and with a metadata called M1='M1'
# 02. Query with q=A1.B1, no hits
# 03. Query with q='A1.B1', see E1
# 04. Query with q='A1.B1'.M1==M1, see E1
# 05. Query with q='A1.B1'.M1==M2, no hits
#

echo "01. Create E1 with an attribute called A1.B1, with value 'A1' and with a metadata called M1='M1'"
echo "================================================================================================"
payload='{
  "id": "E1",
  "A1.B1": {
    "metadata": {
      "M1": {
        "value": "M1"
      }
    }
  }
}'
orionCurl --url '/v2/entities?options=keyValues' --payload "$payload"
echo
echo


echo "02. Query with q=A1.B1, no hits"
echo "==============================="
orionCurl --url "/v2/entities?q=A1.B1"
echo
echo


echo "03. Query with q='A1.B1', see E1"
echo "================================"
orionCurl --url "/v2/entities?q='A1.B1'"
echo
echo


echo "04. Query with q='A1.B1'.M1==M1, see E1"
echo "======================================="
orionCurl --url "/v2/entities?q='A1.B1'.M1==M1"
echo
echo


echo "05. Query with q='A1.B1'.M1==M2, no hits"
echo "========================================"
orionCurl --url "/v2/entities?q='A1.B1'.M1==M2"
echo
echo


--REGEXPECT--
01. Create E1 with an attribute called A1.B1, with value 'A1' and with a metadata called M1='M1'
================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Query with q=A1.B1, no hits
================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


03. Query with q='A1.B1', see E1
================================
HTTP/1.1 200 OK
Content-Length: 
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)
[
    {
        "A1.B1": {
            "metadata": {
                "M1": {
                    "type": "Text",
                    "value": "M1"
                }
            },
            "type": "Text",
            "value": "A1"
        },
        "id": "E1",
        "type": "Thing"
    }
]


04. Query with q='A1.B1'.M1==M1, see E1
=============================0=========
HTTP/1.1 200 OK
Content-Length: 
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)
[
    {
        "A1.B1": {
            "metadata": {
                "M1": {
                    "type": "Text",
                    "value": "M1"
                }
            },
            "type": "Text",
            "value": "A1"
        },
        "id": "E1",
        "type": "Thing"
    }
]


05. Query with q='A1.B1'.M1==M2, no hits
========================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
