# Copyright 2020 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Milliseconds for a DateTime attribute

--SHELL-INIT--
dbInit CB
brokerStart CB 0
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create an Entity E1, with an attribute 'ts' that is of DateTime type and with a value with milliseconds
# 02. GET E1 and see its 'ts' attribute with its milliseconds
# 03. Create a subscription to provoke an initial notification of E1
# 04. Dump accumulator to see the notification and especially the milliseconds of 'ts'
#

echo "01. Create an Entity E1, with an attribute 'ts' that is of DateTime type and with a value with milliseconds"
echo "==========================================================================================================="
payload='{
  "id": "E1",
  "ts": {
    "type": "DateTime",
    "value": "2020-07-03T09:24:04.456"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. GET E1 and see its 'ts' attribute with its milliseconds"
echo "==========================================================="
orionCurl --url /v2/entities/E1
echo
echo


echo "03. Create a subscription to provoke an initial notification of E1"
echo "=================================================================="
payload='
{
  "subject": {
    "entities": [
      {
        "id": "E1"
      }
    ],
    "condition": {
      "attrs": [ "ts" ]
    }
  },
  "notification": {
    "http": {"url": "http://localhost:'${LISTENER_PORT}'/notify"},
    "attrs": [ ]
  },
  "status": "active"
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "04. Dump accumulator to see the notification and especially the milliseconds of 'ts'"
echo "===================================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create an Entity E1, with an attribute 'ts' that is of DateTime type and with a value with milliseconds
===========================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET E1 and see its 'ts' attribute with its milliseconds
===========================================================
HTTP/1.1 200 OK
Content-Length: 100
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "E1",
    "ts": {
        "metadata": {},
        "type": "DateTime",
        "value": "2020-07-03T09:24:04.455Z"
    },
    "type": "Thing"
}


03. Create a subscription to provoke an initial notification of E1
==================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump accumulator to see the notification and especially the milliseconds of 'ts'
====================================================================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 155
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "id": "E1",
            "ts": {
                "metadata": {},
                "type": "DateTime",
                "value": "2020-07-03T09:24:04.455Z"
            },
            "type": "Thing"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f\-]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
