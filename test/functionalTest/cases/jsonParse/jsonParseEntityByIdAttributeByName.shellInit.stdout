{ "dropped" : "testharness", "ok" : 1 }
T@09:46:10  paConfigActions[727]: setting trace levels to '0-255'
T@09:46:10  paConfigActions[728]: Leaving function paConfigActions
E@09:46:10  exitFunc[1009]: unlink(/tmp/orion_9999.pid): No such file or directory
T@09:46:10  semInit[61]: Initialized 'req' semaphore
T@09:46:10  semInit[62]: Initialized 'mongo' semaphore
T@09:46:10  mongoSemTake[90]: mongoConnect taking the 'mongo' semaphore for 'connecting to mongo'
T@09:46:10  mongoSemTake[92]: mongoConnect has the 'mongo' semaphore
T@09:46:10  mongoConnect[152]: mongo version server: 2.4.9 (mayor: 2, minor: 4, extra: 9)
T@09:46:10  mongoSemGive[118]: mongoConnect gives the 'mongo' semaphore for 'connecting to mongo'
F@09:46:10  ***[1063]: Connected to mongo at localhost:testharness
T@09:46:10  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@09:46:10  recoverOntimeIntervalThreads[398]: query() in 'testharness.csubs' collection: '{ conditions.type: "ONTIMEINTERVAL" }'
T@09:46:10  mongoSemTake[90]: recoverOntimeIntervalThreads taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@09:46:10  mongoSemTake[92]: recoverOntimeIntervalThreads has the 'mongo' semaphore
T@09:46:10  mongoSemGive[118]: recoverOntimeIntervalThreads gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
V@09:46:10  restStart[569]: Starting HTTP daemon on IPv4 0.0.0.0 port 9999
V@09:46:10  restStart[611]: Starting HTTP daemon on IPv6 :: port 9999
T@09:46:11  connectionTreat[438]: notifyFormat: ''
T@09:46:11  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Content-Type: application/json
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Accept: application/json
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Content-Length: 202
T@09:46:11  connectionTreat[442]: HTTP tenant: ''
T@09:46:11  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 2)): 'JSON'
T@09:46:11  restService[179]: Parsing payload for URL '/NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01', method 'POST', service vector index: 31
T@09:46:11  payloadParse[53]: parsing data for service 'EntityByIdAttributeByName'. Method: 'POST'
T@09:46:11  payloadParse[54]: outFormat: JSON
2@09:46:11  jsonRequestGet[121]: Found jsonRequest of type 23, method 'POST' - index 18 (/metadatas)
T@09:46:11  jsonTreat[140]: Treating a JSON request: '{ "metadatas" : [ { "name" : "ID", "type" : "string", "value" : "1110" }, { "name" : "cm2", "type" : "string", "value" : "XXX" } ], "duration" : "PT1H", "providingApplication" : "http://kz.tid.es/abc" }'
T@09:46:11  jsonTreat[155]: Treating 'registerProviderRequest' request
T@09:46:11  treat[107]: Treating path '/metadatas', value ''
T@09:46:11  treat[113]: calling treat function for '/metadatas': ''
T@09:46:11  jsonNullTreat[41]: Not treating JSON node '/metadatas'
T@09:46:11  treat[115]: called treat function for '/metadatas'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata', value ''
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata': ''
T@09:46:11  contextMetadata[48]: Got a metadata
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/name', value 'ID'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/name': 'ID'
T@09:46:11  contextMetadataName[63]: Got a metadata name 'ID'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/name'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/type', value 'string'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/type': 'string'
T@09:46:11  contextMetadataType[76]: Got a metadata type 'string'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/type'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/value', value '1110'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/value': '1110'
T@09:46:11  contextMetadataValue[90]: Got a metadata value '1110'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/value'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata', value ''
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata': ''
T@09:46:11  contextMetadata[48]: Got a metadata
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/name', value 'cm2'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/name': 'cm2'
T@09:46:11  contextMetadataName[63]: Got a metadata name 'cm2'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/name'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/type', value 'string'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/type': 'string'
T@09:46:11  contextMetadataType[76]: Got a metadata type 'string'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/type'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/value', value 'XXX'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/value': 'XXX'
T@09:46:11  contextMetadataValue[90]: Got a metadata value 'XXX'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/value'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/duration', value 'PT1H'
T@09:46:11  treat[113]: calling treat function for '/duration': 'PT1H'
T@09:46:11  duration[103]: Got a duration 'PT1H'
T@09:46:11  treat[115]: called treat function for '/duration'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/providingApplication', value 'http://kz.tid.es/abc'
T@09:46:11  treat[113]: calling treat function for '/providingApplication': 'http://kz.tid.es/abc'
T@09:46:11  providingApplication[116]: Got a providingApplication 'http://kz.tid.es/abc'
T@09:46:11  treat[115]: called treat function for '/providingApplication'. result: 'OK'
T@09:46:11  jsonTreat[192]: Calling check for JSON parsed tree (registerProviderRequest)
T@09:46:11  payloadParse[69]: result: 'OK'
T@09:46:11  payloadParse[70]: outFormat: JSON
T@09:46:11  restService[182]: payloadParse returns 'OK'
T@09:46:11  restService[197]: Treating service POST /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@09:46:11  restService[237]: tenant: ''
T@09:46:11  Metadata[58]: 'cloning' a Metadata
T@09:46:11  Metadata[58]: 'cloning' a Metadata
T@09:46:11  reqSemTake[75]: mongoRegisterContext taking the 'req' semaphore for 'ngsi9 register request'
T@09:46:11  reqSemTake[77]: mongoRegisterContext has the 'req' semaphore
T@09:46:11  mongoRegisterContext[51]: Register Context Request
T@09:46:11  processRegisterContext[342]: Registration expiration: 1401792371
T@09:46:11  processRegisterContext[376]: Entity registration: {id: ENTITY_ID}
T@09:46:11  processRegisterContext[394]: Attribute registration: {name: ATTRIBUTE_01, type: , isDomain: false}
T@09:46:11  processRegisterContext[406]: providingApplication registration: http://kz.tid.es/abc
T@09:46:11  addTriggeredSubscriptions[255]: JS function: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true") {for (var j=0; j < enId.length; j++) {if (enId[j].match(this.entities[i].id) && this.entities[i].type == enType[j]) {return true; }}}}return false; }
T@09:46:11  addTriggeredSubscriptions[268]: query() in 'testharness.casubs' collection: '{ $or: [ { entities: { $in: [ { id: "ENTITY_ID", type: "", isPattern: "false" } ] }, $or: [ { attrs: { $in: [ "ATTRIBUTE_01" ] } }, { attrs: { $size: 0 } } ], expiration: { $gt: 1401788771 } }, { entities.isPattern: "true", expiration: { $gt: 1401788771 }, $where: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < th... } ] }'
T@09:46:11  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@09:46:11  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@09:46:11  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@09:46:11  processRegisterContext[422]: upsert update() in 'testharness.registrations' collection: '{ _id: ObjectId('538d9963d011a716699651e7'), expiration: 1401792371, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc" } ] }'
T@09:46:11  mongoSemTake[90]: processRegisterContext taking the 'mongo' semaphore for 'update in RegistrationsCollection'
T@09:46:11  mongoSemTake[92]: processRegisterContext has the 'mongo' semaphore
T@09:46:11  mongoSemGive[118]: processRegisterContext gives the 'mongo' semaphore for 'update in RegistrationsCollection'
T@09:46:11  reqSemGive[104]: mongoRegisterContext gives the 'req' semaphore for 'ngsi9 register request'
T@09:46:11  ~RegisterContextResponse[56]: destroyed
T@09:46:11  release[153]: Releasing Metadata 0
T@09:46:11  release[153]: Releasing Metadata 1
T@09:46:11  release[153]: Releasing Metadata 0
T@09:46:11  release[153]: Releasing Metadata 1
T@09:46:11  restReply[65]: Response 1: responding with 75 bytes, Status Code 200
T@09:46:11  restReply[66]: Response payload: '{
  "duration" : "PT1H",
  "registrationId" : "538d9963d011a716699651e7"
}
'
T@09:46:11  ~RegisterContextResponse[56]: destroyed
T@09:46:11  connectionTreat[438]: notifyFormat: ''
T@09:46:11  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Content-Type: application/json
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Accept: application/json
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Content-Length: 75
T@09:46:11  connectionTreat[442]: HTTP tenant: ''
T@09:46:11  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 2)): 'JSON'
T@09:46:11  restService[179]: Parsing payload for URL '/NGSI9/discoverContextAvailability', method 'POST', service vector index: 2
T@09:46:11  payloadParse[53]: parsing data for service 'DiscoverContextAvailabilityRequest'. Method: 'POST'
T@09:46:11  payloadParse[54]: outFormat: JSON
2@09:46:11  jsonRequestGet[121]: Found jsonRequest of type 2, method 'POST' - index 1 (/entities)
T@09:46:11  jsonTreat[140]: Treating a JSON request: '{ "entities": [ { "type": "", "isPattern": "false", "id": "ENTITY_ID" } ] }'
T@09:46:11  jsonTreat[155]: Treating 'discoverContextAvailabilityRequest' request
T@09:46:11  treat[107]: Treating path '/entities', value ''
T@09:46:11  treat[113]: calling treat function for '/entities': ''
T@09:46:11  jsonNullTreat[41]: Not treating JSON node '/entities'
T@09:46:11  treat[115]: called treat function for '/entities'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/entities/entity', value ''
T@09:46:11  treat[113]: calling treat function for '/entities/entity': ''
T@09:46:11  entityId[47]: /entities/entity: 
T@09:46:11  entityId[51]: New entityId at 0x108bdf0
T@09:46:11  treat[115]: called treat function for '/entities/entity'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/entities/entity/type', value ''
T@09:46:11  treat[113]: calling treat function for '/entities/entity/type': ''
T@09:46:11  entityIdType[84]: Set 'type' to '' for an entity
T@09:46:11  treat[115]: called treat function for '/entities/entity/type'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/entities/entity/isPattern', value 'false'
T@09:46:11  treat[113]: calling treat function for '/entities/entity/isPattern': 'false'
T@09:46:11  entityIdIsPattern[97]: Got an entityId:isPattern: 'false'
T@09:46:11  treat[115]: called treat function for '/entities/entity/isPattern'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/entities/entity/id', value 'ENTITY_ID'
T@09:46:11  treat[113]: calling treat function for '/entities/entity/id': 'ENTITY_ID'
T@09:46:11  entityIdId[70]: Set 'id' to 'ENTITY_ID' for an entity
T@09:46:11  treat[115]: called treat function for '/entities/entity/id'. result: 'OK'
T@09:46:11  jsonTreat[192]: Calling check for JSON parsed tree (discoverContextAvailabilityRequest)
T@09:46:11  payloadParse[69]: result: 'OK'
T@09:46:11  payloadParse[70]: outFormat: JSON
T@09:46:11  restService[182]: payloadParse returns 'OK'
T@09:46:11  restService[197]: Treating service POST /NGSI9/discoverContextAvailability
T@09:46:11  restService[237]: tenant: ''
T@09:46:11  reqSemTake[75]: mongoDiscoverContextAvailability taking the 'req' semaphore for 'mongo ngsi9 discovery request'
T@09:46:11  reqSemTake[77]: mongoDiscoverContextAvailability has the 'req' semaphore
T@09:46:11  mongoDiscoverContextAvailability[256]: DiscoverContextAvailability Request
T@09:46:11  registrationsQuery[1059]: Entity discovery without type: id 'ENTITY_ID'
T@09:46:11  registrationsQuery[1097]: query() in 'testharness.registrations' collection: '{ $or: [ { contextRegistration.entities: { $in: {} } }, { contextRegistration.entities.id: { $in: [ "ENTITY_ID" ] } } ], expiration: { $gt: 1401788771 } }'
T@09:46:11  mongoSemTake[90]: registrationsQuery taking the 'mongo' semaphore for 'query in RegistrationsCollection'
T@09:46:11  mongoSemTake[92]: registrationsQuery has the 'mongo' semaphore
T@09:46:11  mongoSemGive[118]: registrationsQuery gives the 'mongo' semaphore for 'query in RegistrationsCollection'
T@09:46:11  registrationsQuery[1124]: retrieved document: '{ _id: ObjectId('538d9963d011a716699651e7'), expiration: 1401792371, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc" } ] }'
T@09:46:11  reqSemGive[104]: mongoDiscoverContextAvailability gives the 'req' semaphore for 'mongo ngsi9 discovery request'
T@09:46:11  restReply[65]: Response 2: responding with 457 bytes, Status Code 200
T@09:46:11  restReply[66]: Response payload: '{
  "contextRegistrationResponses" : [
    {
      "contextRegistration" : {
        "entities" : [
          {
            "type" : "",
            "isPattern" : "false",
            "id" : "ENTITY_ID"
          }
        ],
        "attributes" : [
          {
            "name" : "ATTRIBUTE_01",
            "type" : "",
            "isDomain" : "false"
          }
        ],
        "providingApplication" : "http://kz.tid.es/abc"
      }
    }
  ]
}
'
T@09:46:11  ~RegisterContextResponse[56]: destroyed
T@09:46:11  connectionTreat[438]: notifyFormat: ''
T@09:46:11  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Content-Type: application/json
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Accept: application/json
T@09:46:11  httpHeaderGet[137]: HTTP Header:   Content-Length: 250
T@09:46:11  connectionTreat[442]: HTTP tenant: ''
T@09:46:11  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 2)): 'JSON'
T@09:46:11  restService[179]: Parsing payload for URL '/NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01', method 'POST', service vector index: 31
T@09:46:11  payloadParse[53]: parsing data for service 'EntityByIdAttributeByName'. Method: 'POST'
T@09:46:11  payloadParse[54]: outFormat: JSON
2@09:46:11  jsonRequestGet[121]: Found jsonRequest of type 23, method 'POST' - index 18 (/metadatas)
T@09:46:11  jsonTreat[140]: Treating a JSON request: '{ "metadatas" : [ { "name" : "ID", "type" : "string", "value" : "1111" }, { "name" : "cm2", "type" : "string", "value" : "YYY" } ], "duration" : "PT2H", "providingApplication" : "http://kz.tid.es/abc2", "registrationId" : "538d9963d011a716699651e7" }'
T@09:46:11  jsonTreat[155]: Treating 'registerProviderRequest' request
T@09:46:11  treat[107]: Treating path '/metadatas', value ''
T@09:46:11  treat[113]: calling treat function for '/metadatas': ''
T@09:46:11  jsonNullTreat[41]: Not treating JSON node '/metadatas'
T@09:46:11  treat[115]: called treat function for '/metadatas'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata', value ''
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata': ''
T@09:46:11  contextMetadata[48]: Got a metadata
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/name', value 'ID'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/name': 'ID'
T@09:46:11  contextMetadataName[63]: Got a metadata name 'ID'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/name'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/type', value 'string'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/type': 'string'
T@09:46:11  contextMetadataType[76]: Got a metadata type 'string'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/type'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/value', value '1111'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/value': '1111'
T@09:46:11  contextMetadataValue[90]: Got a metadata value '1111'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/value'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata', value ''
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata': ''
T@09:46:11  contextMetadata[48]: Got a metadata
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/name', value 'cm2'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/name': 'cm2'
T@09:46:11  contextMetadataName[63]: Got a metadata name 'cm2'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/name'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/type', value 'string'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/type': 'string'
T@09:46:11  contextMetadataType[76]: Got a metadata type 'string'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/type'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/metadatas/metadata/value', value 'YYY'
T@09:46:11  treat[113]: calling treat function for '/metadatas/metadata/value': 'YYY'
T@09:46:11  contextMetadataValue[90]: Got a metadata value 'YYY'
T@09:46:11  treat[115]: called treat function for '/metadatas/metadata/value'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/duration', value 'PT2H'
T@09:46:11  treat[113]: calling treat function for '/duration': 'PT2H'
T@09:46:11  duration[103]: Got a duration 'PT2H'
T@09:46:11  treat[115]: called treat function for '/duration'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/providingApplication', value 'http://kz.tid.es/abc2'
T@09:46:11  treat[113]: calling treat function for '/providingApplication': 'http://kz.tid.es/abc2'
T@09:46:11  providingApplication[116]: Got a providingApplication 'http://kz.tid.es/abc2'
T@09:46:11  treat[115]: called treat function for '/providingApplication'. result: 'OK'
T@09:46:11  treat[107]: Treating path '/registrationId', value '538d9963d011a716699651e7'
T@09:46:11  treat[113]: calling treat function for '/registrationId': '538d9963d011a716699651e7'
T@09:46:11  registrationId[129]: Got a registrationId '538d9963d011a716699651e7'
T@09:46:11  treat[115]: called treat function for '/registrationId'. result: 'OK'
T@09:46:11  jsonTreat[192]: Calling check for JSON parsed tree (registerProviderRequest)
T@09:46:11  payloadParse[69]: result: 'OK'
T@09:46:11  payloadParse[70]: outFormat: JSON
T@09:46:11  restService[182]: payloadParse returns 'OK'
T@09:46:11  restService[197]: Treating service POST /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@09:46:11  restService[237]: tenant: ''
T@09:46:11  Metadata[58]: 'cloning' a Metadata
T@09:46:11  Metadata[58]: 'cloning' a Metadata
T@09:46:11  reqSemTake[75]: mongoRegisterContext taking the 'req' semaphore for 'ngsi9 register request'
T@09:46:11  reqSemTake[77]: mongoRegisterContext has the 'req' semaphore
T@09:46:11  mongoRegisterContext[51]: Register Context Request
T@09:46:11  mongoSemTake[90]: mongoRegisterContext taking the 'mongo' semaphore for 'findOne from RegistrationsCollection'
T@09:46:11  mongoSemTake[92]: mongoRegisterContext has the 'mongo' semaphore
T@09:46:11  mongoSemGive[118]: mongoRegisterContext gives the 'mongo' semaphore for 'findOne from RegistrationsCollection'
T@09:46:11  processRegisterContext[342]: Registration expiration: 1401795971
T@09:46:11  processRegisterContext[376]: Entity registration: {id: ENTITY_ID}
T@09:46:11  processRegisterContext[394]: Attribute registration: {name: ATTRIBUTE_01, type: , isDomain: false}
T@09:46:11  processRegisterContext[406]: providingApplication registration: http://kz.tid.es/abc2
T@09:46:11  addTriggeredSubscriptions[255]: JS function: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true") {for (var j=0; j < enId.length; j++) {if (enId[j].match(this.entities[i].id) && this.entities[i].type == enType[j]) {return true; }}}}return false; }
T@09:46:11  addTriggeredSubscriptions[268]: query() in 'testharness.casubs' collection: '{ $or: [ { entities: { $in: [ { id: "ENTITY_ID", type: "", isPattern: "false" } ] }, $or: [ { attrs: { $in: [ "ATTRIBUTE_01" ] } }, { attrs: { $size: 0 } } ], expiration: { $gt: 1401788771 } }, { entities.isPattern: "true", expiration: { $gt: 1401788771 }, $where: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < th... } ] }'
T@09:46:11  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@09:46:11  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@09:46:11  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@09:46:11  processRegisterContext[422]: upsert update() in 'testharness.registrations' collection: '{ _id: ObjectId('538d9963d011a716699651e7'), expiration: 1401795971, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc2" } ] }'
T@09:46:11  mongoSemTake[90]: processRegisterContext taking the 'mongo' semaphore for 'update in RegistrationsCollection'
T@09:46:11  mongoSemTake[92]: processRegisterContext has the 'mongo' semaphore
T@09:46:11  mongoSemGive[118]: processRegisterContext gives the 'mongo' semaphore for 'update in RegistrationsCollection'
T@09:46:11  reqSemGive[104]: mongoRegisterContext gives the 'req' semaphore for 'ngsi9 register request'
T@09:46:11  ~RegisterContextResponse[56]: destroyed
T@09:46:11  release[153]: Releasing Metadata 0
T@09:46:11  release[153]: Releasing Metadata 1
T@09:46:11  release[153]: Releasing Metadata 0
T@09:46:11  release[153]: Releasing Metadata 1
T@09:46:11  restReply[65]: Response 3: responding with 75 bytes, Status Code 200
T@09:46:11  restReply[66]: Response payload: '{
  "duration" : "PT2H",
  "registrationId" : "538d9963d011a716699651e7"
}
'
T@09:46:11  ~RegisterContextResponse[56]: destroyed
F@09:50:23  ***[981]: In sigHandler - caught signal 15
X@09:50:23  sigHandler[987]: Received signal 15
RegisterProviderRequest:
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    1110
  Registration Metadata 1:
    Name:     cm2
    Type:     string
    Value:    XXX
  Duration: PT1H
  ProvidingApplication: http://kz.tid.es/abc
  No RegistrationId

RegisterProviderRequest:
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    1110
  Registration Metadata 1:
    Name:     cm2
    Type:     string
    Value:    XXX
  Duration: PT1H
  ProvidingApplication: http://kz.tid.es/abc
  No RegistrationId



1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  false
Attribute List
No AttributeExpression
No scopes


1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  false
Attribute List
No AttributeExpression
No scopes
1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  false
Attribute List
No AttributeExpression
No scopes


1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  false
Attribute List
No AttributeExpression
No scopes
RegisterProviderRequest:
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    1111
  Registration Metadata 1:
    Name:     cm2
    Type:     string
    Value:    YYY
  Duration: PT2H
  ProvidingApplication: http://kz.tid.es/abc2
  RegistrationId: 538d9963d011a716699651e7

RegisterProviderRequest:
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    1111
  Registration Metadata 1:
    Name:     cm2
    Type:     string
    Value:    YYY
  Duration: PT2H
  ProvidingApplication: http://kz.tid.es/abc2
  RegistrationId: 538d9963d011a716699651e7

