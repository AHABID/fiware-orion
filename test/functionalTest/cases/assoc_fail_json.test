# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# fermin at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Associations Fail Tests JSON
--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--
echo "++++++ Register new entities - HOUSES"

orionCurl --json --url "/NGSI9/registerContext" --payload '{
  "contextRegistrations": [
    {
      "entities": [
        {
          "type": "House",
          "isPattern": "false",
          "id": "house1"
        },
        {
          "type": "House",
          "isPattern": "false",
          "id": "house2"
        }
      ],
      "attributes": [
        {
          "name": "temperature",
          "isDomain": "false"
        }
      ],
      "providingApplication": "http://myHomeGateway22.org"
    }
  ],
  "duration": "PT1H",
  "registrationId": ""
}'
# ********************************************************************************
echo "++++++ Register new entities - SENSORS"

orionCurl --json --url "/NGSI9/registerContext" --payload '{
  "contextRegistrations": [
    {
      "entities": [
        {
          "type": "TemperatureSensor",
          "isPattern": "false",
          "id": "sensor1"
        },
        {
          "type": "TemperatureSensor",
          "isPattern": "false",
          "id": "sensor2"
        }
      ],
      "attributes": [
        {
          "name": "measurement",
          "isDomain": "false"
        }
      ],
      "providingApplication": "http://myHomeGateway22.org"
    }
  ],
  "duration": "PT1H",
  "registrationId": ""
}'
# ********************************************************************************
echo "++++++ Create two associations"

orionCurl --json --url "/NGSI9/registerContext" --payload '{
  "contextRegistrations": [
    {
      "metadatas": [
        {
          "name": "association1",
          "type": "Association",
          "value": {
            "source": {
              "type": "TemperatureSensor",
              "isPattern": "false",
              "id": "sensor1"
            },
            "target": {
              "type": "House",
              "isPattern": "false",
              "id": "house1"
            },
            "attributes": [
              {
                "source": "measurement",
                "target": "temperature"
              }
            ]
          }
        },
        {
          "name": "association2",
          "type": "Association",
          "value": {
            "source": {
              "type": "TemperatureSensor",
              "isPattern": "false",
              "id": "sensor2"
            },
            "target": {
              "type": "House",
              "isPattern": "false",
              "id": "house2"
            },
            "attributes": [
              {
                "source": "measurement",
                "target": "temperature"
              }
            ]
          }
        }
      ],
      "providingApplication": "http://192.168.100.1:70/application"
    }
  ],
  "duration": "PT1M",
  "registrationId": "123456789012345678901234"
}'
# ********************************************************************************
echo "++++++ Query an association"

orionCurl --json --url "/NGSI9/discoverContextAvailability" --payload '{
  "entities": [
    {
      "type": "House",
      "isPattern": "false",
      "id": "house1"
    }
  ],
  "attributes": [
    "temperature"
  ],
  "restriction": {
    "scopes": [
      {
        "type" : "IncludeAssociations",
        "value" : "SOURCES"
      }
    ]
  }
}'
# ********************************************************************************
echo "++++++ Query an association for a non existing entity"

orionCurl --json --url "/NGSI9/discoverContextAvailability" --payload '{
  "entities": [
    {
      "type": "House",
      "isPattern": "false",
      "id": "house9"
    }
  ],
  "attributes": [
    "temperature"
  ],
  "restriction": {
    "scopes": [
      {
        "type" : "IncludeAssociations",
        "value" : "SOURCES"
      }
    ]
  }
}'
# ********************************************************************************
echo "++++++ Query an association for a non existing attribute"

orionCurl --json --url "/NGSI9/discoverContextAvailability" --payload '{
  "entities": [
    {
      "type": "House",
      "isPattern": "false",
      "id": "house1"
    }
  ],
  "attributes": [
    "foobar"
  ],
  "restriction": {
    "scopes": [
      {
        "type" : "IncludeAssociations",
        "value" : "SOURCES"
      }
    ]
  }
}'

--REGEXPECT--
++++++ Register new entities - HOUSES
HTTP/1.1 200 OK
Content-Length: 75
Content-Type: application/json
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}
++++++ Register new entities - SENSORS
HTTP/1.1 200 OK
Content-Length: 75
Content-Type: application/json
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}
++++++ Create two associations
HTTP/1.1 200 OK
Content-Length: 75
Content-Type: application/json
Date: REGEX(.*)

{
    "duration": "PT1H",
    "registrationId": "REGEX([0-9a-f]{24})"
}
++++++ Query an association
HTTP/1.1 200 OK
Content-Length: 1870
Content-Type: application/json
Date: REGEX(.*)

<?xml version="1.0"?>
<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="TemperatureSensor" isPattern="false">
            <id>Sensor1</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>measurement</name>
            <type/>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://myHomeGateway22.org</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
    <contextRegistrationResponse>
      <contextRegistration>
        <registrationMetadata>
          <contextMetadata>
            <name>association1</name>
            <type>Association</type>
            <value>
              <entityAssociation>
                <sourceEntityId type="TemperatureSensor" isPattern="false">
                  <id>Sensor1</id>
                </sourceEntityId>
                <targetEntityId type="House" isPattern="false">
                  <id>House1</id>
                </targetEntityId>
              </entityAssociation>
              <attributeAssociationList>
                <attributeAssociation>
                  <sourceAttribute>measurement</sourceAttribute>
                  <targetAttribute>temperature</targetAttribute>
                </attributeAssociation>
              </attributeAssociationList>
            </value>
          </contextMetadata>
        </registrationMetadata>
        <providingApplication>http://www.fi-ware.eu/NGSI/association</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
++++++ Query an association for a non existing entity
HTTP/1.1 200 OK
Content-Length: 171
Content-Type: application/json
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "providingApplication": "http://www.fi-ware.eu/NGSI/association"
            }
        }
    ]
}
++++++ Query an association for a non existing attribute
HTTP/1.1 200 OK
Content-Length: 171
Content-Type: application/json
Date: REGEX(.*)

{
    "contextRegistrationResponses": [
        {
            "contextRegistration": {
                "providingApplication": "http://www.fi-ware.eu/NGSI/association"
            }
        }
    ]
}
--TEARDOWN--
brokerStop CB