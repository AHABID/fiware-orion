# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
ConvOp putIndividualContextEntityAttributeWithTypeAndId: PUT /v1/contextEntities/type/{entity::type}/id/{entity::id}/attributes/{attribute::name}

--SHELL-INIT--
dbInit CB
dbInit CP1
brokerStart CB  0
brokerStart CP1 0

--SHELL--

#
# 01. PUT /v1/contextEntities/type/T1/id/E1/attributes/A1, and see it fail
# 02. Update/APPEND E1-T1-A1=2
# 03. PUT /v1/contextEntities/type/T1/id/E1/attributes/A1,A1=3 and see it work
#

echo "01. PUT /v1/contextEntities/type/T1/id/E1/attributes/A1, and see it fail"
echo "========================================================================"
payload='{
    "value": 1
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1/attributes/A1 --payload "$payload" -X PUT --json
echo
echo


echo "02. Update/APPEND E1-T1-A1=2"
echo "============================"
payload='{
  "contextElements": [
    {
      "type" : "T1",
      "id"   : "E1",
      "attributes" : [
        {
          "name" : "A1",
          "value" : 2
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "03. PUT /v1/contextEntities/type/T1/id/E1/attributes/A1,A1=3 and see it work"
echo "============================================================================"
payload='{
    "value": 3
}'
orionCurl --url /v1/contextEntities/type/T1/id/E1/attributes/A1 --payload "$payload" -X PUT --json
echo
echo


--REGEXPECT--
01. PUT /v1/contextEntities/type/T1/id/E1/attributes/A1, and see it fail
========================================================================
HTTP/1.1 200 OK
Content-Length: 88
Content-Type: application/json
Date: REGEX(.*)

{
    "code": "404", 
    "details": "E1", 
    "reasonPhrase": "No context element found"
}


02. Update/APPEND E1-T1-A1=2
============================
HTTP/1.1 200 OK
Content-Length: 377
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1", 
                        "type": "", 
                        "value": ""
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. PUT /v1/contextEntities/type/T1/id/E1/attributes/A1,A1=3 and see it work
============================================================================
HTTP/1.1 200 OK
Content-Length: 46
Content-Type: application/json
Date: REGEX(.*)

{
    "code": "200", 
    "reasonPhrase": "OK"
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1

