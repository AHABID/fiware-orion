# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Onchange Notification Trigger

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. Update/APPEND qa_ok/region/sanity_status+_timestamp
# 02. ONCHANGE-Subscribe to */region for accumulator
# 03. Dump accumulator, see initial notification
# 04. Reset accumulator
# 05. Update/UPDATE qa_ok/region/_timestamp
# 06. Dump accumulator, see no notification (this was the bug)
# 07. Update/UPDATE qa_ok/region/sanity_status
# 08. Dump accumulator, see the notification
#

echo "01. Update/APPEND qa_ok/region/sanity_status+_timestamp"
echo "======================================================="
payload='<?xml version="1.0" encoding="UTF-8"?>
<updateContextRequest>
    <contextElementList>
        <contextElement>
            <entityId type="region" isPattern="false">
                <id>qa_ok</id>
            </entityId>
            <contextAttributeList>
                <contextAttribute>
                    <name>sanity_status</name>
                    <type>string</type>
                    <contextValue>OK</contextValue>
                </contextAttribute>
                <contextAttribute>
                    <name>_timestamp</name>
                    <type>string</type>
                    <contextValue>333</contextValue>
                </contextAttribute>
            </contextAttributeList>
        </contextElement>
    </contextElementList>
    <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "02. ONCHANGE-Subscribe to */region for accumulator"
echo "=================================================="
payload='{
     "entities": [
         {
             "type": "region",
             "isPattern": "true",
             "id": ".*"
         }
     ],
     "attributes": [
         "sanity_status"
     ],
     "reference": "http://localhost:'${LISTENER_PORT}'/notify",
     "duration": "PT10M",
     "notifyConditions": [
         {
             "type": "ONCHANGE",
             "condValues": [
                 "sanity_status"
             ]
         }
     ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload" --json
echo
echo


echo "03. Dump accumulator, see initial notification"
echo "=============================================="
sleep 1
accumulatorDump
echo
echo


echo "04. Reset accumulator"
echo "====================="
curl localhost:${LISTENER_PORT}/reset -s -S -X POST
echo
echo


echo "05. Update/UPDATE qa_ok/region/_timestamp"
echo "========================================="
payload='{
  "contextElements": [
    {
      "id": "qa_ok",
      "type": "region",
      "attributes": [
        {
          "name": "_timestamp",
          "type": "string",
          "value": "_timestamp in step 05"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "06. Dump accumulator, see no notification (this was the bug)"
echo "============================================================"
sleep 1
accumulatorDump
echo
echo


echo "07. Update/UPDATE qa_ok/region/sanity_status"
echo "============================================"
payload='{
  "contextElements": [
    {
      "id": "qa_ok",
      "type": "region",
      "attributes": [
        {
          "name": "sanity_status",
          "type": "string",
          "value": "sanity_status in step 07"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "08. Dump accumulator, see the notification"
echo "=========================================="
sleep 1
accumulatorDump
echo
echo


--REGEXPECT--
01. Update/APPEND qa_ok/region/sanity_status+_timestamp
=======================================================
HTTP/1.1 200 OK
Content-Length: 808
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="region" isPattern="false">
          <id>qa_ok</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>sanity_status</name>
            <type>string</type>
            <contextValue/>
          </contextAttribute>
          <contextAttribute>
            <name>_timestamp</name>
            <type>string</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>


02. ONCHANGE-Subscribe to */region for accumulator
==================================================
HTTP/1.1 200 OK
Content-Length: 110
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "PT10M", 
        "subscriptionId": "REGEX([0-9a-f]{24})"
    }
}


03. Dump accumulator, see initial notification
==============================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 482
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "region",
        "isPattern" : "false",
        "id" : "qa_ok",
        "attributes" : [
          {
            "name" : "sanity_status",
            "type" : "string",
            "value" : "OK"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


04. Reset accumulator
=====================


05. Update/UPDATE qa_ok/region/_timestamp
=========================================
HTTP/1.1 200 OK
Content-Length: 398
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "_timestamp", 
                        "type": "string", 
                        "value": ""
                    }
                ], 
                "id": "qa_ok", 
                "isPattern": "false", 
                "type": "region"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Dump accumulator, see no notification (this was the bug)
============================================================


07. Update/UPDATE qa_ok/region/sanity_status
============================================
HTTP/1.1 200 OK
Content-Length: 401
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "sanity_status", 
                        "type": "string", 
                        "value": ""
                    }
                ], 
                "id": "qa_ok", 
                "isPattern": "false", 
                "type": "region"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


08. Dump accumulator, see the notification
==========================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 504
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "region",
        "isPattern" : "false",
        "id" : "qa_ok",
        "attributes" : [
          {
            "name" : "sanity_status",
            "type" : "string",
            "value" : "sanity_status in step 07"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
