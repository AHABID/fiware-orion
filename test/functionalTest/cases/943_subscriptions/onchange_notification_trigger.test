# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Onchange Notification Trigger

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. ONCHANGE-Subscribe to E1/A1 for accumulator
# 02. Update/APPEND E1/A1+A2
# 03. Dump accumulator, see initial notification
# 04. Reset accumulator
# 05. Update/UPDATE E1/A2
# 06. Dump accumulator, see no notification (this was the bug)
# 07. Update/UPDATE E1/A1
# 08. Dump accumulator, see the notification
#

echo "01. ONCHANGE-Subscribe to E1/A1 for accumulator"
echo "==============================================="
payload='{
  "entities": [
    {
        "id":   "E1",
        "type": "T1"
    }
  ],
  "attributes": [
    "A1"
  ],
  "reference": "http://localhost:'${LISTENER_PORT}'/notify",
  "duration": "P1M",
  "throttling": "PT1S",
  "notifyConditions": [
    {
        "type": "ONCHANGE",
        "condValues": [
            "A1"
        ]
    }
  ]
}'
orionCurl --url /v1/subscribeContext --payload "$payload" --json
echo
echo


echo "02. Update/APPEND E1/A1+A2"
echo "=========================="
payload='{
  "contextElements": [
    {
      "id": "E1",
      "type": "T1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "A1 in step 02"
        },
        {
          "name": "A2",
          "type": "string",
          "value": "A2 in step 02"
        }
      ]
    }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "03. Dump accumulator, see initial notification"
echo "=============================================="
sleep 1
accumulatorDump
echo
echo


echo "04. Reset accumulator"
echo "====================="
curl localhost:${LISTENER_PORT}/reset -s -S -X POST
echo
echo


echo "05. Update/UPDATE E1/A2"
echo "======================="
payload='{
  "contextElements": [
    {
      "id": "E1",
      "type": "T1",
      "attributes": [
        {
          "name": "A2",
          "type": "string",
          "value": "A2 in step 05"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "06. Dump accumulator, see no notification (this was the bug)"
echo "============================================================"
sleep 1
accumulatorDump
echo
echo


echo "07. Update/UPDATE E1/A1"
echo "======================="
payload='{
  "contextElements": [
    {
      "id": "E1",
      "type": "T1",
      "attributes": [
        {
          "name": "A1",
          "type": "string",
          "value": "A1 in step 07"
        }
      ]
    }
  ],
  "updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "08. Dump accumulator, see the notification"
echo "=========================================="
sleep 1
accumulatorDump
echo
echo


--REGEXPECT--
01. ONCHANGE-Subscribe to E1/A1 for accumulator
===============================================
HTTP/1.1 200 OK
Content-Length: 135
Content-Type: application/json
Date: REGEX(.*)

{
    "subscribeResponse": {
        "duration": "P1M", 
        "subscriptionId": "REGEX([0-9a-f]{24})", 
        "throttling": "PT1S"
    }
}


02. Update/APPEND E1/A1+A2
==========================
HTTP/1.1 200 OK
Content-Length: 491
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1", 
                        "type": "string", 
                        "value": ""
                    }, 
                    {
                        "name": "A2", 
                        "type": "string", 
                        "value": ""
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. Dump accumulator, see initial notification
==============================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 475
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T1",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "A1",
            "type" : "string",
            "value" : "A1 in step 02"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


04. Reset accumulator
=====================


05. Update/UPDATE E1/A2
=======================
HTTP/1.1 200 OK
Content-Length: 383
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A2", 
                        "type": "string", 
                        "value": ""
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


06. Dump accumulator, see no notification (this was the bug)
============================================================


07. Update/UPDATE E1/A1
=======================
HTTP/1.1 200 OK
Content-Length: 383
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "A1", 
                        "type": "string", 
                        "value": ""
                    }
                ], 
                "id": "E1", 
                "isPattern": "false", 
                "type": "T1"
            }, 
            "statusCode": {
                "code": "200", 
                "reasonPhrase": "OK"
            }
        }
    ]
}


08. Dump accumulator, see the notification
==========================================
POST http://localhost:REGEX(\d+)/notify
Content-Length: 475
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Host: localhost:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/json

{
  "subscriptionId" : "REGEX([0-9a-f]{24})",
  "originator" : "localhost",
  "contextResponses" : [
    {
      "contextElement" : {
        "type" : "T1",
        "isPattern" : "false",
        "id" : "E1",
        "attributes" : [
          {
            "name" : "A1",
            "type" : "string",
            "value" : "A1 in step 07"
          }
        ]
      },
      "statusCode" : {
        "code" : "200",
        "reasonPhrase" : "OK"
      }
    }
  ]
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
