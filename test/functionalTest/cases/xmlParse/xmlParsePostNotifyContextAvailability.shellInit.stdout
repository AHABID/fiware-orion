{ "dropped" : "testharness", "ok" : 1 }
T@17:45:40  paConfigActions[727]: setting trace levels to '0-255'
T@17:45:40  paConfigActions[728]: Leaving function paConfigActions
E@17:45:40  exitFunc[1009]: unlink(/tmp/orion_9999.pid): No such file or directory
T@17:45:40  semInit[61]: Initialized 'req' semaphore
T@17:45:40  semInit[62]: Initialized 'mongo' semaphore
T@17:45:40  mongoSemTake[90]: mongoConnect taking the 'mongo' semaphore for 'connecting to mongo'
T@17:45:40  mongoSemTake[92]: mongoConnect has the 'mongo' semaphore
T@17:45:40  mongoConnect[152]: mongo version server: 2.4.9 (mayor: 2, minor: 4, extra: 9)
T@17:45:40  mongoSemGive[118]: mongoConnect gives the 'mongo' semaphore for 'connecting to mongo'
F@17:45:40  ***[1063]: Connected to mongo at localhost:testharness
T@17:45:40  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:40  recoverOntimeIntervalThreads[398]: query() in 'testharness.csubs' collection: '{ conditions.type: "ONTIMEINTERVAL" }'
T@17:45:40  mongoSemTake[90]: recoverOntimeIntervalThreads taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:40  mongoSemTake[92]: recoverOntimeIntervalThreads has the 'mongo' semaphore
T@17:45:40  mongoSemGive[118]: recoverOntimeIntervalThreads gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
V@17:45:40  restStart[569]: Starting HTTP daemon on IPv4 0.0.0.0 port 9999
V@17:45:40  restStart[611]: Starting HTTP daemon on IPv6 :: port 9999
T@17:45:41  connectionTreat[438]: notifyFormat: ''
T@17:45:41  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Content-Length: 1067
T@17:45:41  connectionTreat[442]: HTTP tenant: ''
T@17:45:41  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:41  restService[179]: Parsing payload for URL '/NGSI9/notifyContextAvailability', method 'POST', service vector index: 10
T@17:45:41  payloadParse[53]: parsing data for service 'NotifyContextAvailabilityRequest'. Method: 'POST'
T@17:45:41  payloadParse[54]: outFormat: XML
T@17:45:41  payloadParse[58]: Calling xmlTreat for service request 9, payloadWord 'notifyContextAvailabilityRequest'
2@17:45:41  xmlRequestGet[155]: Found xmlRequest of type 9, method 'POST' - index 10 (/notifyContextAvailabilityRequest)
T@17:45:41  nullTreat[272]: Not treating node 'notifyContextAvailabilityRequest'
T@17:45:41  subscriptionId[101]: Got a subscriptionId: '012345678901234567890123'
T@17:45:41  nullTreat[272]: Not treating node 'contextRegistrationResponseList'
T@17:45:41  contextRegistrationResponse[115]: Got a contextRegistrationResponse
T@17:45:41  nullTreat[272]: Not treating node 'contextRegistration'
T@17:45:41  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:41  entityId[131]: Got an entityId
T@17:45:41  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:41  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:41  entityIdId[152]: Got an entityIdId: 'ConferenceRoom'
T@17:45:41  entityId[131]: Got an entityId
T@17:45:41  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:41  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:41  entityIdId[152]: Got an entityIdId: 'OfficeRoom'
T@17:45:41  nullTreat[272]: Not treating node 'contextRegistrationAttributeList'
T@17:45:41  contextRegistrationAttribute[166]: Got a contextRegistrationAttribute
T@17:45:41  contextRegistrationAttributeName[181]: Got a contextRegistrationAttributeName: 'temperature'
T@17:45:41  contextRegistrationAttributeType[195]: Got a contextRegistrationAttributeType: 'degree'
T@17:45:41  contextRegistrationAttributeIsDomain[209]: Got a contextRegistrationAttributeIsDomain: 'false'
T@17:45:41  nullTreat[272]: Not treating node 'metadata'
T@17:45:41  attributeMetadata[223]: Got an attributeMetadata: ' '
T@17:45:41  attributeMetadataName[239]: Got an attributeMetadataName: 'ID'
T@17:45:41  attributeMetadataType[252]: Got an attributeMetadataType: 'string'
T@17:45:41  attributeMetadataValue[265]: Got an attributeMetadataValue: '1110'
T@17:45:41  nullTreat[272]: Not treating node 'registrationMetadata'
T@17:45:41  registrationMetadata[278]: Got a registrationMetadata: ' '
T@17:45:41  registrationMetadataName[293]: Got a registrationMetadataName: 'ID'
T@17:45:41  registrationMetadataType[306]: Got a registrationMetadataType: 'string'
T@17:45:41  registrationMetadataValue[319]: Got a registrationMetadataValue: '2212'
T@17:45:41  providingApplication[332]: Got a providingApplication: 'http://192.168.100.1:70/application'
T@17:45:41  xmlTreat[251]: Calling check for XML parsed tree (notifyContextAvailabilityRequest)
T@17:45:41  payloadParse[69]: result: 'OK'
T@17:45:41  payloadParse[70]: outFormat: XML
T@17:45:41  restService[182]: payloadParse returns 'OK'
T@17:45:41  restService[197]: Treating service POST /NGSI9/notifyContextAvailability
T@17:45:41  restService[237]: tenant: ''
T@17:45:41  reqSemTake[75]: mongoNotifyContextAvailability taking the 'req' semaphore for 'mongo ngsi9 notification'
T@17:45:41  reqSemTake[77]: mongoNotifyContextAvailability has the 'req' semaphore
T@17:45:41  processRegisterContext[342]: Registration expiration: 1401731141
T@17:45:41  processRegisterContext[380]: Entity registration: {id: ConferenceRoom, type: Room}
T@17:45:41  processRegisterContext[380]: Entity registration: {id: OfficeRoom, type: Room}
T@17:45:41  processRegisterContext[394]: Attribute registration: {name: temperature, type: degree, isDomain: false}
T@17:45:41  processRegisterContext[406]: providingApplication registration: http://192.168.100.1:70/application
T@17:45:41  addTriggeredSubscriptions[255]: JS function: function(){enId = [ "ConferenceRoom" ,"OfficeRoom" ];enType = [ "Room" ,"Room" ];for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true") {for (var j=0; j < enId.length; j++) {if (enId[j].match(this.entities[i].id) && this.entities[i].type == enType[j]) {return true; }}}}return false; }
T@17:45:41  addTriggeredSubscriptions[268]: query() in 'testharness.casubs' collection: '{ $or: [ { entities: { $in: [ { id: "ConferenceRoom", type: "Room", isPattern: "false" }, { id: "OfficeRoom", type: "Room", isPattern: "false" } ] }, $or: [ { attrs: { $in: [ "temperature" ] } }, { attrs: { $size: 0 } } ], expiration: { $gt: 1401644741 } }, { entities.isPattern: "true", expiration: { $gt: 1401644741 }, $where: function(){enId = [ "ConferenceRoom" ,"OfficeRoom" ];enType = [ "Room"... } ] }'
T@17:45:41  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:41  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:41  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:41  processRegisterContext[422]: upsert update() in 'testharness.registrations' collection: '{ _id: ObjectId('538b66c5f5de5c8e1356ae9a'), expiration: 1401731141, contextRegistration: [ { entities: [ { id: "ConferenceRoom", type: "Room" }, { id: "OfficeRoom", type: "Room" } ], attrs: [ { name: "temperature", type: "degree", isDomain: "false" } ], providingApplication: "http://192.168.100.1:70/application" } ] }'
T@17:45:41  mongoSemTake[90]: processRegisterContext taking the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:41  mongoSemTake[92]: processRegisterContext has the 'mongo' semaphore
T@17:45:41  mongoSemGive[118]: processRegisterContext gives the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:41  reqSemGive[104]: mongoNotifyContextAvailability gives the 'req' semaphore for 'mongo ngsi9 notification'
T@17:45:41  ~RegisterContextResponse[56]: destroyed
T@17:45:41  release[153]: Releasing Metadata 0
T@17:45:41  release[153]: Releasing Metadata 0
T@17:45:41  restReply[65]: Response 1: responding with 165 bytes, Status Code 200
T@17:45:41  restReply[66]: Response payload: '<notifyContextAvailabilityResponse>
  <responseCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </responseCode>
</notifyContextAvailabilityResponse>
'
T@17:45:41  ~RegisterContextResponse[56]: destroyed
T@17:45:41  connectionTreat[438]: notifyFormat: ''
T@17:45:41  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:41  httpHeaderGet[137]: HTTP Header:   Content-Length: 1066
T@17:45:41  connectionTreat[442]: HTTP tenant: ''
T@17:45:41  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:41  restService[179]: Parsing payload for URL '/NGSI9/notifyContextAvailability', method 'POST', service vector index: 10
T@17:45:41  payloadParse[53]: parsing data for service 'NotifyContextAvailabilityRequest'. Method: 'POST'
T@17:45:41  payloadParse[54]: outFormat: XML
T@17:45:41  payloadParse[58]: Calling xmlTreat for service request 9, payloadWord 'notifyContextAvailabilityRequest'
2@17:45:41  xmlRequestGet[155]: Found xmlRequest of type 9, method 'POST' - index 10 (/notifyContextAvailabilityRequest)
T@17:45:41  nullTreat[272]: Not treating node 'notifyContextAvailabilityRequest'
T@17:45:41  subscriptionId[101]: Got a subscriptionId: '01234567890123456789012'
T@17:45:41  nullTreat[272]: Not treating node 'contextRegistrationResponseList'
T@17:45:41  contextRegistrationResponse[115]: Got a contextRegistrationResponse
T@17:45:41  nullTreat[272]: Not treating node 'contextRegistration'
T@17:45:41  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:41  entityId[131]: Got an entityId
T@17:45:41  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:41  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:41  entityIdId[152]: Got an entityIdId: 'ConferenceRoom'
T@17:45:41  entityId[131]: Got an entityId
T@17:45:41  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:41  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:41  entityIdId[152]: Got an entityIdId: 'OfficeRoom'
T@17:45:41  nullTreat[272]: Not treating node 'contextRegistrationAttributeList'
T@17:45:41  contextRegistrationAttribute[166]: Got a contextRegistrationAttribute
T@17:45:41  contextRegistrationAttributeName[181]: Got a contextRegistrationAttributeName: 'temperature'
T@17:45:41  contextRegistrationAttributeType[195]: Got a contextRegistrationAttributeType: 'degree'
T@17:45:41  contextRegistrationAttributeIsDomain[209]: Got a contextRegistrationAttributeIsDomain: 'false'
T@17:45:41  nullTreat[272]: Not treating node 'metadata'
T@17:45:41  attributeMetadata[223]: Got an attributeMetadata: ' '
T@17:45:41  attributeMetadataName[239]: Got an attributeMetadataName: 'ID'
T@17:45:41  attributeMetadataType[252]: Got an attributeMetadataType: 'string'
T@17:45:41  attributeMetadataValue[265]: Got an attributeMetadataValue: '1110'
T@17:45:41  nullTreat[272]: Not treating node 'registrationMetadata'
T@17:45:41  registrationMetadata[278]: Got a registrationMetadata: ' '
T@17:45:41  registrationMetadataName[293]: Got a registrationMetadataName: 'ID'
T@17:45:41  registrationMetadataType[306]: Got a registrationMetadataType: 'string'
T@17:45:41  registrationMetadataValue[319]: Got a registrationMetadataValue: '2212'
T@17:45:41  providingApplication[332]: Got a providingApplication: 'http://192.168.100.1:70/application'
T@17:45:41  xmlTreat[251]: Calling check for XML parsed tree (notifyContextAvailabilityRequest)
E@17:45:41  xmlTreat[254]: check(notifyContextAvailabilityRequest): <notifyContextAvailabilityResponse>
  <responseCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>bad length (24 chars expected)</details>
  </responseCode>
</notifyContextAvailabilityResponse>

T@17:45:41  payloadParse[69]: result: '<notifyContextAvailabilityResponse>
  <responseCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>bad length (24 chars expected)</details>
  </responseCode>
</notifyContextAvailabilityResponse>
'
T@17:45:41  payloadParse[70]: outFormat: XML
T@17:45:41  restReply[65]: Response 2: responding with 228 bytes, Status Code 200
T@17:45:41  restReply[66]: Response payload: '<notifyContextAvailabilityResponse>
  <responseCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>bad length (24 chars expected)</details>
  </responseCode>
</notifyContextAvailabilityResponse>
'
T@17:45:41  restService[182]: payloadParse returns '<notifyContextAvailabilityResponse>
  <responseCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>bad length (24 chars expected)</details>
  </responseCode>
</notifyContextAvailabilityResponse>
'
T@17:45:41  restReply[65]: Response 3: responding with 228 bytes, Status Code 200
T@17:45:41  restReply[66]: Response payload: '<notifyContextAvailabilityResponse>
  <responseCode>
    <code>400</code>
    <reasonPhrase>Bad Request</reasonPhrase>
    <details>bad length (24 chars expected)</details>
  </responseCode>
</notifyContextAvailabilityResponse>
'
T@17:45:41  release[153]: Releasing Metadata 0
T@17:45:41  release[153]: Releasing Metadata 0
T@17:45:41  ~RegisterContextResponse[56]: destroyed
F@17:45:41  ***[981]: In sigHandler - caught signal 15
X@17:45:41  sigHandler[987]: Received signal 15


SubscriptionId: 012345678901234567890123
1 ContextRegistrationResponsescontext registration:
2 EntityIds:
  Entity Id 0:
    Id:         ConferenceRoom
    Type:       Room
    isPattern:  false
  Entity Id 1:
    Id:         OfficeRoom
    Type:       Room
    isPattern:  false
1 ContextRegistrationAttributes  Attribute 0:
    Name:       temperature
    Type:       degree
    isDomain:   false
1 Attribute Metadata
    Attribute Metadata 0:
      Name:     ID
      Type:     string
      Value:    1110
1 Registration Metadata
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    2212
  ProvidingApplication: http://192.168.100.1:70/application
Code:            0
ReasonPhrase:    ''
Detail:          ''
Tag:             'errorCode'


SubscriptionId: 01234567890123456789012
1 ContextRegistrationResponsescontext registration:
2 EntityIds:
  Entity Id 0:
    Id:         ConferenceRoom
    Type:       Room
    isPattern:  false
  Entity Id 1:
    Id:         OfficeRoom
    Type:       Room
    isPattern:  false
1 ContextRegistrationAttributes  Attribute 0:
    Name:       temperature
    Type:       degree
    isDomain:   false
1 Attribute Metadata
    Attribute Metadata 0:
      Name:     ID
      Type:     string
      Value:    1110
1 Registration Metadata
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    2212
  ProvidingApplication: http://192.168.100.1:70/application
Code:            0
ReasonPhrase:    ''
Detail:          ''
Tag:             'errorCode'
