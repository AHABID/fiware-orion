{ "dropped" : "testharness", "ok" : 1 }
T@17:45:33  paConfigActions[727]: setting trace levels to '0-255'
T@17:45:33  paConfigActions[728]: Leaving function paConfigActions
E@17:45:33  exitFunc[1009]: unlink(/tmp/orion_9999.pid): No such file or directory
T@17:45:33  semInit[61]: Initialized 'req' semaphore
T@17:45:33  semInit[62]: Initialized 'mongo' semaphore
T@17:45:33  mongoSemTake[90]: mongoConnect taking the 'mongo' semaphore for 'connecting to mongo'
T@17:45:33  mongoSemTake[92]: mongoConnect has the 'mongo' semaphore
T@17:45:33  mongoConnect[152]: mongo version server: 2.4.9 (mayor: 2, minor: 4, extra: 9)
T@17:45:33  mongoSemGive[118]: mongoConnect gives the 'mongo' semaphore for 'connecting to mongo'
F@17:45:33  ***[1063]: Connected to mongo at localhost:testharness
T@17:45:33  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:33  recoverOntimeIntervalThreads[398]: query() in 'testharness.csubs' collection: '{ conditions.type: "ONTIMEINTERVAL" }'
T@17:45:33  mongoSemTake[90]: recoverOntimeIntervalThreads taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:33  mongoSemTake[92]: recoverOntimeIntervalThreads has the 'mongo' semaphore
T@17:45:33  mongoSemGive[118]: recoverOntimeIntervalThreads gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
V@17:45:33  restStart[569]: Starting HTTP daemon on IPv4 0.0.0.0 port 9999
V@17:45:33  restStart[611]: Starting HTTP daemon on IPv6 :: port 9999
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Length: 392
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[179]: Parsing payload for URL '/NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01', method 'POST', service vector index: 31
T@17:45:34  payloadParse[53]: parsing data for service 'EntityByIdAttributeByName'. Method: 'POST'
T@17:45:34  payloadParse[54]: outFormat: XML
T@17:45:34  payloadParse[58]: Calling xmlTreat for service request 23, payloadWord 'registerProviderRequest'
2@17:45:34  xmlRequestGet[155]: Found xmlRequest of type 23, method 'POST' - index 26 (/registerProviderRequest)
T@17:45:34  nullTreat[272]: Not treating node 'registerProviderRequest'
T@17:45:34  nullTreat[272]: Not treating node 'metadata'
T@17:45:34  contextMetadata[48]: Got a metadata
T@17:45:34  contextMetadataName[62]: Got a metadata name 'ID'
T@17:45:34  contextMetadataType[75]: Got a metadata type 'string'
T@17:45:34  contextMetadataValue[88]: Got a metadata value '1110'
T@17:45:34  contextMetadata[48]: Got a metadata
T@17:45:34  contextMetadataName[62]: Got a metadata name 'cm2'
T@17:45:34  contextMetadataType[75]: Got a metadata type 'string'
T@17:45:34  contextMetadataValue[88]: Got a metadata value 'XXX'
T@17:45:34  duration[101]: Got a duration 'PT1H'
T@17:45:34  providingApplication[114]: Got a providingApplication 'http://kz.tid.es/abc'
T@17:45:34  xmlTreat[251]: Calling check for XML parsed tree (registerProviderRequest)
T@17:45:34  payloadParse[69]: result: 'OK'
T@17:45:34  payloadParse[70]: outFormat: XML
T@17:45:34  restService[182]: payloadParse returns 'OK'
T@17:45:34  restService[197]: Treating service POST /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@17:45:34  restService[237]: tenant: ''
T@17:45:34  Metadata[58]: 'cloning' a Metadata
T@17:45:34  Metadata[58]: 'cloning' a Metadata
T@17:45:34  reqSemTake[75]: mongoRegisterContext taking the 'req' semaphore for 'ngsi9 register request'
T@17:45:34  reqSemTake[77]: mongoRegisterContext has the 'req' semaphore
T@17:45:34  mongoRegisterContext[51]: Register Context Request
T@17:45:34  processRegisterContext[342]: Registration expiration: 1401648334
T@17:45:34  processRegisterContext[376]: Entity registration: {id: ENTITY_ID}
T@17:45:34  processRegisterContext[394]: Attribute registration: {name: ATTRIBUTE_01, type: , isDomain: false}
T@17:45:34  processRegisterContext[406]: providingApplication registration: http://kz.tid.es/abc
T@17:45:34  addTriggeredSubscriptions[255]: JS function: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true") {for (var j=0; j < enId.length; j++) {if (enId[j].match(this.entities[i].id) && this.entities[i].type == enType[j]) {return true; }}}}return false; }
T@17:45:34  addTriggeredSubscriptions[268]: query() in 'testharness.casubs' collection: '{ $or: [ { entities: { $in: [ { id: "ENTITY_ID", type: "", isPattern: "false" } ] }, $or: [ { attrs: { $in: [ "ATTRIBUTE_01" ] } }, { attrs: { $size: 0 } } ], expiration: { $gt: 1401644734 } }, { entities.isPattern: "true", expiration: { $gt: 1401644734 }, $where: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < th... } ] }'
T@17:45:34  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:34  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:34  processRegisterContext[422]: upsert update() in 'testharness.registrations' collection: '{ _id: ObjectId('538b66be0d4f0cdede01f069'), expiration: 1401648334, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc" } ] }'
T@17:45:34  mongoSemTake[90]: processRegisterContext taking the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: processRegisterContext has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: processRegisterContext gives the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:34  reqSemGive[104]: mongoRegisterContext gives the 'req' semaphore for 'ngsi9 register request'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  release[153]: Releasing Metadata 0
T@17:45:34  release[153]: Releasing Metadata 1
T@17:45:34  release[153]: Releasing Metadata 0
T@17:45:34  release[153]: Releasing Metadata 1
T@17:45:34  restReply[65]: Response 1: responding with 141 bytes, Status Code 200
T@17:45:34  restReply[66]: Response payload: '<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>538b66be0d4f0cdede01f069</registrationId>
</registerContextResponse>
'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Length: 194
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[179]: Parsing payload for URL '/NGSI9/discoverContextAvailability', method 'POST', service vector index: 2
T@17:45:34  payloadParse[53]: parsing data for service 'DiscoverContextAvailabilityRequest'. Method: 'POST'
T@17:45:34  payloadParse[54]: outFormat: XML
T@17:45:34  payloadParse[58]: Calling xmlTreat for service request 2, payloadWord 'discoverContextAvailabilityRequest'
2@17:45:34  xmlRequestGet[155]: Found xmlRequest of type 2, method 'POST' - index 2 (/discoverContextAvailabilityRequest)
T@17:45:34  nullTreat[272]: Not treating node 'discoverContextAvailabilityRequest'
T@17:45:34  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:34  entityId[49]: Got an entityId
T@17:45:34  entityIdParse[291]: Got a type for an entity: ''
T@17:45:34  entityIdParse[296]: Got an isPattern for an entity: 'true'
T@17:45:34  entityIdId[70]: Got an entityId:id: 'ENTITY_ID'
T@17:45:34  xmlTreat[251]: Calling check for XML parsed tree (discoverContextAvailabilityRequest)
T@17:45:34  payloadParse[69]: result: 'OK'
T@17:45:34  payloadParse[70]: outFormat: XML
T@17:45:34  restService[182]: payloadParse returns 'OK'
T@17:45:34  restService[197]: Treating service POST /NGSI9/discoverContextAvailability
T@17:45:34  restService[237]: tenant: ''
T@17:45:34  reqSemTake[75]: mongoDiscoverContextAvailability taking the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  reqSemTake[77]: mongoDiscoverContextAvailability has the 'req' semaphore
T@17:45:34  mongoDiscoverContextAvailability[256]: DiscoverContextAvailability Request
T@17:45:34  registrationsQuery[1097]: query() in 'testharness.registrations' collection: '{ $or: [ { contextRegistration.entities.id: /ENTITY_ID/ }, { contextRegistration.entities: { $in: {} } }, { contextRegistration.entities.id: { $in: {} } } ], expiration: { $gt: 1401644734 } }'
T@17:45:34  mongoSemTake[90]: registrationsQuery taking the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: registrationsQuery has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: registrationsQuery gives the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  registrationsQuery[1124]: retrieved document: '{ _id: ObjectId('538b66be0d4f0cdede01f069'), expiration: 1401648334, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc" } ] }'
T@17:45:34  reqSemGive[104]: mongoDiscoverContextAvailability gives the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  restReply[65]: Response 2: responding with 770 bytes, Status Code 200
T@17:45:34  restReply[66]: Response payload: '<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>ATTRIBUTE_01</name>
            <type></type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://kz.tid.es/abc</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Length: 451
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[179]: Parsing payload for URL '/NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01', method 'POST', service vector index: 31
T@17:45:34  payloadParse[53]: parsing data for service 'EntityByIdAttributeByName'. Method: 'POST'
T@17:45:34  payloadParse[54]: outFormat: XML
T@17:45:34  payloadParse[58]: Calling xmlTreat for service request 23, payloadWord 'registerProviderRequest'
2@17:45:34  xmlRequestGet[155]: Found xmlRequest of type 23, method 'POST' - index 26 (/registerProviderRequest)
T@17:45:34  nullTreat[272]: Not treating node 'registerProviderRequest'
T@17:45:34  nullTreat[272]: Not treating node 'metadata'
T@17:45:34  contextMetadata[48]: Got a metadata
T@17:45:34  contextMetadataName[62]: Got a metadata name 'ID'
T@17:45:34  contextMetadataType[75]: Got a metadata type 'string'
T@17:45:34  contextMetadataValue[88]: Got a metadata value '1111'
T@17:45:34  contextMetadata[48]: Got a metadata
T@17:45:34  contextMetadataName[62]: Got a metadata name 'cm2'
T@17:45:34  contextMetadataType[75]: Got a metadata type 'string'
T@17:45:34  contextMetadataValue[88]: Got a metadata value 'YYY'
T@17:45:34  duration[101]: Got a duration 'PT2H'
T@17:45:34  providingApplication[114]: Got a providingApplication 'http://kz.tid.es/abc2'
T@17:45:34  registrationId[127]: Got a registrationId '538b66be0d4f0cdede01f069'
T@17:45:34  xmlTreat[251]: Calling check for XML parsed tree (registerProviderRequest)
T@17:45:34  payloadParse[69]: result: 'OK'
T@17:45:34  payloadParse[70]: outFormat: XML
T@17:45:34  restService[182]: payloadParse returns 'OK'
T@17:45:34  restService[197]: Treating service POST /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@17:45:34  restService[237]: tenant: ''
T@17:45:34  Metadata[58]: 'cloning' a Metadata
T@17:45:34  Metadata[58]: 'cloning' a Metadata
T@17:45:34  reqSemTake[75]: mongoRegisterContext taking the 'req' semaphore for 'ngsi9 register request'
T@17:45:34  reqSemTake[77]: mongoRegisterContext has the 'req' semaphore
T@17:45:34  mongoRegisterContext[51]: Register Context Request
T@17:45:34  mongoSemTake[90]: mongoRegisterContext taking the 'mongo' semaphore for 'findOne from RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: mongoRegisterContext has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: mongoRegisterContext gives the 'mongo' semaphore for 'findOne from RegistrationsCollection'
T@17:45:34  processRegisterContext[342]: Registration expiration: 1401651934
T@17:45:34  processRegisterContext[376]: Entity registration: {id: ENTITY_ID}
T@17:45:34  processRegisterContext[394]: Attribute registration: {name: ATTRIBUTE_01, type: , isDomain: false}
T@17:45:34  processRegisterContext[406]: providingApplication registration: http://kz.tid.es/abc2
T@17:45:34  addTriggeredSubscriptions[255]: JS function: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true") {for (var j=0; j < enId.length; j++) {if (enId[j].match(this.entities[i].id) && this.entities[i].type == enType[j]) {return true; }}}}return false; }
T@17:45:34  addTriggeredSubscriptions[268]: query() in 'testharness.casubs' collection: '{ $or: [ { entities: { $in: [ { id: "ENTITY_ID", type: "", isPattern: "false" } ] }, $or: [ { attrs: { $in: [ "ATTRIBUTE_01" ] } }, { attrs: { $size: 0 } } ], expiration: { $gt: 1401644734 } }, { entities.isPattern: "true", expiration: { $gt: 1401644734 }, $where: function(){enId = [ "ENTITY_ID" ];enType = [ "" ];for (var i=0; i < th... } ] }'
T@17:45:34  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:34  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:34  processRegisterContext[422]: upsert update() in 'testharness.registrations' collection: '{ _id: ObjectId('538b66be0d4f0cdede01f069'), expiration: 1401651934, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc2" } ] }'
T@17:45:34  mongoSemTake[90]: processRegisterContext taking the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: processRegisterContext has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: processRegisterContext gives the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:34  reqSemGive[104]: mongoRegisterContext gives the 'req' semaphore for 'ngsi9 register request'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  release[153]: Releasing Metadata 0
T@17:45:34  release[153]: Releasing Metadata 1
T@17:45:34  release[153]: Releasing Metadata 0
T@17:45:34  release[153]: Releasing Metadata 1
T@17:45:34  restReply[65]: Response 3: responding with 141 bytes, Status Code 200
T@17:45:34  restReply[66]: Response payload: '<registerContextResponse>
  <duration>PT2H</duration>
  <registrationId>538b66be0d4f0cdede01f069</registrationId>
</registerContextResponse>
'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Length: 194
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[179]: Parsing payload for URL '/NGSI9/discoverContextAvailability', method 'POST', service vector index: 2
T@17:45:34  payloadParse[53]: parsing data for service 'DiscoverContextAvailabilityRequest'. Method: 'POST'
T@17:45:34  payloadParse[54]: outFormat: XML
T@17:45:34  payloadParse[58]: Calling xmlTreat for service request 2, payloadWord 'discoverContextAvailabilityRequest'
2@17:45:34  xmlRequestGet[155]: Found xmlRequest of type 2, method 'POST' - index 2 (/discoverContextAvailabilityRequest)
T@17:45:34  nullTreat[272]: Not treating node 'discoverContextAvailabilityRequest'
T@17:45:34  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:34  entityId[49]: Got an entityId
T@17:45:34  entityIdParse[291]: Got a type for an entity: ''
T@17:45:34  entityIdParse[296]: Got an isPattern for an entity: 'true'
T@17:45:34  entityIdId[70]: Got an entityId:id: 'ENTITY_ID'
T@17:45:34  xmlTreat[251]: Calling check for XML parsed tree (discoverContextAvailabilityRequest)
T@17:45:34  payloadParse[69]: result: 'OK'
T@17:45:34  payloadParse[70]: outFormat: XML
T@17:45:34  restService[182]: payloadParse returns 'OK'
T@17:45:34  restService[197]: Treating service POST /NGSI9/discoverContextAvailability
T@17:45:34  restService[237]: tenant: ''
T@17:45:34  reqSemTake[75]: mongoDiscoverContextAvailability taking the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  reqSemTake[77]: mongoDiscoverContextAvailability has the 'req' semaphore
T@17:45:34  mongoDiscoverContextAvailability[256]: DiscoverContextAvailability Request
T@17:45:34  registrationsQuery[1097]: query() in 'testharness.registrations' collection: '{ $or: [ { contextRegistration.entities.id: /ENTITY_ID/ }, { contextRegistration.entities: { $in: {} } }, { contextRegistration.entities.id: { $in: {} } } ], expiration: { $gt: 1401644734 } }'
T@17:45:34  mongoSemTake[90]: registrationsQuery taking the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: registrationsQuery has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: registrationsQuery gives the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  registrationsQuery[1124]: retrieved document: '{ _id: ObjectId('538b66be0d4f0cdede01f069'), expiration: 1401651934, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc2" } ] }'
T@17:45:34  reqSemGive[104]: mongoDiscoverContextAvailability gives the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  restReply[65]: Response 4: responding with 771 bytes, Status Code 200
T@17:45:34  restReply[66]: Response payload: '<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>ATTRIBUTE_01</name>
            <type></type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://kz.tid.es/abc2</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[197]: Treating service GET /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@17:45:34  restService[237]: tenant: ''
T@17:45:34  getEntityByIdAttributeByName[49]: CONVENIENCE: got a  'GET' request for entityId 'ENTITY_ID', attribute 'ATTRIBUTE_01'
T@17:45:34  reqSemTake[75]: mongoDiscoverContextAvailability taking the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  reqSemTake[77]: mongoDiscoverContextAvailability has the 'req' semaphore
T@17:45:34  mongoDiscoverContextAvailability[256]: DiscoverContextAvailability Request
T@17:45:34  registrationsQuery[1059]: Entity discovery without type: id 'ENTITY_ID'
T@17:45:34  registrationsQuery[1074]: Attribute discovery: 'ATTRIBUTE_01'
T@17:45:34  registrationsQuery[1097]: query() in 'testharness.registrations' collection: '{ $or: [ { contextRegistration.entities: { $in: {} } }, { contextRegistration.entities.id: { $in: [ "ENTITY_ID" ] } } ], expiration: { $gt: 1401644734 }, contextRegistration.attrs.name: { $in: [ "ATTRIBUTE_01" ] } }'
T@17:45:34  mongoSemTake[90]: registrationsQuery taking the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: registrationsQuery has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: registrationsQuery gives the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  registrationsQuery[1124]: retrieved document: '{ _id: ObjectId('538b66be0d4f0cdede01f069'), expiration: 1401651934, contextRegistration: [ { entities: [ { id: "ENTITY_ID" } ], attrs: [ { name: "ATTRIBUTE_01", type: "", isDomain: "false" } ], providingApplication: "http://kz.tid.es/abc2" } ] }'
T@17:45:34  reqSemGive[104]: mongoDiscoverContextAvailability gives the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  restReply[65]: Response 5: responding with 771 bytes, Status Code 200
T@17:45:34  restReply[66]: Response payload: '<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="" isPattern="false">
            <id>ENTITY_ID</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>ATTRIBUTE_01</name>
            <type></type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://kz.tid.es/abc2</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[197]: Treating service GET /NGSI9/contextEntities/ENTITY_ID2/attributes
T@17:45:34  restService[237]: tenant: ''
T@17:45:34  getContextEntityAttributes[48]: CONVENIENCE: got a 'GET' request for entityId 'ENTITY_ID2'
T@17:45:34  reqSemTake[75]: mongoDiscoverContextAvailability taking the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  reqSemTake[77]: mongoDiscoverContextAvailability has the 'req' semaphore
T@17:45:34  mongoDiscoverContextAvailability[256]: DiscoverContextAvailability Request
T@17:45:34  registrationsQuery[1059]: Entity discovery without type: id 'ENTITY_ID2'
T@17:45:34  registrationsQuery[1097]: query() in 'testharness.registrations' collection: '{ $or: [ { contextRegistration.entities: { $in: {} } }, { contextRegistration.entities.id: { $in: [ "ENTITY_ID2" ] } } ], expiration: { $gt: 1401644734 } }'
T@17:45:34  mongoSemTake[90]: registrationsQuery taking the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  mongoSemTake[92]: registrationsQuery has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: registrationsQuery gives the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:34  reqSemGive[104]: mongoDiscoverContextAvailability gives the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:34  restReply[65]: Response 6: responding with 185 bytes, Status Code 200
T@17:45:34  restReply[66]: Response payload: '<discoverContextAvailabilityResponse>
  <errorCode>
    <code>404</code>
    <reasonPhrase>No context element found</reasonPhrase>
  </errorCode>
</discoverContextAvailabilityResponse>
'
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[197]: Treating service * /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@17:45:34  restService[237]: tenant: ''
W@17:45:34  badVerbGetPostOnly[48]: bad verb for url '/NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01', method 'DELETE'
T@17:45:34  restReply[65]: Response 7: responding with 0 bytes, Status Code 405
T@17:45:34  restReply[66]: Response payload: ''
T@17:45:34  ~RegisterContextResponse[56]: destroyed
T@17:45:34  connectionTreat[438]: notifyFormat: ''
T@17:45:34  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:34  httpHeaderGet[137]: HTTP Header:   Content-Length: 393
T@17:45:34  connectionTreat[442]: HTTP tenant: ''
T@17:45:34  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:34  restService[197]: Treating service * /NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01
T@17:45:34  restService[237]: tenant: ''
W@17:45:34  badVerbGetPostOnly[48]: bad verb for url '/NGSI9/contextEntities/ENTITY_ID/attributes/ATTRIBUTE_01', method 'PUT'
T@17:45:34  restReply[65]: Response 8: responding with 0 bytes, Status Code 405
T@17:45:34  restReply[66]: Response payload: ''
T@17:45:34  ~RegisterContextResponse[56]: destroyed
F@17:45:34  ***[981]: In sigHandler - caught signal 15
X@17:45:34  sigHandler[987]: Received signal 15
RegisterProviderRequest:
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    1110
  Registration Metadata 1:
    Name:     cm2
    Type:     string
    Value:    XXX
  Duration: PT1H
  ProvidingApplication: http://kz.tid.es/abc
  No RegistrationId



1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  true
Attribute List
No AttributeExpression
No scopes
1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  true
Attribute List
No AttributeExpression
No scopes


1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  true
Attribute List
No AttributeExpression
No scopes
RegisterProviderRequest:
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    1111
  Registration Metadata 1:
    Name:     cm2
    Type:     string
    Value:    YYY
  Duration: PT2H
  ProvidingApplication: http://kz.tid.es/abc2
  RegistrationId: 538b66be0d4f0cdede01f069



1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  true
Attribute List
No AttributeExpression
No scopes
1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  true
Attribute List
No AttributeExpression
No scopes


1 EntityIds:
Entity Id 0:
  Id:         ENTITY_ID
  Type:       
  isPattern:  true
Attribute List
No AttributeExpression
No scopes
