{ "dropped" : "testharness", "ok" : 1 }
T@17:45:38  paConfigActions[727]: setting trace levels to '0-255'
T@17:45:38  paConfigActions[728]: Leaving function paConfigActions
E@17:45:38  exitFunc[1009]: unlink(/tmp/orion_9999.pid): No such file or directory
T@17:45:38  semInit[61]: Initialized 'req' semaphore
T@17:45:38  semInit[62]: Initialized 'mongo' semaphore
T@17:45:38  mongoSemTake[90]: mongoConnect taking the 'mongo' semaphore for 'connecting to mongo'
T@17:45:38  mongoSemTake[92]: mongoConnect has the 'mongo' semaphore
T@17:45:38  mongoConnect[152]: mongo version server: 2.4.9 (mayor: 2, minor: 4, extra: 9)
T@17:45:38  mongoSemGive[118]: mongoConnect gives the 'mongo' semaphore for 'connecting to mongo'
F@17:45:38  ***[1063]: Connected to mongo at localhost:testharness
T@17:45:38  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:38  recoverOntimeIntervalThreads[398]: query() in 'testharness.csubs' collection: '{ conditions.type: "ONTIMEINTERVAL" }'
T@17:45:38  mongoSemTake[90]: recoverOntimeIntervalThreads taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:38  mongoSemTake[92]: recoverOntimeIntervalThreads has the 'mongo' semaphore
T@17:45:38  mongoSemGive[118]: recoverOntimeIntervalThreads gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
V@17:45:38  restStart[569]: Starting HTTP daemon on IPv4 0.0.0.0 port 9999
V@17:45:38  restStart[611]: Starting HTTP daemon on IPv6 :: port 9999
T@17:45:39  connectionTreat[438]: notifyFormat: ''
T@17:45:39  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:39  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:39  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:39  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:39  httpHeaderGet[137]: HTTP Header:   Content-Length: 1405
T@17:45:39  connectionTreat[442]: HTTP tenant: ''
T@17:45:39  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:39  restService[179]: Parsing payload for URL '/NGSI10/notifyContext', method 'POST', service vector index: 22
T@17:45:39  payloadParse[53]: parsing data for service 'NotifyContextRequest'. Method: 'POST'
T@17:45:39  payloadParse[54]: outFormat: XML
T@17:45:39  payloadParse[58]: Calling xmlTreat for service request 16, payloadWord 'notifyContextRequest'
2@17:45:39  xmlRequestGet[155]: Found xmlRequest of type 16, method 'POST' - index 22 (/notifyContextRequest)
T@17:45:39  nullTreat[272]: Not treating node 'notifyContextRequest'
T@17:45:39  subscriptionId[100]: Got a subscriptionId: '012345678901234567890123'
T@17:45:39  originator[114]: Got an originator: 'http://localhost/test'
T@17:45:39  nullTreat[272]: Not treating node 'contextResponseList'
T@17:45:39  nullTreat[272]: Not treating node 'contextElement'
T@17:45:39  entityId[128]: Got an entityId
T@17:45:39  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:39  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:39  entityIdId[146]: Got an entityId:id: 'ConferenceRoom'
T@17:45:39  attributeDomainName[161]: Got an attributeDomainName: ''
T@17:45:39  nullTreat[272]: Not treating node 'contextAttributeList'
T@17:45:39  contextAttribute[189]: Creating an attribute
T@17:45:39  ContextAttribute[42]: Creating a ContextAttribute 1
T@17:45:39  contextAttributeName[203]: Got an attribute name: 'temperature'
T@17:45:39  contextAttributeType[216]: Got an attribute type: 'Room'
T@17:45:39  contextAttributeContextValue[229]: Got an attribute value: '10'
T@17:45:39  nullTreat[272]: Not treating node 'metadata'
T@17:45:39  contextMetadata[242]: Got a metadata
T@17:45:39  contextMetadataName[256]: Got a metadata name 'ID'
T@17:45:39  contextMetadataType[269]: Got a metadata type 'string'
T@17:45:39  contextMetadataValue[282]: Got a metadata value '1110'
T@17:45:39  contextMetadata[242]: Got a metadata
T@17:45:39  contextMetadataName[256]: Got a metadata name ''
T@17:45:39  contextMetadataType[269]: Got a metadata type ''
T@17:45:39  contextMetadataValue[282]: Got a metadata value ''
T@17:45:39  contextAttribute[189]: Creating an attribute
T@17:45:39  ContextAttribute[42]: Creating a ContextAttribute 1
T@17:45:39  contextAttributeName[203]: Got an attribute name: 'temperature'
T@17:45:39  contextAttributeType[216]: Got an attribute type: 'Room'
T@17:45:39  contextAttributeContextValue[229]: Got an attribute value: '10'
T@17:45:39  nullTreat[272]: Not treating node 'metadata'
T@17:45:39  contextMetadata[242]: Got a metadata
T@17:45:39  contextMetadataName[256]: Got a metadata name 'ID'
T@17:45:39  contextMetadataType[269]: Got a metadata type 'string'
T@17:45:39  contextMetadataValue[282]: Got a metadata value '1110'
T@17:45:39  contextMetadata[242]: Got a metadata
T@17:45:39  contextMetadataName[256]: Got a metadata name ''
T@17:45:39  contextMetadataType[269]: Got a metadata type ''
T@17:45:39  contextMetadataValue[282]: Got a metadata value ''
T@17:45:39  nullTreat[272]: Not treating node 'domainMetadata'
T@17:45:39  nullTreat[272]: Not treating node 'contextMetadata'
T@17:45:39  nullTreat[272]: Not treating node 'name'
T@17:45:39  nullTreat[272]: Not treating node 'type'
T@17:45:39  nullTreat[272]: Not treating node 'value'
T@17:45:39  nullTreat[272]: Not treating node 'contextMetadata'
T@17:45:39  nullTreat[272]: Not treating node 'name'
T@17:45:39  nullTreat[272]: Not treating node 'type'
T@17:45:39  nullTreat[272]: Not treating node 'value'
T@17:45:39  nullTreat[272]: Not treating node 'statusCode'
T@17:45:39  statusCodeCode[295]: Got a statusCode code: '200'
T@17:45:39  statusCodeReasonPhrase[308]: Got a statusCode reasonPhrase: 'Ok'
T@17:45:39  statusCodeDetails[321]: Got a statusCode details: 'a'
T@17:45:39  xmlTreat[251]: Calling check for XML parsed tree (notifyContextRequest)
T@17:45:39  payloadParse[69]: result: 'OK'
T@17:45:39  payloadParse[70]: outFormat: XML
T@17:45:39  restService[182]: payloadParse returns 'OK'
T@17:45:39  restService[197]: Treating service POST /NGSI10/notifyContext
T@17:45:39  restService[237]: tenant: ''
T@17:45:39  reqSemTake[75]: mongoNotifyContext taking the 'req' semaphore for 'ngsi10 notification'
T@17:45:39  reqSemTake[77]: mongoNotifyContext has the 'req' semaphore
T@17:45:39  processContextElement[1397]: query() in 'testharness.entities' collection: '{ _id.id: "ConferenceRoom", _id.type: "Room" }'
T@17:45:39  mongoSemTake[90]: processContextElement taking the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:39  mongoSemTake[92]: processContextElement has the 'mongo' semaphore
T@17:45:39  mongoSemGive[118]: processContextElement gives the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:39  ContextAttribute[86]: Creating a ContextAttribute 'temperature':'Room':'', setting its compound to NULL
T@17:45:39  ContextAttribute[86]: Creating a ContextAttribute 'temperature':'Room':'', setting its compound to NULL
T@17:45:39  createEntity[1201]: Entity not found in 'testharness.entities' collection, creating it
T@17:45:39  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:39  createEntity[1246]: new attribute: {name: temperature, type: Room, value: 10, id: 1110}
T@17:45:39  contextAttributeCustomMetadataToBson[526]: new custom metadata: {name: , type: , value: }
T@17:45:39  createEntity[1246]: new attribute: {name: temperature, type: Room, value: 10, id: 1110}
T@17:45:39  contextAttributeCustomMetadataToBson[526]: new custom metadata: {name: , type: , value: }
T@17:45:39  createEntity[1273]: insert() in 'testharness.entities' collection: '{ _id: { id: "ConferenceRoom", type: "Room" }, attrs: [ { name: "temperature", type: "Room", creDate: 1401644739, modDate: 1401644739, value: "10", id: "1110", md: [ { name: "", type: "", value: "" } ] }, { name: "temperature", type: "Room", creDate: 1401644739, modDate: 1401644739, value: "10", id: "1110", md: [ { name: "", type: "", value: "" } ] } ], creDate: 1401644739, modDate: 1401644739 }'
T@17:45:39  mongoSemTake[90]: createEntity taking the 'mongo' semaphore for 'insert into EntitiesCollection'
T@17:45:39  mongoSemTake[92]: createEntity has the 'mongo' semaphore
T@17:45:39  mongoSemGive[118]: createEntity gives the 'mongo' semaphore for 'insert into EntitiesCollection'
T@17:45:39  addTriggeredSubscriptions[772]: JS function: function(){for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true" && (this.entities[i].type == "Room" || this.entities[i].type == "" || !("type" in this.entities[i])) && "ConferenceRoom".match(this.entities[i].id)) {return true; }}return false; }
T@17:45:39  addTriggeredSubscriptions[787]: query() in 'testharness.csubs' collection: '{ $or: [ { entities.id: "ConferenceRoom", $or: [ { entities.type: "Room" }, { entities.type: { $exists: false } } ], entities.isPattern: "false", conditions.type: "ONCHANGE", conditions.value: "temperature", expiration: { $gt: 1401644739 } }, { entities.isPattern: "true", conditions.type: "ONCHANGE", conditions.value: "temperature", expiration: { $gt: 1401644739 }, $where: function(){for (var i=0; i < this.entities.length; i++) {if (this.enti... } ] }'
T@17:45:39  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:39  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:39  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:39  addTriggeredSubscriptions[772]: JS function: function(){for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true" && (this.entities[i].type == "Room" || this.entities[i].type == "" || !("type" in this.entities[i])) && "ConferenceRoom".match(this.entities[i].id)) {return true; }}return false; }
T@17:45:39  addTriggeredSubscriptions[787]: query() in 'testharness.csubs' collection: '{ $or: [ { entities.id: "ConferenceRoom", $or: [ { entities.type: "Room" }, { entities.type: { $exists: false } } ], entities.isPattern: "false", conditions.type: "ONCHANGE", conditions.value: "temperature", expiration: { $gt: 1401644739 } }, { entities.isPattern: "true", conditions.type: "ONCHANGE", conditions.value: "temperature", expiration: { $gt: 1401644739 }, $where: function(){for (var i=0; i < this.entities.length; i++) {if (this.enti... } ] }'
T@17:45:39  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:39  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:39  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:39  release[153]: Releasing Metadata 0
T@17:45:39  release[153]: Releasing Metadata 1
T@17:45:39  release[153]: Releasing Metadata 0
T@17:45:39  release[153]: Releasing Metadata 1
T@17:45:39  ~UpdateContextResponse[58]: destroyed
T@17:45:39  reqSemGive[104]: mongoNotifyContext gives the 'req' semaphore for 'ngsi10 notification'
T@17:45:39  release[153]: Releasing Metadata 0
T@17:45:39  release[153]: Releasing Metadata 1
T@17:45:39  release[153]: Releasing Metadata 0
T@17:45:39  release[153]: Releasing Metadata 1
T@17:45:39  restReply[65]: Response 1: responding with 141 bytes, Status Code 200
T@17:45:39  restReply[66]: Response payload: '<notifyContextResponse>
  <responseCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </responseCode>
</notifyContextResponse>
'
T@17:45:39  ~RegisterContextResponse[56]: destroyed
F@17:45:39  ***[981]: In sigHandler - caught signal 15
X@17:45:39  sigHandler[987]: Received signal 15


SubscriptionId: 012345678901234567890123
