{ "dropped" : "testharness", "ok" : 1 }
T@17:45:34  paConfigActions[727]: setting trace levels to '0-255'
T@17:45:34  paConfigActions[728]: Leaving function paConfigActions
E@17:45:34  exitFunc[1009]: unlink(/tmp/orion_9999.pid): No such file or directory
T@17:45:34  semInit[61]: Initialized 'req' semaphore
T@17:45:34  semInit[62]: Initialized 'mongo' semaphore
T@17:45:34  mongoSemTake[90]: mongoConnect taking the 'mongo' semaphore for 'connecting to mongo'
T@17:45:34  mongoSemTake[92]: mongoConnect has the 'mongo' semaphore
T@17:45:34  mongoConnect[152]: mongo version server: 2.4.9 (mayor: 2, minor: 4, extra: 9)
T@17:45:34  mongoSemGive[118]: mongoConnect gives the 'mongo' semaphore for 'connecting to mongo'
F@17:45:34  ***[1063]: Connected to mongo at localhost:testharness
T@17:45:34  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:34  recoverOntimeIntervalThreads[398]: query() in 'testharness.csubs' collection: '{ conditions.type: "ONTIMEINTERVAL" }'
T@17:45:34  mongoSemTake[90]: recoverOntimeIntervalThreads taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:34  mongoSemTake[92]: recoverOntimeIntervalThreads has the 'mongo' semaphore
T@17:45:34  mongoSemGive[118]: recoverOntimeIntervalThreads gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
V@17:45:34  restStart[569]: Starting HTTP daemon on IPv4 0.0.0.0 port 9999
V@17:45:34  restStart[611]: Starting HTTP daemon on IPv6 :: port 9999
T@17:45:35  connectionTreat[438]: notifyFormat: ''
T@17:45:35  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Accept: */*
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Length: 1060
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Expect: 100-continue
T@17:45:35  connectionTreat[442]: HTTP tenant: ''
T@17:45:35  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:35  restService[179]: Parsing payload for URL '/ngsi10/queryContext', method 'POST', service vector index: 14
T@17:45:35  payloadParse[53]: parsing data for service 'QueryContextRequest'. Method: 'POST'
T@17:45:35  payloadParse[54]: outFormat: XML
T@17:45:35  payloadParse[58]: Calling xmlTreat for service request 11, payloadWord 'queryContextRequest'
2@17:45:35  xmlRequestGet[155]: Found xmlRequest of type 11, method 'POST' - index 14 (/queryContextRequest)
T@17:45:35  nullTreat[272]: Not treating node 'queryContextRequest'
T@17:45:35  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:35  entityId[53]: Got an entityId
T@17:45:35  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:35  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:35  entityIdId[74]: Got an entityId:id: 'entity01'
T@17:45:35  nullTreat[272]: Not treating node 'attributeList'
T@17:45:35  attribute[89]: Got an attribute
T@17:45:35  attribute[89]: Got an attribute
T@17:45:35  attribute[89]: Got an attribute
T@17:45:35  restriction[104]: Got a restriction
T@17:45:35  restriction[106]: Got a restriction - from value 0
T@17:45:35  restriction[108]: Got a restriction - to value 1
T@17:45:35  attributeExpression[121]: Got an attributeExpression: 'Attribute Expression'
T@17:45:35  nullTreat[272]: Not treating node 'scope'
T@17:45:35  operationScope[137]: Got an operationScope
T@17:45:35  scopeType[152]: Got a scopeType: 'st1'
T@17:45:35  scopeValue[180]: Got a scopeValue: 'sv1' for scopeType 'st1'
T@17:45:35  operationScope[137]: Got an operationScope
T@17:45:35  scopeType[152]: Got a scopeType: 'FIWARE_Location'
T@17:45:35  scopeValue[175]: Preparing scopeValue for 'FIWARE_Location'
T@17:45:35  circle[194]: Got a circle
T@17:45:35  circleRadius[234]: Got a circleRadius: 10
T@17:45:35  circleCenterLatitude[207]: Got a circleCenterLatitude: 45
T@17:45:35  circleCenterLongitude[221]: Got a circleCenterLongitude: 45
T@17:45:35  circleInverted[247]: Got a circleInverted: 0
T@17:45:35  operationScope[137]: Got an operationScope
T@17:45:35  scopeType[152]: Got a scopeType: 'st2'
T@17:45:35  scopeValue[180]: Got a scopeValue: 'sv2' for scopeType 'st2'
T@17:45:35  xmlTreat[251]: Calling check for XML parsed tree (queryContextRequest)
T@17:45:35  check[45]: In Restriction::check
T@17:45:35  check[59]: Restriction::check returns OK (2)
T@17:45:35  ~QueryContextResponse[64]: destroyed
T@17:45:35  payloadParse[69]: result: 'OK'
T@17:45:35  payloadParse[70]: outFormat: XML
T@17:45:35  restService[182]: payloadParse returns 'OK'
T@17:45:35  restService[197]: Treating service POST /ngsi10/queryContext
T@17:45:35  restService[237]: tenant: ''
T@17:45:35  reqSemTake[75]: mongoQueryContext taking the 'req' semaphore for 'ngsi10 query request'
T@17:45:35  reqSemTake[77]: mongoQueryContext has the 'req' semaphore
T@17:45:35  mongoQueryContext[47]: QueryContext Request
W@17:45:35  mongoQueryContext[51]: Restriction found but not supported at mongo backend
T@17:45:35  fillQueryEntFalse[531]: Entity query token (isPattern=false): {id: entity01, type: Room}
T@17:45:35  entitiesQuery[775]: Attribute query token: 'temperature'
T@17:45:35  entitiesQuery[775]: Attribute query token: 'occupancy'
T@17:45:35  entitiesQuery[775]: Attribute query token: 'lightstatus'
E@17:45:35  processAreaScope[679]: unknown area type
T@17:45:35  entitiesQuery[795]: query() in 'testharness.entities' collection: '{ $or: [ { _id: { $in: [ { id: "entity01", type: "Room" } ] } } ], attrs.name: { $in: [ "temperature", "occupancy", "lightstatus" ] } }'
T@17:45:35  mongoSemTake[90]: entitiesQuery taking the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  mongoSemTake[92]: entitiesQuery has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: entitiesQuery gives the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  reqSemGive[104]: mongoQueryContext gives the 'req' semaphore for 'ngsi10 query request'
T@17:45:35  ~QueryContextResponse[64]: destroyed
T@17:45:35  restReply[65]: Response 1: responding with 155 bytes, Status Code 200
T@17:45:35  restReply[66]: Response payload: '<queryContextResponse>
  <errorCode>
    <code>404</code>
    <reasonPhrase>No context element found</reasonPhrase>
  </errorCode>
</queryContextResponse>
'
T@17:45:35  ~RegisterContextResponse[56]: destroyed
T@17:45:35  connectionTreat[438]: notifyFormat: ''
T@17:45:35  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Accept: */*
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Length: 687
T@17:45:35  connectionTreat[442]: HTTP tenant: ''
T@17:45:35  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:35  restService[179]: Parsing payload for URL '/ngsi10/updateContext', method 'POST', service vector index: 12
T@17:45:35  payloadParse[53]: parsing data for service 'UpdateContextRequest'. Method: 'POST'
T@17:45:35  payloadParse[54]: outFormat: XML
T@17:45:35  payloadParse[58]: Calling xmlTreat for service request 17, payloadWord 'updateContextRequest'
2@17:45:35  xmlRequestGet[155]: Found xmlRequest of type 17, method 'POST' - index 12 (/updateContextRequest)
T@17:45:35  nullTreat[272]: Not treating node 'updateContextRequest'
T@17:45:35  nullTreat[272]: Not treating node 'contextElementList'
T@17:45:35  entityId[67]: Got an entityId
T@17:45:35  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:35  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:35  entityIdId[88]: Got an entityId:id: 'entity01'
T@17:45:35  nullTreat[272]: Not treating node 'contextAttributeList'
T@17:45:35  contextAttribute[103]: Creating an attribute
T@17:45:35  ContextAttribute[42]: Creating a ContextAttribute 1
T@17:45:35  contextAttributeName[117]: Got an attribute name: 'temperature'
T@17:45:35  contextAttributeType[130]: Got an attribute type: 'degree'
T@17:45:35  contextAttributeValue[147]: Set parseDataP->lastContextAttribute (type: '') to: 0xbac3c0
T@17:45:35  contextAttributeValue[149]: Got an attribute value: '11'
T@17:45:35  contextAttribute[103]: Creating an attribute
T@17:45:35  ContextAttribute[42]: Creating a ContextAttribute 1
T@17:45:35  contextAttributeName[117]: Got an attribute name: 'lightstatus'
T@17:45:35  contextAttributeType[130]: Got an attribute type: 'light'
T@17:45:35  contextAttributeValue[147]: Set parseDataP->lastContextAttribute (type: '') to: 0xbac6f0
T@17:45:35  contextAttributeValue[149]: Got an attribute value: 'L23'
T@17:45:35  updateAction[272]: Got an update action: 'APPEND'
T@17:45:35  xmlTreat[251]: Calling check for XML parsed tree (updateContextRequest)
T@17:45:35  ~UpdateContextResponse[58]: destroyed
T@17:45:35  payloadParse[69]: result: 'OK'
T@17:45:35  payloadParse[70]: outFormat: XML
T@17:45:35  restService[182]: payloadParse returns 'OK'
T@17:45:35  restService[197]: Treating service POST /ngsi10/updateContext
T@17:45:35  restService[237]: tenant: ''
T@17:45:35  reqSemTake[75]: mongoUpdateContext taking the 'req' semaphore for 'ngsi10 update request'
T@17:45:35  reqSemTake[77]: mongoUpdateContext has the 'req' semaphore
T@17:45:35  processContextElement[1397]: query() in 'testharness.entities' collection: '{ _id.id: "entity01", _id.type: "Room" }'
T@17:45:35  mongoSemTake[90]: processContextElement taking the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  mongoSemTake[92]: processContextElement has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: processContextElement gives the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  ContextAttribute[86]: Creating a ContextAttribute 'temperature':'degree':'', setting its compound to NULL
T@17:45:35  ContextAttribute[86]: Creating a ContextAttribute 'lightstatus':'light':'', setting its compound to NULL
T@17:45:35  createEntity[1201]: Entity not found in 'testharness.entities' collection, creating it
T@17:45:35  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:35  createEntity[1238]: new attribute: {name: temperature, type: degree, value: 11}
T@17:45:35  createEntity[1238]: new attribute: {name: lightstatus, type: light, value: L23}
T@17:45:35  createEntity[1273]: insert() in 'testharness.entities' collection: '{ _id: { id: "entity01", type: "Room" }, attrs: [ { name: "temperature", type: "degree", creDate: 1401644735, modDate: 1401644735, value: "11" }, { name: "lightstatus", type: "light", creDate: 1401644735, modDate: 1401644735, value: "L23" } ], creDate: 1401644735, modDate: 1401644735 }'
T@17:45:35  mongoSemTake[90]: createEntity taking the 'mongo' semaphore for 'insert into EntitiesCollection'
T@17:45:35  mongoSemTake[92]: createEntity has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: createEntity gives the 'mongo' semaphore for 'insert into EntitiesCollection'
T@17:45:35  addTriggeredSubscriptions[772]: JS function: function(){for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true" && (this.entities[i].type == "Room" || this.entities[i].type == "" || !("type" in this.entities[i])) && "entity01".match(this.entities[i].id)) {return true; }}return false; }
T@17:45:35  addTriggeredSubscriptions[787]: query() in 'testharness.csubs' collection: '{ $or: [ { entities.id: "entity01", $or: [ { entities.type: "Room" }, { entities.type: { $exists: false } } ], entities.isPattern: "false", conditions.type: "ONCHANGE", conditions.value: "temperature", expiration: { $gt: 1401644735 } }, { entities.isPattern: "true", conditions.type: "ONCHANGE", conditions.value: "temperature", expiration: { $gt: 1401644735 }, $where: function(){for (var i=0; i < this.entities.length; i++) {if (this.enti... } ] }'
T@17:45:35  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:35  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:35  addTriggeredSubscriptions[772]: JS function: function(){for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true" && (this.entities[i].type == "Room" || this.entities[i].type == "" || !("type" in this.entities[i])) && "entity01".match(this.entities[i].id)) {return true; }}return false; }
T@17:45:35  addTriggeredSubscriptions[787]: query() in 'testharness.csubs' collection: '{ $or: [ { entities.id: "entity01", $or: [ { entities.type: "Room" }, { entities.type: { $exists: false } } ], entities.isPattern: "false", conditions.type: "ONCHANGE", conditions.value: "lightstatus", expiration: { $gt: 1401644735 } }, { entities.isPattern: "true", conditions.type: "ONCHANGE", conditions.value: "lightstatus", expiration: { $gt: 1401644735 }, $where: function(){for (var i=0; i < this.entities.length; i++) {if (this.enti... } ] }'
T@17:45:35  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:35  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:35  reqSemGive[104]: mongoUpdateContext gives the 'req' semaphore for 'ngsi10 update request'
T@17:45:35  ~UpdateContextResponse[58]: destroyed
T@17:45:35  restReply[65]: Response 2: responding with 807 bytes, Status Code 200
T@17:45:35  restReply[66]: Response payload: '<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>entity01</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue></contextValue>
          </contextAttribute>
          <contextAttribute>
            <name>lightstatus</name>
            <type>light</type>
            <contextValue></contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>
'
T@17:45:35  ~RegisterContextResponse[56]: destroyed
T@17:45:35  connectionTreat[438]: notifyFormat: ''
T@17:45:35  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Accept: */*
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Length: 1060
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Expect: 100-continue
T@17:45:35  connectionTreat[442]: HTTP tenant: ''
T@17:45:35  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:35  restService[179]: Parsing payload for URL '/ngsi10/queryContext', method 'POST', service vector index: 14
T@17:45:35  payloadParse[53]: parsing data for service 'QueryContextRequest'. Method: 'POST'
T@17:45:35  payloadParse[54]: outFormat: XML
T@17:45:35  payloadParse[58]: Calling xmlTreat for service request 11, payloadWord 'queryContextRequest'
2@17:45:35  xmlRequestGet[155]: Found xmlRequest of type 11, method 'POST' - index 14 (/queryContextRequest)
T@17:45:35  nullTreat[272]: Not treating node 'queryContextRequest'
T@17:45:35  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:35  entityId[53]: Got an entityId
T@17:45:35  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:35  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:35  entityIdId[74]: Got an entityId:id: 'entity01'
T@17:45:35  nullTreat[272]: Not treating node 'attributeList'
T@17:45:35  attribute[89]: Got an attribute
T@17:45:35  attribute[89]: Got an attribute
T@17:45:35  attribute[89]: Got an attribute
T@17:45:35  restriction[104]: Got a restriction
T@17:45:35  restriction[106]: Got a restriction - from value 0
T@17:45:35  restriction[108]: Got a restriction - to value 1
T@17:45:35  attributeExpression[121]: Got an attributeExpression: 'Attribute Expression'
T@17:45:35  nullTreat[272]: Not treating node 'scope'
T@17:45:35  operationScope[137]: Got an operationScope
T@17:45:35  scopeType[152]: Got a scopeType: 'st1'
T@17:45:35  scopeValue[180]: Got a scopeValue: 'sv1' for scopeType 'st1'
T@17:45:35  operationScope[137]: Got an operationScope
T@17:45:35  scopeType[152]: Got a scopeType: 'FIWARE_Location'
T@17:45:35  scopeValue[175]: Preparing scopeValue for 'FIWARE_Location'
T@17:45:35  circle[194]: Got a circle
T@17:45:35  circleRadius[234]: Got a circleRadius: 10
T@17:45:35  circleCenterLatitude[207]: Got a circleCenterLatitude: 45
T@17:45:35  circleCenterLongitude[221]: Got a circleCenterLongitude: 45
T@17:45:35  circleInverted[247]: Got a circleInverted: 0
T@17:45:35  operationScope[137]: Got an operationScope
T@17:45:35  scopeType[152]: Got a scopeType: 'st2'
T@17:45:35  scopeValue[180]: Got a scopeValue: 'sv2' for scopeType 'st2'
T@17:45:35  xmlTreat[251]: Calling check for XML parsed tree (queryContextRequest)
T@17:45:35  check[45]: In Restriction::check
T@17:45:35  check[59]: Restriction::check returns OK (2)
T@17:45:35  ~QueryContextResponse[64]: destroyed
T@17:45:35  payloadParse[69]: result: 'OK'
T@17:45:35  payloadParse[70]: outFormat: XML
T@17:45:35  restService[182]: payloadParse returns 'OK'
T@17:45:35  restService[197]: Treating service POST /ngsi10/queryContext
T@17:45:35  restService[237]: tenant: ''
T@17:45:35  reqSemTake[75]: mongoQueryContext taking the 'req' semaphore for 'ngsi10 query request'
T@17:45:35  reqSemTake[77]: mongoQueryContext has the 'req' semaphore
T@17:45:35  mongoQueryContext[47]: QueryContext Request
W@17:45:35  mongoQueryContext[51]: Restriction found but not supported at mongo backend
T@17:45:35  fillQueryEntFalse[531]: Entity query token (isPattern=false): {id: entity01, type: Room}
T@17:45:35  entitiesQuery[775]: Attribute query token: 'temperature'
T@17:45:35  entitiesQuery[775]: Attribute query token: 'occupancy'
T@17:45:35  entitiesQuery[775]: Attribute query token: 'lightstatus'
E@17:45:35  processAreaScope[679]: unknown area type
T@17:45:35  entitiesQuery[795]: query() in 'testharness.entities' collection: '{ $or: [ { _id: { $in: [ { id: "entity01", type: "Room" } ] } } ], attrs.name: { $in: [ "temperature", "occupancy", "lightstatus" ] } }'
T@17:45:35  mongoSemTake[90]: entitiesQuery taking the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  mongoSemTake[92]: entitiesQuery has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: entitiesQuery gives the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  entitiesQuery[832]: retrieved document: '{ _id: { id: "entity01", type: "Room" }, attrs: [ { name: "temperature", type: "degree", creDate: 1401644735, modDate: 1401644735, value: "11" }, { name: "lightstatus", type: "light", creDate: 1401644735, modDate: 1401644735, value: "L23" } ], creDate: 1401644735, modDate: 1401644735 }'
T@17:45:35  ContextAttribute[42]: Creating a ContextAttribute 1
T@17:45:35  ContextAttribute[86]: Creating a ContextAttribute 'temperature':'degree':'11', setting its compound to NULL
T@17:45:35  ContextAttribute[42]: Creating a ContextAttribute 1
T@17:45:35  ContextAttribute[86]: Creating a ContextAttribute 'lightstatus':'light':'L23', setting its compound to NULL
T@17:45:35  reqSemGive[104]: mongoQueryContext gives the 'req' semaphore for 'ngsi10 query request'
T@17:45:35  ~QueryContextResponse[64]: destroyed
T@17:45:35  restReply[65]: Response 3: responding with 810 bytes, Status Code 200
T@17:45:35  restReply[66]: Response payload: '<queryContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>entity01</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>11</contextValue>
          </contextAttribute>
          <contextAttribute>
            <name>lightstatus</name>
            <type>light</type>
            <contextValue>L23</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</queryContextResponse>
'
T@17:45:35  ~RegisterContextResponse[56]: destroyed
T@17:45:35  connectionTreat[438]: notifyFormat: ''
T@17:45:35  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Accept: */*
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Content-Length: 1532
T@17:45:35  httpHeaderGet[137]: HTTP Header:   Expect: 100-continue
T@17:45:35  connectionTreat[442]: HTTP tenant: ''
T@17:45:35  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:35  restService[179]: Parsing payload for URL '/ngsi10/subscribeContext', method 'POST', service vector index: 16
T@17:45:35  payloadParse[53]: parsing data for service 'SubscribeContextRequest'. Method: 'POST'
T@17:45:35  payloadParse[54]: outFormat: XML
T@17:45:35  payloadParse[58]: Calling xmlTreat for service request 12, payloadWord 'subscribeContextRequest'
2@17:45:35  xmlRequestGet[155]: Found xmlRequest of type 12, method 'POST' - index 16 (/subscribeContextRequest)
T@17:45:35  nullTreat[272]: Not treating node 'subscribeContextRequest'
T@17:45:35  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:35  entityId[53]: Got an entityId
T@17:45:35  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:35  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:35  entityIdId[77]: Got an entityId:id: 'ConferenceRoom'
T@17:45:35  entityId[53]: Got an entityId
T@17:45:35  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:35  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:35  entityIdId[77]: Got an entityId:id: 'OfficeRoom'
T@17:45:35  nullTreat[272]: Not treating node 'attributeList'
T@17:45:35  attribute[90]: Got an attribute
T@17:45:35  attribute[90]: Got an attribute
T@17:45:35  reference[351]: Got a reference: 'http://127.0.0.1:1028'
T@17:45:35  duration[364]: Got a duration: 'P5Y'
T@17:45:35  restriction[104]: Got a restriction
T@17:45:35  attributeExpression[118]: Got an attributeExpression: 'testRestriction'
T@17:45:35  nullTreat[272]: Not treating node 'scope'
T@17:45:35  operationScope[134]: Got an operationScope
T@17:45:35  scopeType[149]: Got a scopeType: 'scope1'
T@17:45:35  scopeValue[176]: Got a scopeValue: 'sval1' for scopeType 'scope1'
T@17:45:35  operationScope[134]: Got an operationScope
T@17:45:35  scopeType[149]: Got a scopeType: 'scope2'
T@17:45:35  scopeValue[176]: Got a scopeValue: 'sval2' for scopeType 'scope2'
T@17:45:35  operationScope[134]: Got an operationScope
T@17:45:35  scopeType[149]: Got a scopeType: 'FIWARE_Location'
T@17:45:35  scopeValue[171]: Preparing scopeValue for 'FIWARE_Location'
T@17:45:35  circle[190]: Got a circle
T@17:45:35  circleRadius[230]: Got a circleRadius: 11
T@17:45:35  circleCenterLatitude[203]: Got a circleCenterLatitude: 55
T@17:45:35  circleCenterLongitude[217]: Got a circleCenterLongitude: 55
T@17:45:35  circleInverted[243]: Got a circleInverted: 0
T@17:45:35  nullTreat[272]: Not treating node 'notifyConditions'
T@17:45:35  notifyCondition[376]: Got a Notify Condition
T@17:45:35  notifyConditionType[404]: Got a Notify Condition Type: 'ONCHANGE'
T@17:45:35  nullTreat[272]: Not treating node 'condValueList'
T@17:45:35  condValue[417]: Got a Cond Value: 'temperature'
T@17:45:35  condValue[417]: Got a Cond Value: 'lightstatus'
T@17:45:35  notifyConditionRestriction[390]: Got a Notify Condition restriction
T@17:45:35  throttling[430]: Got a throttling: 'P5Y'
T@17:45:35  xmlTreat[251]: Calling check for XML parsed tree (subscribeContextRequest)
T@17:45:35  check[45]: In Restriction::check
T@17:45:35  check[59]: Restriction::check returns OK (2)
T@17:45:35  ~SubscribeContextResponse[38]: destroyed
T@17:45:35  payloadParse[69]: result: 'OK'
T@17:45:35  payloadParse[70]: outFormat: XML
T@17:45:35  restService[182]: payloadParse returns 'OK'
T@17:45:35  restService[197]: Treating service POST /ngsi10/subscribeContext
T@17:45:35  restService[237]: tenant: ''
T@17:45:35  mongoSubscribeContext[53]: Subscribe Context Request: notifications sent in 'XML' format
T@17:45:35  reqSemTake[75]: mongoSubscribeContext taking the 'req' semaphore for 'ngsi10 subscribe request'
T@17:45:35  reqSemTake[77]: mongoSubscribeContext has the 'req' semaphore
T@17:45:35  mongoSubscribeContext[66]: Subscription expiration: 1559324735
T@17:45:35  fillQueryEntFalse[531]: Entity query token (isPattern=false): {id: ConferenceRoom, type: Room}
T@17:45:35  fillQueryEntFalse[531]: Entity query token (isPattern=false): {id: OfficeRoom, type: Room}
T@17:45:35  entitiesQuery[775]: Attribute query token: 'temperature'
T@17:45:35  entitiesQuery[775]: Attribute query token: 'lightstatus'
T@17:45:35  entitiesQuery[795]: query() in 'testharness.entities' collection: '{ $or: [ { _id: { $in: [ { id: "ConferenceRoom", type: "Room" }, { id: "OfficeRoom", type: "Room" } ] } } ], attrs.name: { $in: [ "temperature", "lightstatus" ] } }'
T@17:45:35  mongoSemTake[90]: entitiesQuery taking the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  mongoSemTake[92]: entitiesQuery has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: entitiesQuery gives the 'mongo' semaphore for 'query in EntitiesCollection'
T@17:45:35  mongoSubscribeContext[118]: insert() in 'testharness.csubs' collection: '{ _id: ObjectId('538b66bf0c18132d6745f4d6'), expiration: 1559324735, reference: "http://127.0.0.1:1028", throttling: 157680000, entities: [ { id: "ConferenceRoom", type: "Room", isPattern: "false" }, { id: "OfficeRoom", type: "Room", isPattern: "false" } ], attrs: [ "temperature", "lightstatus" ], conditions: [ { type: "ONCHANGE", value: [ "temperature", "lightstatus" ] } ], format: "XML" }'
T@17:45:35  mongoSemTake[90]: mongoSubscribeContext taking the 'mongo' semaphore for 'insert into SubscribeContextCollection'
T@17:45:35  mongoSemTake[92]: mongoSubscribeContext has the 'mongo' semaphore
T@17:45:35  mongoSemGive[118]: mongoSubscribeContext gives the 'mongo' semaphore for 'insert into SubscribeContextCollection'
T@17:45:35  reqSemGive[104]: mongoSubscribeContext gives the 'req' semaphore for 'ngsi10 subscribe request'
T@17:45:35  ~SubscribeContextResponse[38]: destroyed
T@17:45:35  restReply[65]: Response 4: responding with 224 bytes, Status Code 200
T@17:45:35  restReply[66]: Response payload: '<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>538b66bf0c18132d6745f4d6</subscriptionId>
    <duration>P5Y</duration>
    <throttling>P5Y</throttling>
  </subscribeResponse>
</subscribeContextResponse>
'
T@17:45:35  ~RegisterContextResponse[56]: destroyed
F@17:45:35  ***[981]: In sigHandler - caught signal 15
X@17:45:35  sigHandler[987]: Received signal 15


1 EntityIds:
Entity Id 0:
  Id:         entity01
  Type:       Room
  isPattern:  false
Attribute List
  temperature
  occupancy
  lightstatus
AttributeExpression: Attribute Expression
3 Scopes:
Scope 0:
  Type:     st1
  Value:    sv1
Scope 1:
  Type:     FIWARE_Location
  FI-WARE Circle Area:
    Radius:     10
    Longitude:  45
    Latitude:   45
    Inverted:   0
Scope 2:
  Type:     st2
  Value:    sv2


1 ContextElementsContext Element 0:
  Entity Id:
    Id:         entity01
    Type:       Room
    isPattern:  false
  No AttributeDomainName
2 ContextAttributes  Attribute 0:
    Name:       temperature
    Type:       degree
    Value:      11
0 Attribute Metadatas
  Attribute 1:
    Name:       lightstatus
    Type:       light
    Value:      L23
0 Attribute Metadatas
0 Domain Metadatas
UpdateActionType: APPEND


1 EntityIds:
Entity Id 0:
  Id:         entity01
  Type:       Room
  isPattern:  false
Attribute List
  temperature
  occupancy
  lightstatus
AttributeExpression: Attribute Expression
3 Scopes:
Scope 0:
  Type:     st1
  Value:    sv1
Scope 1:
  Type:     FIWARE_Location
  FI-WARE Circle Area:
    Radius:     10
    Longitude:  45
    Latitude:   45
    Inverted:   0
Scope 2:
  Type:     st2
  Value:    sv2
2 EntityIds:
  Entity Id 0:
    Id:         ConferenceRoom
    Type:       Room
    isPattern:  false
  Entity Id 1:
    Id:         OfficeRoom
    Type:       Room
    isPattern:  false
  Attribute List
    temperature
    lightstatus
  Reference: http://127.0.0.1:1028
  Duration: P5Y
  AttributeExpression: testRestriction
3 Scopes:
  Scope 0:
    Type:     scope1
    Value:    sval1
  Scope 1:
    Type:     scope2
    Value:    sval2
  Scope 2:
    Type:     FIWARE_Location
    FI-WARE Circle Area:
      Radius:     11
      Longitude:  55
      Latitude:   55
      Inverted:   0
1 NotifyConditions    Notify Condition 0:
    type: ONCHANGE
    ConditionValue List
      temperature
      lightstatus
    RestrictionString: restriction
  Throttling: P5Y
