{ "dropped" : "testharness", "ok" : 1 }
T@17:45:37  paConfigActions[727]: setting trace levels to '0-255'
T@17:45:37  paConfigActions[728]: Leaving function paConfigActions
E@17:45:37  exitFunc[1009]: unlink(/tmp/orion_9999.pid): No such file or directory
T@17:45:37  semInit[61]: Initialized 'req' semaphore
T@17:45:37  semInit[62]: Initialized 'mongo' semaphore
T@17:45:37  mongoSemTake[90]: mongoConnect taking the 'mongo' semaphore for 'connecting to mongo'
T@17:45:37  mongoSemTake[92]: mongoConnect has the 'mongo' semaphore
T@17:45:37  mongoConnect[152]: mongo version server: 2.4.9 (mayor: 2, minor: 4, extra: 9)
T@17:45:37  mongoSemGive[118]: mongoConnect gives the 'mongo' semaphore for 'connecting to mongo'
F@17:45:37  ***[1063]: Connected to mongo at localhost:testharness
T@17:45:37  ensureLocationIndex[381]: ensuring 2dsphere index on location.coords (tenant )
T@17:45:37  recoverOntimeIntervalThreads[398]: query() in 'testharness.csubs' collection: '{ conditions.type: "ONTIMEINTERVAL" }'
T@17:45:37  mongoSemTake[90]: recoverOntimeIntervalThreads taking the 'mongo' semaphore for 'query in SubscribeContextCollection'
T@17:45:37  mongoSemTake[92]: recoverOntimeIntervalThreads has the 'mongo' semaphore
T@17:45:37  mongoSemGive[118]: recoverOntimeIntervalThreads gives the 'mongo' semaphore for 'query in SubscribeContextCollection'
V@17:45:37  restStart[569]: Starting HTTP daemon on IPv4 0.0.0.0 port 9999
V@17:45:37  restStart[611]: Starting HTTP daemon on IPv6 :: port 9999
T@17:45:38  connectionTreat[438]: notifyFormat: ''
T@17:45:38  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Content-Length: 1157
T@17:45:38  connectionTreat[442]: HTTP tenant: ''
T@17:45:38  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:38  restService[179]: Parsing payload for URL '/NGSI9/registerContext', method 'POST', service vector index: 0
T@17:45:38  payloadParse[53]: parsing data for service 'RegisterContextRequest'. Method: 'POST'
T@17:45:38  payloadParse[54]: outFormat: XML
T@17:45:38  payloadParse[58]: Calling xmlTreat for service request 1, payloadWord 'registerContextRequest'
2@17:45:38  xmlRequestGet[155]: Found xmlRequest of type 1, method 'POST' - index 0 (/registerContextRequest)
T@17:45:38  nullTreat[272]: Not treating node 'registerContextRequest'
T@17:45:38  nullTreat[272]: Not treating node 'contextRegistrationList'
T@17:45:38  entityIdList[409]: got an entityIdList
T@17:45:38  entityId[63]: Got an entityId
T@17:45:38  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:38  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:38  entityIdId[84]: Got an entityId:id: 'ConferenceRoom2'
T@17:45:38  entityId[63]: Got an entityId
T@17:45:38  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:38  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:38  entityIdId[84]: Got an entityId:id: 'OfficeRoom2'
T@17:45:38  nullTreat[272]: Not treating node 'contextRegistrationAttributeList'
T@17:45:38  crAttribute[99]: Creating an attribute
T@17:45:38  craName[113]: Got an attribute name: 'temperature'
T@17:45:38  craType[126]: Got an attribute type: 'degree'
T@17:45:38  craIsDomain[139]: Got a isDomain: 'false'
T@17:45:38  nullTreat[272]: Not treating node 'metadata'
T@17:45:38  craMetadata[152]: Creating a metadata
T@17:45:38  craMetadataName[166]: Got a metadata name: 'ID'
T@17:45:38  craMetadataType[179]: Got a metadata type: 'string'
T@17:45:38  craMetadataValue[192]: Got a metadata value: '1110'
T@17:45:38  craMetadata[152]: Creating a metadata
T@17:45:38  craMetadataName[166]: Got a metadata name: 'cm2'
T@17:45:38  craMetadataType[179]: Got a metadata type: 'string'
T@17:45:38  craMetadataValue[192]: Got a metadata value: 'XXX'
T@17:45:38  nullTreat[272]: Not treating node 'registrationMetadata'
T@17:45:38  regMetadata[205]: Creating a reg metadata
T@17:45:38  regMetadataName[219]: Got a reg metadata name: 'ID'
T@17:45:38  regMetadataType[232]: Got a reg metadata type: 'string'
T@17:45:38  regMetadataValue[245]: Got a reg metadata value: '2212'
T@17:45:38  regMetadata[205]: Creating a reg metadata
T@17:45:38  regMetadataName[219]: Got a reg metadata name: 'ID2'
T@17:45:38  regMetadataType[232]: Got a reg metadata type: 'string'
T@17:45:38  regMetadataValue[245]: Got a reg metadata value: '212'
T@17:45:38  providingApplication[258]: Got a providing application: 'http://localhost:1028/application'
T@17:45:38  duration[271]: Got a duration: 'PT1H'
T@17:45:38  registrationId[284]: Got a registration id: ''
T@17:45:38  xmlTreat[251]: Calling check for XML parsed tree (registerContextRequest)
T@17:45:38  ~RegisterContextResponse[56]: destroyed
T@17:45:38  payloadParse[69]: result: 'OK'
T@17:45:38  payloadParse[70]: outFormat: XML
T@17:45:38  restService[182]: payloadParse returns 'OK'
T@17:45:38  restService[197]: Treating service POST /NGSI9/registerContext
T@17:45:38  restService[237]: tenant: ''
T@17:45:38  reqSemTake[75]: mongoRegisterContext taking the 'req' semaphore for 'ngsi9 register request'
T@17:45:38  reqSemTake[77]: mongoRegisterContext has the 'req' semaphore
T@17:45:38  mongoRegisterContext[51]: Register Context Request
T@17:45:38  processRegisterContext[342]: Registration expiration: 1401648338
T@17:45:38  processRegisterContext[380]: Entity registration: {id: ConferenceRoom2, type: Room}
T@17:45:38  processRegisterContext[380]: Entity registration: {id: OfficeRoom2, type: Room}
T@17:45:38  processRegisterContext[394]: Attribute registration: {name: temperature, type: degree, isDomain: false}
T@17:45:38  processRegisterContext[406]: providingApplication registration: http://localhost:1028/application
T@17:45:38  addTriggeredSubscriptions[255]: JS function: function(){enId = [ "ConferenceRoom2" ,"OfficeRoom2" ];enType = [ "Room" ,"Room" ];for (var i=0; i < this.entities.length; i++) {if (this.entities[i].isPattern == "true") {for (var j=0; j < enId.length; j++) {if (enId[j].match(this.entities[i].id) && this.entities[i].type == enType[j]) {return true; }}}}return false; }
T@17:45:38  addTriggeredSubscriptions[268]: query() in 'testharness.casubs' collection: '{ $or: [ { entities: { $in: [ { id: "ConferenceRoom2", type: "Room", isPattern: "false" }, { id: "OfficeRoom2", type: "Room", isPattern: "false" } ] }, $or: [ { attrs: { $in: [ "temperature" ] } }, { attrs: { $size: 0 } } ], expiration: { $gt: 1401644738 } }, { entities.isPattern: "true", expiration: { $gt: 1401644738 }, $where: function(){enId = [ "ConferenceRoom2" ,"OfficeRoom2" ];enType = [ "Roo... } ] }'
T@17:45:38  mongoSemTake[90]: addTriggeredSubscriptions taking the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:38  mongoSemTake[92]: addTriggeredSubscriptions has the 'mongo' semaphore
T@17:45:38  mongoSemGive[118]: addTriggeredSubscriptions gives the 'mongo' semaphore for 'query in SubscribeContextAvailabilityCollection'
T@17:45:38  processRegisterContext[422]: upsert update() in 'testharness.registrations' collection: '{ _id: ObjectId('538b66c20c86a938d2dc5370'), expiration: 1401648338, contextRegistration: [ { entities: [ { id: "ConferenceRoom2", type: "Room" }, { id: "OfficeRoom2", type: "Room" } ], attrs: [ { name: "temperature", type: "degree", isDomain: "false" } ], providingApplication: "http://localhost:1028/application" } ] }'
T@17:45:38  mongoSemTake[90]: processRegisterContext taking the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:38  mongoSemTake[92]: processRegisterContext has the 'mongo' semaphore
T@17:45:38  mongoSemGive[118]: processRegisterContext gives the 'mongo' semaphore for 'update in RegistrationsCollection'
T@17:45:38  reqSemGive[104]: mongoRegisterContext gives the 'req' semaphore for 'ngsi9 register request'
T@17:45:38  ~RegisterContextResponse[56]: destroyed
T@17:45:38  release[153]: Releasing Metadata 0
T@17:45:38  release[153]: Releasing Metadata 1
T@17:45:38  release[153]: Releasing Metadata 0
T@17:45:38  release[153]: Releasing Metadata 1
T@17:45:38  restReply[65]: Response 1: responding with 141 bytes, Status Code 200
T@17:45:38  restReply[66]: Response payload: '<registerContextResponse>
  <duration>PT1H</duration>
  <registrationId>538b66c20c86a938d2dc5370</registrationId>
</registerContextResponse>
'
T@17:45:38  ~RegisterContextResponse[56]: destroyed
T@17:45:38  connectionTreat[438]: notifyFormat: ''
T@17:45:38  httpHeaderGet[137]: HTTP Header:   User-Agent: curl/7.26.0
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Host: localhost:9999
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Content-Type: application/xml
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Accept: application/xml
T@17:45:38  httpHeaderGet[137]: HTTP Header:   Content-Length: 379
T@17:45:38  connectionTreat[442]: HTTP tenant: ''
T@17:45:38  connectionTreat[470]: 'default' value for notifyFormat (ciP->outFormat == 1)): 'XML'
T@17:45:38  restService[179]: Parsing payload for URL '/NGSI9/discoverContextAvailability', method 'POST', service vector index: 2
T@17:45:38  payloadParse[53]: parsing data for service 'DiscoverContextAvailabilityRequest'. Method: 'POST'
T@17:45:38  payloadParse[54]: outFormat: XML
T@17:45:38  payloadParse[58]: Calling xmlTreat for service request 2, payloadWord 'discoverContextAvailabilityRequest'
2@17:45:38  xmlRequestGet[155]: Found xmlRequest of type 2, method 'POST' - index 2 (/discoverContextAvailabilityRequest)
T@17:45:38  nullTreat[272]: Not treating node 'discoverContextAvailabilityRequest'
T@17:45:38  nullTreat[272]: Not treating node 'entityIdList'
T@17:45:38  entityId[49]: Got an entityId
T@17:45:38  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:38  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:38  entityIdId[70]: Got an entityId:id: 'ConferenceRoom2'
T@17:45:38  entityId[49]: Got an entityId
T@17:45:38  entityIdParse[291]: Got a type for an entity: 'Room'
T@17:45:38  entityIdParse[296]: Got an isPattern for an entity: 'false'
T@17:45:38  entityIdId[70]: Got an entityId:id: 'OfficeRoom2'
T@17:45:38  nullTreat[272]: Not treating node 'attributeList'
T@17:45:38  attribute[85]: Got an attribute
T@17:45:38  attribute[85]: Got an attribute
T@17:45:38  xmlTreat[251]: Calling check for XML parsed tree (discoverContextAvailabilityRequest)
T@17:45:38  payloadParse[69]: result: 'OK'
T@17:45:38  payloadParse[70]: outFormat: XML
T@17:45:38  restService[182]: payloadParse returns 'OK'
T@17:45:38  restService[197]: Treating service POST /NGSI9/discoverContextAvailability
T@17:45:38  restService[237]: tenant: ''
T@17:45:38  reqSemTake[75]: mongoDiscoverContextAvailability taking the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:38  reqSemTake[77]: mongoDiscoverContextAvailability has the 'req' semaphore
T@17:45:38  mongoDiscoverContextAvailability[256]: DiscoverContextAvailability Request
T@17:45:38  registrationsQuery[1066]: Entity discovery: {id: ConferenceRoom2, type: Room}
T@17:45:38  registrationsQuery[1066]: Entity discovery: {id: OfficeRoom2, type: Room}
T@17:45:38  registrationsQuery[1074]: Attribute discovery: 'temperature'
T@17:45:38  registrationsQuery[1074]: Attribute discovery: 'pressure'
T@17:45:38  registrationsQuery[1097]: query() in 'testharness.registrations' collection: '{ $or: [ { contextRegistration.entities: { $in: [ { id: "ConferenceRoom2", type: "Room" }, { type: "Room", id: "ConferenceRoom2" }, { id: "OfficeRoom2", type: "Room" }, { type: "Room", id: "OfficeRoom2" } ] } }, { contextRegistration.entities.id: { $in: {} } } ], expiration: { $gt: 1401644738 }, contextRegistration.attrs.name: { $in: [ "temperature", "pressure" ] } }'
T@17:45:38  mongoSemTake[90]: registrationsQuery taking the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:38  mongoSemTake[92]: registrationsQuery has the 'mongo' semaphore
T@17:45:38  mongoSemGive[118]: registrationsQuery gives the 'mongo' semaphore for 'query in RegistrationsCollection'
T@17:45:38  registrationsQuery[1124]: retrieved document: '{ _id: ObjectId('538b66c20c86a938d2dc5370'), expiration: 1401648338, contextRegistration: [ { entities: [ { id: "ConferenceRoom2", type: "Room" }, { id: "OfficeRoom2", type: "Room" } ], attrs: [ { name: "temperature", type: "degree", isDomain: "false" } ], providingApplication: "http://localhost:1028/application" } ] }'
T@17:45:38  reqSemGive[104]: mongoDiscoverContextAvailability gives the 'req' semaphore for 'mongo ngsi9 discovery request'
T@17:45:38  restReply[65]: Response 2: responding with 904 bytes, Status Code 200
T@17:45:38  restReply[66]: Response payload: '<discoverContextAvailabilityResponse>
  <contextRegistrationResponseList>
    <contextRegistrationResponse>
      <contextRegistration>
        <entityIdList>
          <entityId type="Room" isPattern="false">
            <id>ConferenceRoom2</id>
          </entityId>
          <entityId type="Room" isPattern="false">
            <id>OfficeRoom2</id>
          </entityId>
        </entityIdList>
        <contextRegistrationAttributeList>
          <contextRegistrationAttribute>
            <name>temperature</name>
            <type>degree</type>
            <isDomain>false</isDomain>
          </contextRegistrationAttribute>
        </contextRegistrationAttributeList>
        <providingApplication>http://localhost:1028/application</providingApplication>
      </contextRegistration>
    </contextRegistrationResponse>
  </contextRegistrationResponseList>
</discoverContextAvailabilityResponse>
'
T@17:45:38  ~RegisterContextResponse[56]: destroyed
F@17:45:38  ***[981]: In sigHandler - caught signal 15
X@17:45:38  sigHandler[987]: Received signal 15


1 ContextRegistrationsContext Registration 0:
2 EntityIds:
  Entity Id 0:
    Id:         ConferenceRoom2
    Type:       Room
    isPattern:  false
  Entity Id 1:
    Id:         OfficeRoom2
    Type:       Room
    isPattern:  false
1 ContextRegistrationAttributes  Attribute 0:
    Name:       temperature
    Type:       degree
    isDomain:   false
2 Attribute Metadatas
    Attribute Metadata 0:
      Name:     ID
      Type:     string
      Value:    1110
    Attribute Metadata 1:
      Name:     cm2
      Type:     string
      Value:    XXX
2 Registration Metadatas
  Registration Metadata 0:
    Name:     ID
    Type:     string
    Value:    2212
  Registration Metadata 1:
    Name:     ID2
    Type:     string
    Value:    212
  ProvidingApplication: http://localhost:1028/application
Duration: PT1H
No RegistrationId


2 EntityIds:
Entity Id 0:
  Id:         ConferenceRoom2
  Type:       Room
  isPattern:  false
Entity Id 1:
  Id:         OfficeRoom2
  Type:       Room
  isPattern:  false
Attribute List
  temperature
  pressure
No AttributeExpression
No scopes
2 EntityIds:
Entity Id 0:
  Id:         ConferenceRoom2
  Type:       Room
  isPattern:  false
Entity Id 1:
  Id:         OfficeRoom2
  Type:       Room
  isPattern:  false
Attribute List
  temperature
  pressure
No AttributeExpression
No scopes


2 EntityIds:
Entity Id 0:
  Id:         ConferenceRoom2
  Type:       Room
  isPattern:  false
Entity Id 1:
  Id:         OfficeRoom2
  Type:       Room
  isPattern:  false
Attribute List
  temperature
  pressure
No AttributeExpression
No scopes
