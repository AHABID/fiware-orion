<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>orioncontextbroker</title>
</head>
<body>
  <script src="https://api.apiary.io/seeds/embed.js"></script>
  <script>
    var embed = new Apiary.Embed({
      apiBlueprint: "FORMAT: 1A\n\n# Orion Context Broker\n\n<!--\n Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U\n\n This file is part of Orion Context Broker.\n\n Orion Context Broker is free software: you can redistribute it and/or\n modify it under the terms of the GNU Affero General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n\n Orion Context Broker is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n General Public License for more details.\n\n You should have received a copy of the GNU Affero General Public License\n along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.\n\n For those usages not covered by this license please contact with\n iot_support at tid dot es\n-->\n\nThe Orion Context Broker is an implementation of the Publish/Subscribe Context Broker GE, providing the NGSI9 and NGSI10 interfaces. Using these interfaces, clients can do several operations:\n\n* Register context producer applications, e.g. a temperature sensor within a room.\n* Update context information, e.g. send updates of temperature.\n* Being notified when changes on context information take place (e.g. the temperature has changed) or with a given frequency (e.g. get the temperature each minute).\n* Query context information. The Orion Context Broker stores context information updated from applications, so queries are resolved based on that information.\n\n\n* <b>Multi service tenancy<\/b>  \n\nFiware-Service and Fiware-ServicePath are set at entity creation time using HTTP headers in the entity creation REST request.\n\nThe Orion Context Broker implements a simple multitenant/multiservice model based and logical database separation, to ease service/tenant based authorization policies provided by other FI-WARE components or third party software, e.g. the ones in the FI-WARE security framework (PEP proxy, IDM and Access Control). This functionality is activated when the \"-multiservice\" command line option is used. When \"-multiservice\" is used, Orion uses the \"Fiware-Service\" HTTP header in the request to identify the service/tenant. If the header is not present in the HTTP request, the default service/tenant is used.\n\nMultitenant/multiservice ensures that the entities/attributes/subscriptions of one service/tenant are \"invisible\" to other services/tentants. For example, queryContext on tenantA space will never return entities/attributes from tenantB space.\n   \n   \n* <b>Entity service paths<\/b>   \n   \nOrion Context Broker supports hierarchical scopes, so entities can be assigned to a scope at creation time with updateContext (or related convenience operation). Then, queryContext (and related convenience operations)can be also scoped to locate entities in the corresponding scopes.\n\nFor example, consider an Orion-based application using the following scopes (shown in the figure):\n\n+ Madrid, as first level scope\n+ Gardens and Districts, as second-level scope (children of Madrid)\n+ ParqueNorte, ParqueOeste and ParqueSur (children of Gardens) and Fuencarral and Latina (children of Districts)\nParterre1 and Parterre2 (children of ParqueNorte)\n\n![Authentication flow](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/images/c/ce/ServicePathExample.png)\n\nThe scope to use is specified using the “Fiware-ServicePath” HTTP in update/query request. For example, to create the entity “Tree1” of type \"Tree\" in “Parterre1” the following Fiware-ServicePath will be used:   \n   \n    Fiware-ServicePath:/Madrid/Gardens/ParqueNorte/Parterre1\n\nProperties:\n\n+ A query on a service path will look only into the specified node (E.g:Parterre1).\n+ Use \"ParentNode/#\" to include all child nodes.\n+ Queries without Fiware-ServicePath resolve to \"/#\".\n+ Entities will fall in the \"/\" node by default.\n+ You can OR a query using a comma (,) operator in the header.(For example, to query all street lights that are either in ParqueSur or in ParqueOeste you would use:ServicePath: Madrid/Gardens/ParqueSur,Madrid/Gardens/ParqueOeste)\n+ You can OR up to 10 different scopes.Maximum scope levels: 10 (Scope1/Scope2/.../Scope10).\n+ You can have the same element IDs in different scopes.\n+ You can\'t change scope once the element is created.\n+ One entity can belong to only one scope.\n+ It works not only with queries, but also with subscriptions/notifications.\n+ It works not only in NGSI10, but also with registrations/discoveries (NGSI9).\n\nSo a quick example, of creating a data on a Context Broker, will be ;\n\n        POST <cb_host>:1026/v1/contextEntities\n        ...\n        {\n            \"id\": \"Car1\",\n            \"type\": \"Car\",\n            \"attributes\": [\n            {\n            \"name\": \"speed\",\n            \"type\": \"float\",\n            \"value\": \"98\"\n            }\n            ]\n        }\n        \nIn this example, we are playing the role of context producers by creating an entity with type Car, named Car1 and adding the speed as an attribute.An the Context Broker will respond ;\n\n        200 OK\n        ...\n        {\n        \"contextResponses\": [\n        {\n        \"attributes\": [\n            {\n            \"name\": \"speed\",\n            \"type\": \"float\",\n            \"value\": \"\"\n            }\n        ],\n        \"statusCode\": {\n                \"code\": \"200\",\n                \"reasonPhrase\": \"OK\"\n            }\n        }\n        ],\n            \"id\": “Car1\",\n            \"isPattern\": \"false\",\n            \"type\": “Car\"\n        }\n        \nThe entity Car has been created with the specific attribute speed.\n\n# Context management using NGSI10 \n\n### Tutorial on NGSI10 convenience operations   \n\nThis section describes the different convenience operations described as part of the FI-WARE NGSI REST API NGSI10 that Orion Context Broker supports, showing examples of requests and responses. \nConvenience operations are a set of operations that have been defined by FI-WARE project to ease the usage of NGSI implementations as a complement to the standard operations defined in the OMA NGSI specification. \n\nAt the end, you will have the basic knowledge to create applications (both context producers and consumers) using Orion Context Broker with NGSI10 standard operations:\n\n+ /v1/contextEntities\n+ /v1/contextEntities/{EntityID*}\n+ /v1/contextEntities/{EntityID*}/attributes/{attributeName} \n+ /v1/contextEntities/{EntityID*}/attributes/{attributeName}/{valueID}   \n+ /v1/contextTypes\n+ /v1/contextTypes/{entityType}\n+ /v1/contextEntityTypes/{typeName}\n+ /v1/contextEntityTypes/{typeName}/attributes/{attributeName}\n+ /v1/contextSubscriptions\n+ /v1/contextSubscriptions/{subscriptionID}\n\n### Tutorial on NGSI10 standard operations \n\nThis section describes the different standard NGSI10 operations that the Orion Context Broker supports, showing examples of requests and responses. We use the term \"standard\" as they are directly derived from the OMA NGSI specification, to distinguish them from the other family of operations (\"convenience\") which has been defined by the FI-WARE project to ease the usage of NGSI implementations\n\nAt the end, you will have the basic knowledge to create applications (both context producers and consumers) using Orion Context Broker with NGSI10 standard operations:    \n    \n+ /v1/updateContext\n+ /v1/queryContext\n+ /v1/subscribeContext\n+ /v1/updateContextSubscription\n+ /v1/unsubscribeContext\n\n\n\n##  /v1/contextEntities\n\nOrion Context Broker will start in an empty state, so first of all we need to make it aware of the existence of certain entities.\n\n\n\n\n# Create entities [POST]\n\nYou can use \"POST /v1/contextEntitites\" to create entities. In this case, the entity information (ID and type) is included in the payload and the URL is independent of that fields.\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>Is a vector that contains the id and the type of the entity we want to create<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>An array which contains the elements we will store, related with the entity<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponses<\/b><\/td>\n    <td>An array which contains the attributes of each entity stored and the status code<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Id/IsPattern/Type<\/b><\/td>\n    <td>General information of the entity<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n \n So the corresponding elements and the values, that we have to include in the payload request will be;\n<center>\n\n|Payload Information Request  |Description   |Value          |\n|:----------------------------|:-------------|:--------------|\n| <b>Entity ID<\/b>            |              |               |\n|                             | Id           |Room1          |\n|                             | Type         |Room           |\n| <b>Attributes<\/b>           |              |               |                       \n|                             | Name         |Temperature    |\n|                             | Type         |Float          |\n|                             | Value        |23             |\n|                             | Name         |Pressure       |\n|                             | Type         |Integer        |\n|                             | Value        |720            |\n\nAnd the response will be;\n\n|Payload Information Response      |Description           |             |              | Value         |\n|:---------------------------------|:---------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                      |             |              |               |\n|                                  |<b>Attributes<\/b>     |             |              |               |  \n|                                  |                      |             | Name         |Temperature    |\n|                                  |                      |             | Value        |Float          |\n|                                  |                      |             | Type         |23             |\n|                                  |                      |             | Name         |Pressure       |\n|                                  |                      |             | Value        |Integer        |\n|                                  |                      |             | Type         |720            |\n|<b>Id<\/b>                         |                      |             |              |Room1          |\n|<b>IsPattern<\/b>                  |                      |             |              |false          |\n|<b>Type<\/b>                       |                      |             |              |Room           |\n|                                  |<b>StatusCode<\/b>     |             |              |               |\n|                                  |                      | Code        |              |200            |\n|                                  |                      | ReasonPhrase|              |OK             |\n\n<\/center>\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n    + Body\n            \n            {\n                \"id\": \"Room1\",\n                \"type\": \"Room\",\n                \"attributes\" : [\n                {\n                    \"name\" : \"temperature\",\n                    \"type\" : \"float\",\n                    \"value\" : \"23\"\n                },\n                {\n                    \"name\" : \"pressure\",\n                    \"type\" : \"integer\",\n                    \"value\" : \"720\"\n                }\n                ]\n            }\n\n\n+ Response 200 \n\n    + Headers (application/json)\n    \n        Accept: application/json\n\n    + Body \n      \n            {\n                \"contextResponses\": [\n                {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\",\n                            \"type\": \"float\",\n                            \"value\": \"\"\n                        },\n                        {\n                            \"name\": \"pressure\",\n                            \"type\": \"integer\",\n                            \"value\": \"\"\n                        }\n                    ],\n                        \"statusCode\": {\n                            \"code\": \"200\",\n                            \"reasonPhrase\": \"OK\"\n                        }\n                        }\n                ],\n                    \"id\": \"Room1\",\n                    \"isPattern\": \"false\",\n                    \"type\": \"Room\"\n            }\n            \n            \n# Get all entities [GET]\n\n\nOn the other hand, to get all the entities stored, we use the GET method.Here are the tables with the corresponding elements and values, returned by the Context Broker;\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponses<\/b><\/td>\n    <td>An array that contains the ContextElement and the StatusCode <\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array containing the attributes and the general information ,that is stored for each entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|Payload Information Response      |Description           |             |              | Value         |\n|:---------------------------------|:---------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                      |             |              |               |\n|                                  |<b>ContextElement<\/b> |             |              |               |  \n|                                  |                      | Attributes  |              |               |\n|                                  |                      |             | Name         |Temperature    |\n|                                  |                      |             | Value        |Float          |\n|                                  |                      |             | Type         |23             |\n|                                  |                      |             | Name         |Pressure       |\n|                                  |                      |             | Value        |Integer        |\n|                                  |                      |             | Type         |720            |\n|                                  |                      | Id          |              |Room1          |\n|                                  |                      | IsPattern   |              |false          |\n|                                  |                      | Type        |              |\"\"             |\n|                                  |<b>StatusCode<\/b>     |             |              |               |\n|                                  |                      |             | Code         |200            |\n|                                  |                      |             | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Response 200 (application/json)\n    \n        {\n            \"contextResponses\": [\n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\", \n                            \"type\": \"float\", \n                            \"value\": \"23\"\n                        }, \n                        {\n                            \"name\": \"pressure\", \n                            \"type\": \"integer\", \n                            \"value\": \"720\"\n                        }\n                    ], \n                    \"id\": \"Room1\", \n                    \"isPattern\": \"false\", \n                    \"type\": \"\"\n                }, \n                \"statusCode\": {\n                    \"code\": \"200\", \n                    \"reasonPhrase\": \"OK\"\n                }\n            }\n        ]\n        }\n\n\n## /v1/contextEntities/{EntityID*}\n\nIn order to be more specific, we can define the entity ID (e.g Room1) and specify in the body the attributes .\n\n+ Parameters\n    + EntityID (required, string,`Room1`) ... ID of the entity\n\n\n# Append context attribute values [POST]\n\nFor example, we will use POST to create Room1 entity with temperature and pressure attributes (with its initial values): \n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to create<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>An array which contains the elements we will store, related with the entity<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponses<\/b><\/td>\n    <td>An array which contains the attributes of each entity and the status code<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Id/IsPattern/Type<\/b><\/td>\n    <td>General information of the entity<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nThe entity information (ID and type) is included in the URL;\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n\n<\/center>\n\nThe fields included in the payload will be;\n<center>\n\n|Payload Information Request  |Description   |Value          |\n|:----------------------------|:-------------|:--------------|\n|<b>Attributes<\/b>            |              |               |                       \n|                             | Name         |Temperature    |\n|                             | Type         |Float          |\n|                             | Value        |23             |\n|                             | Name         |Pressure       |\n|                             | Type         |Integer        |\n|                             | Value        |720            |\n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description           |             |              | Value         |\n|:---------------------------------|:---------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                      |             |              |               |\n|                                  |<b>Attributes<\/b>     |             |              |               |  \n|                                  |                      |             | Name         |Temperature    |\n|                                  |                      |             | Value        |Float          |\n|                                  |                      |             | Type         |23             |\n|                                  |                      |             | Name         |Pressure       |\n|                                  |                      |             | Value        |Integer        |\n|                                  |                      |             | Type         |720            |\n|<b>Id<\/b>                         |                      |             |              |Room1          |\n|<b>IsPattern<\/b>                  |                      |             |              |false          |\n|<b>Type<\/b>                       |                      |             |              |Room           |\n|                                  |<b>StatusCode<\/b>     |             |              |               |\n|                                  |                      | Code        |              |200            |\n|                                  |                      | ReasonPhrase|              |OK             |\n\n<\/center>\n\n\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n    \n                {\n                    \"attributes\" : [\n                    {\n                        \"name\" : \"temperature\",\n                        \"type\" : \"float\",\n                        \"value\" : \"23\"\n                    },\n                    {\n                        \"name\" : \"pressure\",\n                        \"type\" : \"integer\",\n                        \"value\" : \"720\"\n                    }\n                    ]\n                }\n\n\n+ Response 200\n    \n    + Headers (application/json)\n    \n        Accept: application/json\n\n    + Body \n    \n            {\n            \"contextResponses\": [\n                {\n                    \"attributes\": [\n                    {\n                        \"name\": \"temperature\",\n                        \"type\": \"float\",\n                        \"value\": \"\"\n                    },\n                    {\n                        \"name\": \"pressure\",\n                        \"type\": \"integer\",\n                        \"value\": \"\"\n                    }\n                    ],\n                        \"statusCode\": \n                        {\n                            \"code\": \"200\",\n                            \"reasonPhrase\": \"OK\"\n                        }\n                    }\n                ], \n                    \"id\": \"Room1\", \n                    \"isPattern\": \"false\", \n                    \"type\": \"\"\n            }\n        \n\n\n\n# Retrieve all available information about the context entity [GET]\n\nBy using convenience operations you can discover registration information for a single entity or for an entity-attribute pair.\n\nOn the other hand, discovery of not registered elements will produce an error response.\n\nWe can query all the attribute values of a given entity,by using GET method:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to retrieve the information<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array which contains the attributes and the general information ,that is stored, for the entity requested<\/td>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n\n<\/center>\n\nThe Context Broker will return the corresponding values;\n\n<center>\n\n| Payload Information Response     | Description    |              | Value         |\n|:---------------------------------|:---------------|:-------------|:--------------|\n| <b>ContextElement<\/b>            |                |              |               |  \n|                                  | Attributes     |              |               |\n|                                  |                | Name         |Temperature    |\n|                                  |                | Type         |Float          |\n|                                  |                | Value        |23             |\n|                                  |                | Name         |Pressure       |\n|                                  |                | Type         |Integer        |\n|                                  |                | Value        |720            |\n|                                  | Id             |              |Room1          |\n|                                  | IsPattern      |              |false          |\n|                                  | Type           |              |\"\"             |\n| <b>StatusCode<\/b>                |                |              |               |\n|                                  |                | Code         |200            |\n|                                  |                | ReasonPhrase |OK             |\n\n<\/center>\n\n\n+ Response 200 (application/json)\n   \n        {\n            \"contextElement\": {\n                    \"attributes\": [\n                    {\n                        \"name\": \"temperature\",\n                        \"type\": \"float\",\n                        \"value\": \"23\"\n                    },\n                    {\n                        \"name\": \"pressure\",\n                        \"type\": \"integer\",\n                        \"value\": \"720\"\n                    }\n                    ],\n                        \"id\": \"Room1\",\n                        \"isPattern\": \"false\",\n                        \"type\": \"Room\"\n                    },\n                        \"statusCode\": {\n                        \"code\": \"200\",\n                        \"reasonPhrase\": \"OK\"\n                    }\n        }  \n\n+ Response 404 (application/json)\n\n        {\n            \"errorCode\": {\n            \"code\": \"404\",\n            \"reasonPhrase\": \"No context element found\"\n            }\n        }\n\n# Replace a number of attribute values [PUT]\n\nTo update or to replace  a number of attribute values  of the entity requested, it is used PUT method.\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to update<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>An array which contains the corresponding values we will update, related with the entity requested<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array which contains the attributes modified and the general information of the entity requested<\/td>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n\n<\/center>\n\nWe want to change the value of the temperature and pressure for Room1,as it is shown in the table;\n<center>\n\n|Payload Information Request  |Description   |Value          |\n|:----------------------------|:-------------|:--------------|\n| <b>Attributes<\/b>           |              |               |                       \n|                             | Name         |Temperature    |\n|                             | Type         |Float          |\n|                             | Value        |21             |\n|                             | Name         |Pressure       |\n|                             | Type         |Integer        |\n|                             | Value        |763            |\n\n<\/center>\n\nSo, the response of the Context Broker will be;\n\n<center>\n\n| Payload Information Response     | Description    |              | Value         |\n|:---------------------------------|:---------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                |              |               |  \n|                                  | Attributes     |              |               |\n|                                  |                | Name         |Temperature    |\n|                                  |                | Type         |Float          |\n|                                  |                | Value        |\"\"             |\n|                                  |                | Name         |Pressure       |\n|                                  |                | Type         |Integer        |\n|                                  |                | Value        |\"\"             |\n|<b>StatusCode<\/b>                 |                |              |               |\n|                                  |                | Code         |200            |\n|                                  |                | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Request (application/json)\n    \n    + Headers \n    \n            Accept: application/json\n        \n    + Body\n               \n                {\n                    \"attributes\" : [\n                    {\n                        \"name\" : \"temperature\",\n                        \"type\" : \"float\",\n                        \"value\" : \"21\"\n                    },\n                    {\n                        \"name\" : \"pressure\",\n                        \"type\" : \"integer\",\n                        \"value\" : \"763\"\n                    }\n                    ]\n                }\n\n+ Response 200\n\n        {\n            \"contextResponses\": [\n            {\n                \"attributes\": [\n                    {\n                        \"name\": \"temperature\", \n                        \"type\": \"float\", \n                        \"value\": \"\"\n                    }, \n                    {\n                        \"name\": \"pressure\", \n                        \"type\": \"integer\", \n                        \"value\": \"\"\n                    }\n                ], \n                        \"statusCode\": {\n                        \"code\": \"200\", \n                        \"reasonPhrase\": \"OK\"\n                    }\n                    }\n            ]\n        }\n\n# Delete all entity information [DELETE]\n\nFinally DELETE method which is used to delete all the information, of the entity given (in this case Room1):\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to delete<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n\n<\/center>\n\nThe Context Broker returns the confirmation;\n<center>\n\n| Payload Information Response     | Description  | Value         |\n|:---------------------------------|:-------------|:--------------|\n|<b>StatusCode<\/b>                 |              |               |\n|                                  | Code         |200            |\n|                                  | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Response 200 (application/json)\n\n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n        \n        \n        \n\n## /v1/contextEntities/{EntityID*}/attributes/{attributeName}  \n\n+ Parameters\n\n    + EntityID (required, string,`Room1`) ... ID of the entity\n    \n    + attributeName (required,string,`temperature`) ... Name of the attribute\n  \n\n\n# Append context attribute value [POST]\n\nIn this sesion we are going to use another way to create,get, put and delete information.The idea is that you can also create an attribute (and the containing entity along the way) in the following way\nusing the POST method;  \n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to create<\/td>\n  <\/tr>\n  <tr>\n    <td><b>AttributeName<\/b><\/td>\n    <td>The name of attribute we want to create<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n|<b>AttributeName<\/b>         |Temperature    |\n\n<\/center>\n\n<center>\n\n| Payload Information Request      | Value      |\n|:---------------------------------|:-----------|\n|<b>Value<\/b>                      |21          |\n\n<\/center>\n\n<center>\n\n| Payload Information Response     | Description  | Value         |\n|:---------------------------------|:-------------|:--------------|\n|<b>StatusCode<\/b>                 |              |               |\n|                                  | Code         |200            |\n|                                  | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n     \n            {\n                \"value\" : \"21\"\n            }\n    \n+ Response 200 (application/json)\n\n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n        \n# Retrieve attribute value/s [GET]\n\nWe can also query a single attribute of a given entity:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to retrieve the information<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>Containing the information of the attribute requested<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nFor example, we want to know the value of the temperature of Room1;\n<center>\n\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n|<b>AttributeName<\/b>         |Temperature    |   \n\n<\/center>\n\n<\/center>\n\n| Payload Information Response     | Description    | Value         |\n|:---------------------------------|:---------------|:--------------|\n| <b>Attributes<\/b>                |                |               |\n|                                  | Name           |Temperature    |\n|                                  | Value          |21             |\n|                                  | Type           |\"\"             |\n| <b>StatusCode<\/b>                |                |               |\n|                                  | Code           |200            |\n|                                  | ReasonPhrase   |OK             |\n\n<\/center>\n\n\n+ Response 200 (application/json)\n   \n        {\n            \"attributes\": [\n                {\n                    \"name\": \"temperature\", \n                    \"type\": \"\", \n                    \"value\": \"21\"\n                }\n            ], \n                \"statusCode\": {\n                \"code\": \"200\", \n                \"reasonPhrase\": \"OK\"\n                }\n        }\n\n+ Response 404 (application/json)\n\n        {\n            \"statusCode\": {\n                \"code\": \"404\", \n                \"details\": \"Entity id: /Room1/\", \n                \"reasonPhrase\": \"No context element found\"\n            }\n        }\n\n# Update context attribute values [PUT]\n\nTo update/change an attribute value of an entity, it is used PUT method and we will need :\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to update <\/td>\n  <\/tr>\n  <tr>\n    <td><b>AttributeName<\/b><\/td>\n    <td>The name of the attribute we want to update<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n\nIn this case we want to change the temperature of Room1 to 26.3;\n\n<center>\n\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n|<b>AttributeName<\/b>         |Temperature    | \n\n<\/center>\n\n<center>\n\n| Payload Information Request      | Value      |\n|:---------------------------------|:-----------|\n|<b>Value<\/b>                      |26.3        |\n\n<\/center>\n\n<center>\n\n| Payload Information Response     | Description  | Value         |\n|:---------------------------------|:-------------|:--------------|\n| <b>StatusCode<\/b>                |              |               |\n|                                  | Code         |200            |\n|                                  | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Request (application/json)\n    \n               \n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n    \n            {\n                \"value\" : \"26.3\"\n            }\n            \n+ Response 200\n    \n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n\n# Delete all attribute values [DELETE]\n\nFinally, to delete an attribute it is use DELETE method:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL <\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to delete <\/td>\n  <\/tr>\n  <tr>\n    <td><b>AttributeName<\/b><\/td>\n    <td>The name of attribute we want to delete <\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response <\/th>\n    <th>Description<\/th>\n  <\/tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity ID<\/b>             |Room1          |\n|<b>AttributeName<\/b>         |Temperature    | \n\n<\/center>\n\n\n<center>\n\n| Payload Information Response     | Description  | Value         |\n|:---------------------------------|:-------------|:--------------|\n| <b>StatusCode<\/b>                |              |               |\n|                                  | Code         |200            |\n|                                  | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Response 200 (application/json)\n\n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n\n\n##  /v1/contextEntities/{EntityID*}/attributes/{attributeName}/{valueID}\n\n* <b>Metadata ID for attributes<\/b>\n\n\n# Retrieve specific attribute value [GET]\n\nSometimes, you could want to model attributes belonging to an entity which share the same name and type. For example, let\'s consider an entity \"Room1\" which has two temperature sensors: one in the ground and other in the wall. We can model this as two instances of the attribute \"temperature\", one with ID \"ground\" and the other with the ID \"wall\". We use the metadata ID for this purpose.\n\nThe are some convenience operations that can be use with attributes using ID metadata:GET,PUT and DELETE.\n\nIn order  to retrieve a specific attribute value is used GET method:\n \n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n  <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>AttributeName<\/b><\/td>\n    <td>The name of attribute that we want the information<\/td>\n  <\/tr>\n  <tr>\n      <td><b>Value ID<\/b><\/td>\n    <td>Specific attribute value<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>Contains the metadata atributes and the attribute<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr> \n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nIn this case, we want the value of the temperature on the ground of the Room1;\n<center>\n\n|URL information              |Value                    |\n|:----------------------------|:------------------------|\n|<b>EntityID<\/b>              | Room1                   |\n|<b>AttributeName<\/b>         | Temperature             |\n|<b>ValueID<\/b>               | Ground                  |\n\n<\/center>\n\n\n<center>\n\n|Payload Information Response      |Description     |           | Value      |\n|:---------------------------------|:---------------|:----------|:-----------|\n|<b>Attributes<\/b>                 |                |           |            |\n|                                  | Metadatas      |           |            |\n|                                  |                |name       |ID          |\n|                                  |                |type       |string      |\n|                                  |                |value      |ground      |\n|                                  | name           |           |temperature |\n|                                  | type           |           |float       | \n|                                  | value          |           |23.5        |\n|<b>StatusCode<\/b>                 |                |           |            |\n|                                  | Code           | 200       |            |\n|                                  | ReasonPhrase   | Ok        |            |\n\n<\/center>\n\n+ Parameters\n\n    \n    + EntityID (required, string,`Room1`) ... ID of the entity\n\n    + attributeName (required,string,`temperature`) ...  Name of the attribute\n\n    + valueID (required,string,`ground`) ... Specific attribute value\n\n+ Response 200 (application/json)\n\n        {\n            \"attributes\": [\n            {\n                \"metadatas\": [\n                    {\n                        \"name\": \"ID\", \n                        \"type\": \"string\", \n                        \"value\": \"ground\"\n                    }\n                ], \n                \"name\": \"temperature\", \n                \"type\": \"float\", \n                \"value\": \"23.5\"\n            }\n        ], \n            \"statusCode\": {\n                \"code\": \"200\", \n                \"reasonPhrase\": \"OK\"\n            }\n        }\n\n\n\n# Replace attribute value [PUT]  \n\nIn order to replace attribute value, it is used PUT method:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n  <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to update/change the value<\/td>\n  <\/tr>\n  <tr>\n      <td><b>AttributeName<\/b><\/td>\n    <td>The name of attribute we want to update/change the value<\/td>\n  <\/tr>\n  <tr>\n      <td><b>Value ID<\/b><\/td>\n    <td>Specific attribute value<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n    <tr>\n    <td><b>Value<\/b><\/td>\n    <td>Corresponding value ot the attribute<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr> \n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nSo to change the value of the temperature on the ground of the Room1 we will add the corresponding values where is shown;\n<center>\n\n|URL information              |Value                    |\n|:----------------------------|:------------------------|\n|<b>EntityID<\/b>              | Room1                   |\n|<b>AttributeName<\/b>         | Temperature             |\n|<b>ValueID<\/b>               | Ground                  |\n\n<\/center>\n\n<center>\n\n|Payload Information Request  |Value                    |\n|:----------------------------|:------------------------|\n|<b>Value<\/b>                 | 26.3                    |\n\n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description     |           | Value      |\n|:---------------------------------|:---------------|:----------|:-----------|\n|<b>StatusCode<\/b>                 |                |           |            |\n|                                  | Code           | 200       |            |\n|                                  | ReasonPhrase   | Ok        |            |\n\n<\/center>\n\n+ Parameters\n\n    \n    + EntityID (required, string,`Room1`) ... ID of the entity\n\n    + attributeName (required,string,`temperature`) ...  Name of the attribute\n\n    + valueID (required,string,`ground`) ... Specific attribute value\n\n\n+ Request (application/json)\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n    \n            {\n                \"value\" : \"26.3\"\n            }\n\n+ Response 200\n\n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n\n# Delete attribute value [DELETE]\n\nFinally  to remove a value of a specific attribute identified by ID:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n  <td><b>Entity ID<\/b><\/td>\n    <td>The name of the entity we want to delete<\/td>\n  <\/tr>\n  <tr>\n      <td><b>AttributeName<\/b><\/td>\n    <td>The name of attribute we want to delete<\/td>\n  <\/tr>\n  <tr>\n      <td><b>Value ID<\/b><\/td>\n    <td>Specific attribute value<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr> \n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nThe tables have the corresponding information defined with the values;\n<center>\n\n|URL information              |Value                    |\n|:----------------------------|:------------------------|\n|<b>EntityID<\/b>              | Room1                   |\n|<b>AttributeName<\/b>         | Temperature             |\n|<b>ValueID<\/b>               | Ground                  |\n\n<\/center>\n\n\n\n<center>\n\n|Payload Information Response      |Description     |           | Value      |\n|:---------------------------------|:---------------|:----------|:-----------|\n|<b>StatusCode<\/b>                 |                |           |            |\n|                                  | Code           | 200       |            |\n|                                  | ReasonPhrase   | Ok        |            |\n\n<\/center>\n\n+ Response 200 (application/json)\n\n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n   \n## /v1/contextTypes/       \n\n# Get all types [GET]\n\nThe following operation can be used to get a list of all entity types existing at Orion Context Broker in a given moment:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Types<\/b><\/td>\n    <td>An array that contains the all the entities name and the corresponding  attributes for each one<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n\n| Payload Information Response     | Description    |              | Value         |\n|:---------------------------------|:---------------|:-------------|:--------------|\n|<b>Types<\/b>                      |                |              |               |  \n|                                  | Attributes     |              |               |\n|                                  |                | Name         |Temperature    |\n|                                  |                | Type         |Float          |\n|                                  |                | Name         |Pressure       |\n|                                  |                | Type         |Integer        |\n|                                  | Name           |              |Room           |\n|<b>StatusCode<\/b>                 |                |              |               |\n|                                  |                | Code         |200            |\n|                                  |                | ReasonPhrase |OK             |\n\n<\/center>\n\n+ Response 200 (application/json)\n\n        {\n            \"types\" : [\n            {\n                \"name\" : \"Room\",\n                \"attributes\" : [\n                {\n                \"name\" : \"pressure\",\n                \"type\" : \"integer\"\n                },\n                {\n                \"name\" : \"temperature\",\n                \"type\" : \"float\"\n                }\n                ]\n            }\n            ],\n                \"statusCode\" : {\n                \"code\" : \"200\",\n                \"reasonPhrase\" : \"OK\"\n                }\n        }\n\n##  /v1/contextTypes/{entityType}\n\n# Get detail of a given type [GET]\n\nIn addition, you can use the following operation to get detailed information of a given type (by the time being, that information consits of a list of all its attributes):\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n    <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entity Type<\/b><\/td>\n    <td>Type of the entity that we want to get the information<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>An array that contains the information of the entity <\/td>\n  <\/tr>\n  <tr>\n    <td><b>Name<\/b><\/td>\n    <td>Name of the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nIn this case we want to know the attributes associated to the entity requested, Room1;\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>Entity Type<\/b>           |Room           |\n\n<\/center>\n\n<center>\n\n| Payload Information Response     | Description    |              | Value         |\n|:---------------------------------|:---------------|:-------------|:--------------|\n|<b>Attributes<\/b>                 |                |              |               |\n|                                  |                | Name         |Temperature    |\n|                                  |                | Type         |Float          |\n|                                  |                | Name         |Pressure       |\n|                                  |                | Type         |Integer        |\n|<b>Name<\/b>                       |                |              |Room           |\n|<b>StatusCode<\/b>                 |                |              |               |\n|                                  |                | Code         |200            |\n|                                  |                | ReasonPhrase |OK             |\n\n<\/center>\n+ Parameters\n\n    + entityType (required, string,`Room`) ... Type of the entity\n\n+ Response 200 (application/json)\n\n        {\n            \"attributes\": [\n            {\n                \"name\": \"pressure\", \n                \"type\": \"integer\"\n            }, \n            \n            {\n                \"name\": \"temperature\", \n                \"type\": \"float\"\n            }\n        ], \n            \"name\": \"Room\", \n            \"statusCode\": {\n                    \"code\": \"200\", \n                    \"reasonPhrase\": \"OK\"\n                }\n        }\n\n\n\n## /v1/contextEntityTypes/{typeName}\n\n# Retrieve all information about all entities with that entity type [GET] \n\n\nIn order to retrieve all available information  about all context entities having that entity type (e.g Room):\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n    <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>TypeName<\/b><\/td>\n    <td>Type of the entity that we want to get the information<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponse<\/b><\/td>\n    <td>An array that containing each contextElement for each type of entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array that contains the attributes,statuscode and the informationfor each entity type <\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|<b>TypeName<\/b>              |Room           |\n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description            |             |              | Value         |\n|:---------------------------------|:----------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                       |             |              |               |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |26.3           |\n|                                  |                       |             | Name         |Pressure       |\n|                                  |                       |             | Value        |Integer        |\n|                                  |                       |             | Type         |711            |\n|                                  |                       | StatusCode  |              |               |\n|                                  |                       |             | Code         |200            |\n|                                  |                       |             | ReasonPhrase |OK             |\n|                                  |                       | Id          |              |Room2          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |23             |\n|                                  |                       |             | Name         |Pressure       |\n|                                  |                       |             | Value        |Integer        |\n|                                  |                       |             | Type         |720            |\n|                                  |                       | StatusCode  |              |               |\n|                                  |                       |             | Code         |200            |\n|                                  |                       |             | ReasonPhrase |OK             |\n|                                  |                       | Id          |              |Room1          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n\n\n<\/center>\n\n+ Parameters\n\n    + typeName (required, string,`Room`) ... Name of the entity\n\n+ Response 200 (application/json)\n\n        {\n            \"contextResponses\": [\n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\", \n                            \"type\": \"float\", \n                            \"value\": \"26.3\"\n                        }, \n                        {\n                            \"name\": \"pressure\", \n                            \"type\": \"integer\", \n                            \"value\": \"711\"\n                        }\n                    ], \n                        \"id\": \"Room2\", \n                        \"isPattern\": \"false\", \n                        \"type\": \"Room\"\n                        }, \n                            \n                            \"statusCode\": {\n                            \"code\": \"200\", \n                            \"reasonPhrase\": \"OK\"\n                        }\n                    }, \n                    {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\", \n                            \"type\": \"float\", \n                            \"value\": \"23\"\n                        }, \n                        {\n                            \"name\": \"pressure\", \n                            \"type\": \"integer\", \n                            \"value\": \"720\"\n                        }\n                    ], \n                        \"id\": \"Room1\", \n                        \"isPattern\": \"false\", \n                        \"type\": \"Room\"\n                    }, \n                        \"statusCode\": {\n                        \"code\": \"200\", \n                        \"reasonPhrase\": \"OK\"\n                    }\n                }\n            ]\n        }\n        \n## /v1/contextEntityTypes/{typeName}/attributes/{attributeName}\n\n# Retrieve all attribute values of a specific entity type  [GET] \n\nTo retrieve all attribute values of the context entities of the specific entity type:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n    <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>TypeName<\/b><\/td>\n    <td>Type of the entity that we want to get the information<\/td>\n  <\/tr>\n  <tr>\n    <td><b>AttributeName<\/b><\/td>\n    <td>The name of attribute we want<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponse<\/b><\/td>\n    <td>An array containing a contextElement for each entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array containing the attributes,statuscode and the information for each entity type that exits<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nFor example, in this case we want to know all the entities with type Room in which is defined the attribute temperature;\n<center>\n\n|URL information              |Value          |\n|:----------------------------|:--------------|\n|TypeName                     |Room           |\n|AttributeName                |Temperature    |\n\n<\/center>\n\n\n<center>\n\n|Payload Information Response      |Description            |             |              | Value         |\n|:---------------------------------|:----------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                       |             |              |               |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |26.3           |\n|                                  |                       | StatusCode  |              |               |\n|                                  |                       |             | Code         |200            |\n|                                  |                       |             | ReasonPhrase |OK             |\n|                                  |                       | Id          |              |Room2          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |23             |\n|                                  |                       | StatusCode  |              |               |\n|                                  |                       |             | Code         |200            |\n|                                  |                       |             | ReasonPhrase |OK             |\n|                                  |                       | Id          |              |Room1          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n\n<\/center>\n\n+ Parameters\n\n    + typeName (required, string,`Room`) ... Name of the entity\n\n    + attributeName (required,string,`temperature`) ...  Name of the attribute\n\n+ Response 200 (application/json)\n\n        {\n            \"contextResponses\": [\n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\", \n                            \"type\": \"float\", \n                            \"value\": \"26.3\"\n                        }\n                    ], \n                    \"id\": \"Room2\", \n                    \"isPattern\": \"false\", \n                    \"type\": \"Room\"\n                    }, \n                    \"statusCode\": {\n                        \"code\": \"200\", \n                        \"reasonPhrase\": \"OK\"\n                    }\n                }, \n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\", \n                            \"type\": \"float\", \n                            \"value\": \"23\"\n                        }\n                    ], \n                    \"id\": \"Room1\", \n                    \"isPattern\": \"false\", \n                    \"type\": \"Room\"\n                }, \n                \"statusCode\": {\n                    \"code\": \"200\", \n                    \"reasonPhrase\": \"OK\"\n                }\n            }\n        ]\n        }\n\n\n\n\n## Convenience operations for context subscriptions [/]\n\n##  /v1/contextSubscriptions\n\nThe NGSI10 operations you know up to now are the basic building blocks for synchronous context producer and context consumer applications. However, Orion Context Broker has another powerful feature that you can take advantage of: the ability to subscribe to context information so when \"something\" happens (we will explain the different cases for that \"something\") your application will get an asynchronous notification. \n\nIn that way ,the Orion Context Broker will let you know the information when it comes.\n\nBefore starting , start the accumulator server to capture notifications.\n\nIn order to star the accumulator server;\n\n1.- Download the accumulator script, available at:\n\n    https://github.com/telefonicaid/fiware-orion/blob/master/scripts/accumulator-server.py\n\n2.- Run it using the following command:\n\n    cd /dir/where/accumulator-server/is/downloaded\n    chmod a+x accumulator-server.py\n    ./accumulator-server.py 1028 /accumulate ::1 on\n\n\n# Create a new subscription [POST]\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>Information of the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>The elements/attributes we wan to asociate the subscription<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Reference<\/b><\/td>\n    <td>The callback URL to send notifications<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Duration<\/b><\/td>\n    <td>Duration of the subscriptions,specified using the ISO 8601<\/td>\n  <\/tr>\n  <tr>\n    <td><b>NotifyConditions<\/b><\/td>\n    <td>There is a type element and a condValueList element<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscribeResponse<\/b><\/td>\n    <td>Contains a subscription ID and a duration acknowledgement<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nThe following is the request corresponding to an ONTIMEINTERVAL subscription:\n<center>\n\n|Payload Information Request       |Description     | Value                           |\n|:---------------------------------|:---------------|:--------------------------------|\n|<b>Entities<\/b>                   |                |                                 | \n|                                  | Type           | Room                            | \n|                                  | IsPattern      | False                           |              \n|                                  | Id             | Room1                           |\n|<b>Attributes<\/b>                 |                |                                 |        \n|                                  | Temperature    |                                 |\n|<b>Reference<\/b>                  |                | http://localhost:1028/accumulate|\n|<b>Duration<\/b>                   |                | P1M                             |\n|<b>NotifyConditions<\/b>           |                |                                 |\n|                                  | Type           | ONTIMEINTERVAL                  |\n|                                  | CondValues     | PT10S                           |\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description     | Value                   |\n|:---------------------------------|:---------------|:------------------------|\n|<b>SubscribeResponse<\/b>          |                |                         | \n|                                  | duration       | P1M                     | \n|                                  | subscriptionId | 552f7481983d79a38fbd5a74|                           |              \n\n<\/center>\n\nLet\'s examine in detail the different elements included in the payload:\n\n* \'entities\' and \'attributes\' define which context elements will be included in the notification message. You can even include lists or patterns to specify entities. In this example, we are specifying that the notification has to include the temperature attribute for entity Room1.\n* The callback URL to send notifications is defined with the reference element. We are using the URL of the accumulator-server.py program started before. Only one reference can be included per contextSubscription request. However, you can have several subscriptions on the same context elements without any problem. Default URL schema (in the case you don\'t specify any) is \"http\", e.g. using \"localhost:1028\" as reference will be actually interpreted as:\n    \n        http://localhost:1028.\n\n* Subscriptions have a duration, specified using the ISO 8601 standard format. Once that duration is expired, the subscription is simply ignored (however, it is still stored in the broker database and needs to be purged). You can extend the duration of a subscription by updating it. We are using \"P1M\" which means \"one month\".\n* The notifyCondition element defines the \"trigger\" for the subscription. There is a type element (which value in this case is ONTIMERINTERVAL) and a condValueList element. The condValueList element structure depends on the type. In the case of ONTIMEINTERVAL, it includes exactly one condValue child element whose value is a time interval (using again, as usual in NGSI, the ISO 8601 format). A notification is sent with a frequency equal to that interval. In the example above we are using 10 seconds as interval.\n* Actually, there are two kinds of contextSubscriptions: ONTIMEINTERVAL and ONCHANGE subscription.\n* If you look at the accumulator-script.py terminal window, you will see that a message resembling the following one is received each 10 seconds:\n        \n        POST http://localhost:1028/accumulate\n        Content-Length: 477\n        User-Agent: orion/0.19.0 libcurl/7.19.7\n        Host: localhost:1028\n        Accept: application/xml, application/json\n        Content-Type: application/json\n\n        {\n            \"subscriptionId\" : \"552f7481983d79a38fbd5a74\",\n            \"originator\" : \"localhost\",\n            \"contextResponses\" : [\n        {\n            \"contextElement\" : {\n                \"type\" : \"Room\",\n                \"isPattern\" : \"false\",\n                \"id\" : \"Room1\",\n                \"attributes\" : [\n                {\n                    \"name\" : \"temperature\",\n                    \"type\" : \"float\",\n                    \"value\" : \"23\"\n                }\n                ]\n            },\n                \"statusCode\" : {\n                    \"code\" : \"200\",\n                    \"reasonPhrase\" : \"OK\"\n                }\n            }\n        ]\n        }\n\n\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n\n            {\n                \"entities\": [\n                    {\n                        \"type\": \"Room\",\n                        \"isPattern\": \"false\",\n                        \"id\": \"Room1\"\n                    }\n                ],\n                \"attributes\": [\n                        \"temperature\"\n                ],\n                    \"reference\": \"http://localhost:1028/accumulate\",\n                    \"duration\": \"P1M\",\n                    \"notifyConditions\": [\n                {\n                    \"type\": \"ONTIMEINTERVAL\",\n                    \"condValues\": [\n                    \"PT10S\"\n                ]\n                }\n            ]\n            }\n\n+ Response 200 (application/json)\n\n        {\n            \"subscribeResponse\": {\n            \"duration\": \"P1M\", \n            \"subscriptionId\": \"552f7481983d79a38fbd5a74\"\n            }\n        }\n        \n        \n\n\n## /v1/contextSubscriptions/{subscriptionID} \n\n+ Parameters\n\n    + subscriptionID  (required, string,`552f7481983d79a38fbd5a74`) ... ID of the corresponding subscription.\n\n# Update a  subscription [PUT]\n\nSubscriptions can be updated.The request includes a subscriptionId that identifies the subscription to modify and the actual update payload:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscriptionID<\/b><\/td>\n    <td>Identifies the subscription to modify<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscriptionID<\/b><\/td>\n    <td>Identifies the subscription to modify<\/td>\n  <\/tr>\n  <tr>\n    <td><b>NotifyConditions<\/b><\/td>\n    <td>There is a type element and a condValueList element<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscribeResponse<\/b><\/td>\n    <td>Contains the subscription ID<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nFor example, if we want to change the notification interval to 5 seconds we will use the following values; \n<center>\n\n|URL information              |Value                    |\n|:----------------------------|:------------------------|\n|<b>SubscriptionID<\/b>        | 552f7481983d79a38fbd5a74|\n\n<\/center>\n\n<center>\n\n|Payload Information Request       |Description     | Value                           |\n|:---------------------------------|:---------------|:--------------------------------|\n|<b>SubscriptionID<\/b>             |                | 552f7481983d79a38fbd5a74        |\n|<b>NotifyConditions<\/b>           |                |                                 |\n|                                  | Type           | ONTIMEINTERVAL                  |\n|                                  | CondValues     | PT5S                            |\n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description     | Value                   |\n|:---------------------------------|:---------------|:------------------------|\n|<b>SubscribeResponse<\/b>          |                |                         | \n|                                  | subscriptionId | 552f7481983d79a38fbd5a74|                                    \n\n<\/center>\n\nThe ID in the payload must match the ID in the URL.\n\n+ Request (application/json)\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n    \n            {\n                \"subscriptionId\": \"552f7481983d79a38fbd5a74\",\n                \"notifyConditions\": [\n                {\n                    \"type\": \"ONTIMEINTERVAL\",\n                    \"condValues\": [\n                    \"PT5S\"\n                    ]\n                }\n            ]\n            }\n\n+ Response 200\n\n        {\n            \"subscribeResponse\": {\n            \"subscriptionId\": \"552f7481983d79a38fbd5a74\"\n            }\n        }\n        \n \n# Cancel a  subscription [DELETE]\n\nIn order to cancel the subscription identified by {subscriptionID}, it is use DELETE method. \nIn this case, payload  request is not used.\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>URL<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscriptionID<\/b><\/td>\n    <td>Identifies the subscription to modify<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscriptionID<\/b><\/td>\n    <td>Contains the subscription ID deleted<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n  <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nWe want to cancel a subscription identified by an ID, here are the corresponding values;\n<center>\n\n|URL information              |Value                    |\n|:----------------------------|:------------------------|\n|<b>SubscriptionID<\/b>        | 552f7481983d79a38fbd5a74|\n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description     | Value                           |\n|:---------------------------------|:---------------|:--------------------------------|\n|<b>SubscriptionID<\/b>             |                | 552f7481983d79a38fbd5a74        |\n|<b>StatusCode<\/b>                 |                |                                 |\n|                                  | Code           | 200                             |\n|                                  | ReasonPhrase   | Ok                              |\n\n<\/center> \n\n+ Response 200 (application/json)\n\n        {\n            \"subscriptionId\" : \"5534ca9b981d8880df08bd47\",\n            \"statusCode\" : {\n            \"code\" : \"200\",\n            \"reasonPhrase\" : \"OK\"\n            }\n        }\n\n \n\n\n## /v1/updateContext\n\n\n#  Operations with UpdateContext [POST]\n\n* <b>Entity creation<\/b>\n\nAs on the previous section for the convenience operations,Orion Context Broker will start in an empty state, so first of all we need to make it aware of the existence of certain entities. In particular, we are going to \"create\" Room1 entity, with two attributes (temperature and pressure). We do this using the updateContext operation with APPEND action type\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElements<\/b><\/td>\n    <td>It is associated with an entity,contains a list of contextAttribute elements and the name and type of the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>UpdateAction<\/b><\/td>\n    <td>Specifies the action we want to do<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array which contains the attributes modified and the general information of the entity requested<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n\nThe updateContext request payload contains a list of contextElement element and the updateAction element; \n<center>\n\n|Payload Information Request  |Description  |              |Value          |\n|:----------------------------|:------------|:-------------|:--------------|\n| <b>ContextElements<\/b>      |             |              |               |  \n|                             | Attributes  |              |               |\n|                             |             | Name         |Temperature    |\n|                             |             | Value        |Float          |\n|                             |             | Type         |23             |\n|                             |             | Name         |Pressure       |\n|                             |             | Value        |Integer        |\n|                             |             | Type         |720            |\n|                             | Id          |              |Room1          |\n|                             | IsPattern   |              |false          |\n|                             | Type        |              |Room           |\n| <b>UpdateAction<\/b>         |             |              |UPDATE         |\n\n\nUpon receipt of this request, the broker will create the entity in its internal database, set the values for its attributes and will response with the following elements:\n\n| Payload Information Response     | Description    |              | Value         |\n|:---------------------------------|:---------------|:-------------|:--------------|\n| <b>ContextElement<\/b>            |                |              |               |  \n|                                  | Attributes     |              |               |\n|                                  |                | Name         |Temperature    |\n|                                  |                | Type         |Float          |\n|                                  |                | Value        |\"\"             |\n|                                  |                | Name         |Pressure       |\n|                                  |                | Type         |Integer        |\n|                                  |                | Value        |\"\"             |\n|                                  | Id             |              |Room1          |\n|                                  | IsPattern      |              |false          |\n|                                  | Type           |              |Room           |\n| <b>StatusCode<\/b>                |                |              |               |\n|                                  |                | Code         |200            |\n|                                  |                | ReasonPhrase |OK             |\n\n<\/center>\n\n* <b>Geolocation capabilities<\/b>\n\nOrion Context Broker has several capabilities related to geolocation that are described in this section. It is strictly required to use MongoDB 2.4 or higher in order to use geolocation features \n\nEntities can have a location, specified by one of its attributes. In order to state which attribute (among all the ones belonging to the entity) defines the location, the \"location\" metadata is used\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElements<\/b><\/td>\n    <td>Contains the corresponding information about the entity defined and the acttributes asociated<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>The elements/attributes associated to the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Metadatas<\/b><\/td>\n    <td>In order to state which attribute (among all the ones belonging to the entity) defines the location, the \"location\" metadata is used.<\/td>\n  <\/tr>\n  <tr>\n    <td><b>UpdateAction<\/b><\/td>\n    <td>Specifies the action we want to do<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponses<\/b><\/td>\n    <td>Contains all the information stored by the context<\/td>\n  <\/tr> \n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n\nFor example, the following updateContext request creates the entity \"Madrid\" (of type \"City\") with attribute \"position\" defined as location\n\n<center>\n\n| Payload Information Request      | Description  |            |            |Value                  |\n|:---------------------------------|:-------------|:-----------|:-----------|:----------------------|\n| <b>ContextElement<\/b>            |              |            |            |                       |\n|                                  | Attributes   |            |            |                       |\n|                                  |              | Metadatas  |            |                       |\n|                                  |              |            | Name       | Location              |\n|                                  |              |            | Type       | String                |\n|                                  |              |            | Value      | WGS84                 |\n|                                  |              | Name       |            | Position              |\n|                                  |              | Type       |            | Coords                |\n|                                  |              | Value      |            | 40.418889, -3.691944  |\n|                                  | Id           |            |            | Madrid                |\n|                                  | IsPattern    |            |            | false                 |\n|                                  | Type         |            |            | City                  |\n| <b>UpdateAction<\/b>              |              |            |            |                       |\n\n<\/center>\n\n\n\n<center>\n\n| Payload Information Response     | Description  |            |            |Value     |\n|:---------------------------------|:-------------|:-----------|:-----------|:---------|\n| <b>ContextResponses<\/b>          |              |            |            |          |\n|                                  | Attributes   |            |            |          |\n|                                  |              | Metadatas  |            |          |\n|                                  |              |            | Name       | Location |\n|                                  |              |            | Type       | String   |\n|                                  |              |            | Value      | WGS84    |\n|                                  |              | Name       |            | Position |\n|                                  |              | Type       |            | Coords   |\n|                                  |              | Value      |            | \"\"       |\n|                                  | Id           |            |            | Madrid   |\n|                                  | IsPattern    |            |            | false    |\n|                                  | Type         |            |            | City     |\n| <b>StatusCode<\/b>                |              |            |            |          |\n|                                  | Code         |            |            | 200      |\n|                                  | ReasonPhrase |            |            | OK       |\n<\/center>\n\n        \n\n+ Request Entity creation  (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n    + Body   \n    \n            {\n                \"contextElements\": [\n                    {\n                        \"type\": \"Room\",\n                        \"isPattern\": \"false\",\n                        \"id\": \"Room1\",\n                        \"attributes\": [\n                    {\n                        \"name\": \"temperature\",\n                        \"type\": \"float\",\n                        \"value\": \"23\"\n                    },\n                    {\n                        \"name\": \"pressure\",\n                        \"type\": \"integer\",\n                        \"value\": \"720\"\n                    }\n                    ]\n                    }\n                ],\n                    \"updateAction\": \"APPEND\"\n            }\n\n+ Response 200 \n\n            {\n                \"contextResponses\": [\n                {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\",\n                            \"type\": \"float\",\n                            \"value\": \"\"\n                        },\n                        {\n                            \"name\": \"pressure\",\n                            \"type\": \"integer\",\n                            \"value\": \"\"\n                        }\n                    ],\n                    \"id\": \"Room1\",\n                    \"isPattern\": \"false\",\n                    \"type\": \"Room\"\n                    },\n                    \n                    \n                        \"statusCode\": {\n                            \"code\": \"200\",\n                            \"reasonPhrase\": \"OK\"\n                        }\n                        }\n                ],\n\n            }\n            \n\n+ Request Defining location attribute (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n    + Body\n    \n            {\n                \"contextElements\": [\n                {\n                    \"type\": \"City\",\n                    \"isPattern\": \"false\",\n                    \"id\": \"Madrid\",\n                    \"attributes\": [\n                    {\n                        \"name\": \"position\",\n                        \"type\": \"coords\",\n                        \"value\": \"40.418889, -3.691944\",\n                        \"metadatas\": [\n                        {\n                            \"name\": \"location\",\n                            \"type\": \"string\",\n                            \"value\": \"WGS84\"\n                        }\n                        ]\n                    }\n                    ]\n                }\n                ],\n                    \"updateAction\": \"APPEND\"\n            }\n\n+ Response 200 \n\n            {\n                \"contextResponses\": [\n                {\n                    \"contextElement\": {\n                        \"attributes\": [\n                        {\n                            \"metadatas\": [\n                                {\n                                    \"name\": \"location\", \n                                    \"type\": \"string\", \n                                    \"value\": \"WGS84\"\n                                }\n                            ], \n                            \"name\": \"position\", \n                            \"type\": \"coords\", \n                            \"value\": \"\"\n                        }\n                    ], \n                        \"id\": \"Madrid\", \n                        \"isPattern\": \"false\", \n                        \"type\": \"City\"\n                    }, \n                    \"statusCode\": {\n                            \"code\": \"200\", \n                            \"reasonPhrase\": \"OK\"\n                        }\n                }\n                ]\n            }\n\n#  Delete entity [DELETE]\n\nApart from deleting individual attributes from a given entity,  you can also delete an entire entity, including all its attributes with their corresponding metadata.\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElements<\/b><\/td>\n    <td>It is associated with an entity,contains a list of contextAttribute elements and the name and type of the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>UpdateAction<\/b><\/td>\n    <td>Specifies the action we want to do<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n In order to delete an entity, the updateContext operation is used, with DELETE as actionType and with an empty attributeList:\n<center>\n\n|Payload Information Request  |Description  |              |Value          |\n|:----------------------------|:------------|:-------------|:--------------|\n| <b>ContextElements<\/b>      |             |              |               |  \n|                             | Id          |              |Room1          |\n|                             | IsPattern   |              |false          |\n|                             | Type        |              |Room           |\n| <b>UpdateAction<\/b>         |             |              |DELETE         |\n\n<\/center>\n\n\n\n<center>\n\n|Payload Information Response      | Value      |\n|:---------------------------------|:-----------|\n|<b>Code<\/b>                       |200         | \n|<b>ReasonPhrase<\/b>               |Ok          |\n\n<\/center>\n\n\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n    + Body\n    \n            {\n            \"contextElements\": [\n            {\n                \"type\": \"Room\",\n                \"isPattern\": \"false\",\n                \"id\": \"Room1\"\n            }\n            ],\n                \"updateAction\": \"DELETE\"\n            }\n\n+ Response 200 (application/json)\n\n        {\n            \"code\": \"200\", \n            \"reasonPhrase\": \"OK\"\n        }\n     \n\n\n## /v1/queryContext\n\n#  Operations with queryContext [POST]\n\n* <b>QUERY CONTEXT OPERATIONS<\/b>\n\n * <b>Get an entity<\/b>\n    \nThe NGSI10 queryContext request is used  to access the context information stored by Orion Context Broker to do something interesting with it. \n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>An array containing the entities we want to get the information<\/td>\n  <\/tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponse<\/b><\/td>\n    <td>An array containing a contextElement for each entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array containing the attributes and the information for each entity type that exits<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nFor example, in this case we want to get context information for Room1:\n\n<center>\n\n|Payload Information Request       |Description     | Value   |\n|:---------------------------------|:---------------|:--------|\n|<b>Entities<\/b>                   |                |         |\n|                                  | Type           | Room    |\n|                                  | IsPattern      | False   |\n|                                  | Id             | Room1   |\n\n<\/center> \n\n<center>\n\n|Payload Information Response      |Description            |             |              | Value         |\n|:---------------------------------|:----------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                       |             |              |               |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |23             |\n|                                  |                       |             | Name         |Pressure       |\n|                                  |                       |             | Value        |Integer        |\n|                                  |                       |             | Type         |720            |\n|                                  |                       | Id          |              |Room1          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n|                                  | <b>StatusCode<\/b>     |             |              |               |\n|                                  |                       |             |Code          |200            |\n|                                  |                       |             |ReasonPhrase  |OK             |\n\n\n<\/center>\n\n * <b>Get an attribute of an entity<\/b>\n    \nIn other case you can use an empty attributes element in the request,the response will include all the attributes of the entity:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>An array containing the entities we want to get the information<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>Contains the corresponding attribute we want to know the value<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponse<\/b><\/td>\n    <td>An array containing a contextElement for each entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array containing  the information for the attribute requested<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n\n<center>\n\n|Payload Information Request       |Description     | Value      |\n|:---------------------------------|:---------------|:-----------|\n|<b>Entities<\/b>                   |                |            |\n|                                  | Type           | Room       |\n|                                  | IsPattern      | False      |\n|                                  | Id             | Room1      |\n|<b>Attributes<\/b>                 |                | Temperature|\n<\/center> \n\n<center>\n\n|Payload Information Response      |Description            |             |              | Value         |\n|:---------------------------------|:----------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                       |             |              |               |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |23             |\n|                                  |                       | Id          |              |Room1          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n|                                  | <b>StatusCode<\/b>     |             |              |               |\n|                                  |                       |             |Code          |200            |\n|                                  |                       |             |ReasonPhrase  |OK             |\n\n\n<\/center>\n\n * <b>Get an specific attribute for all the entities with the same type<\/b>\n \nMoreover, a powerful feature of Orion Context Broker is that you can use a regular expression for the entity ID. For example, you can query entities which ID starts with \"Room\" using the regex \"Room.*\". In this case, you have to set isPattern to \"true\".\n\nThe only that changes is the id element of the payload request:\n<center>\n\n|Payload Information Request       |Description     | Value      |\n|:---------------------------------|:---------------|:-----------|\n|<b>Entities<\/b>                   |                |            |\n|                                  | Type           | Room       |\n|                                  | IsPattern      | False      |\n|                                  | Id             | Room.*     |\n|<b>Attributes<\/b>                 |                | Temperature|\n<\/center> \n\nFinally, note that you will get an error in case you try to query a non-existing entity or attribute, as shown in the last response.\n\n* <b>GEO-LOCATED QUERIES<\/b>\n\n\nEntities location can be used in queryContext (or equivalent convenience operations). To do so, we use the scope element, using \"FIWARE::Location\" as scopeType and an area specification as scopeValue. The query result includes only the entities located in that area, i.e. context elements belonging to entities not included in the area are not taken into account. Regarding area specification, Orion Context Broker allows the following possibilities:\n\nArea internal to a circumference, given its centre and radius.\nArea external to a circumference, given its centre and radius.\nArea internal to a polygon (e.g. a terrain zone, a city district, etc.), given its vertices.\nArea external to a polygon (e.g. a terrain zone, a city district, etc.), given its vertices.\nArea unions or intersections (e.g. the intersection of a circle and a polygon) are not supported in the current version.\n\n * <b>Define a polygon<\/b>\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>In this case are the points defined<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Restriction<\/b><\/td>\n    <td>Contains the definition of the polygon<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n\nIn order to illustrate geo-located queries with polygons, let\'s consider the following scenario: three entities (A, B and C, of type \"Point\") have been created in Orion Context Broker, each one in the coordinates shown in the following picture:\n\n![Authentication flow](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/images/5/59/Orion-geo-points.png)\n\nLet\'s consider a query whose scope is the internal area to the square defined by coordinates (0, 0), (0, 6), (6, 6) and (6, 0):\n\n<center>\n\n|Payload Information Request  |Description  |              |               |          |           | Value            |\n|:----------------------------|:------------|:-------------|:--------------|:---------|:----------|:-----------------|\n| <b>Entities<\/b>             |             |              |               |          |           |                  |                              \n|                             | Type        |              |               |          |           | Point            |\n|                             | IsPattern   |              |               |          |           | True             |\n|                             | Id          |              |               |          |           | .*               |\n| <b>Restriction<\/b>          |             |              |               |          |           |                  |\n|                             | Scopes      |              |               |          |           | FIWARE::Location |\n|                             |             | Type         |               |          |           |                  |\n|                             |             | Value        |               |          |           |                  |\n|                             |             |              | Polygon       |          |           |                  |\n|                             |             |              |               | Vertices |           |                  |\n|                             |             |              |               |          | Latitude  | 0                |\n|                             |             |              |               |          | Longitude | 0                |\n|                             |             |              |               |          | Latitude  | 0                |\n|                             |             |              |               |          | Longitude | 6                |\n|                             |             |              |               |          | Latitude  | 6                |\n|                             |             |              |               |          | Longitude | 6                |\n|                             |             |              |               |          | Latitude  | 6                |\n|                             |             |              |               |          | Longitude | 0                |\n\n<\/center>\n\nThe result of the query would be A and B:\n\n\n![Authentication flow](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/images/b/b3/Orion-geo-square.png)\n\no define a polygon, we use the polygon element which, in sequence, include a vertexList. A vertexList is composed by a list of vertex elements, each one containing a couple of elements (latitude and longitude) that provide the coordinates of the vertex. The result of the query would be A and B.\n\nNow, in order to illustrate circle areas, let\'s consider the following scenario: three entities (representing the cities of Madrid, Alcobendas and Leganes) have been created in Orion Context Broker (by the previous operation defined in /v1/updatecontext).\n\nThe coordinates for Madrid are (40.418889, -3.691944); the coordinates for Alcobendas are (40.533333, -3.633333) and the coordinates for Leganes are (40.316667, -3.75). The distance between Madrid and Alcobendas is around 13.65 km, and the distance between Madrid and Leganes is arround 12.38 km (based on: http://boulter.com/gps/distance/).\n\nTo define a circle, we use the circle element which, in sequence, include a three elements: centerLatitude (the latitude of the circle center), centerLongitude (the longitude of the circle center) and radius (in meters).\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>In this case are the points defined<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Restriction<\/b><\/td>\n    <td>Contains the definition of the circle<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n    <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponse<\/b><\/td>\n    <td>An array containing a contextElement for each entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array containing  all the information about the cities in the circle <\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n<\/table>\n\n \n\n* <b>Define circumference, given its centre and radius<\/b>\n    \nLet\'s consider a query whose scope is inside a radius of 15 km (15000 meters) centred in Madrid;\n\n<center>\n\n|Payload Information Request  |Description  |              |               |                 | Value            |\n|:----------------------------|:------------|:-------------|:--------------|:----------------|:-----------------|\n| <b>Entities<\/b>             |             |              |               |                 |                  |                              \n|                             | Type        |              |               |                 | Point            |\n|                             | IsPattern   |              |               |                 | True             |\n|                             | Id          |              |               |                 | .*               |\n| <b>Restriction<\/b>          |             |              |               |                 |                  |\n|                             | Scopes      |              |               |                 | FIWARE::Location |\n|                             |             | Type         |               |                 |                  |\n|                             |             | Value        |               |                 |                  |\n|                             |             |              | Circle        |                 |                  |\n|                             |             |              |               | centerLatitude  | 40.418889        |\n|                             |             |              |               | centerLongitude | -3.691944        |\n|                             |             |              |               | radius          | 15000            |\n\n\n<\/center>\n\nThe result of the query would be Madrid, Leganes and Alcobendas.As shown in the picture:\n\n![Authentication flow](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/images/9/97/Orion-geo-circle-14-in.png)\n\n<center>\n\n|Payload Information Response      |Description            |              |          |          |Value                 |\n|:---------------------------------|:----------------------|:-------------|:---------|:---------|:---------------------|\n|<b>ContextResponses<\/b>           |                       |              |          |          |                      |    \n|                                  | <b>ContextElement<\/b> |              |          |          |                      |    \n|                                  |                       | Attributes   |          |          |                      |    \n|                                  |                       |              |Metadatas |          |                      |\n|                                  |                       |              |          | Name     | Location             |\n|                                  |                       |              |          | Type     | String               |\n|                                  |                       |              |          | Value    | WGS84                |\n|                                  |                       |              | Name     |          | Position             |\n|                                  |                       |              | Type     |          | Coords               |\n|                                  |                       |              | Value    |          | 40.418889, -3.691944 |\n|                                  |                       | IsPattern    |          |          | False                |\n|                                  |                       | Id           |          |          | Madrid               |\n|                                  |                       | Type         |          |          | City                 |\n|                                  | <b>StatusCode<\/b>     |              |          |          |                      |\n|                                  |                       | Code         |          |          | 200                  |\n|                                  |                       | ReasonPhrase |          |          | OK                   |\n|                                  | <b>ContextElement<\/b> |              |          |          |                      |    \n|                                  |                       | Attributes   |          |          |                      |    \n|                                  |                       |              |Metadatas |          |                      |\n|                                  |                       |              |          | Name     | Location             |\n|                                  |                       |              |          | Type     | String               |\n|                                  |                       |              |          | Value    | WGS84                |\n|                                  |                       |              | Name     |          | Position             |\n|                                  |                       |              | Type     |          | Coords               |\n|                                  |                       |              | Value    |          | 40.316667, -3.75     |\n|                                  |                       | IsPattern    |          |          | False                |\n|                                  |                       | Id           |          |          | Leganes              |\n|                                  |                       | Type         |          |          | City                 |\n|                                  | <b>StatusCode<\/b>     |              |          |          |                      |\n|                                  |                       | Code         |          |          | 200                  |\n|                                  |                       | ReasonPhrase |          |          | OK                   |\n\n<\/center>                            \n\n\n+ Request Get Information for Room1 (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n    + Body\n    \n            {\n                \"entities\": [\n                    {\n                        \"type\": \"Room\",\n                        \"isPattern\": \"false\",\n                        \"id\": \"Room1\"\n                    }\n                ]\n            }\n\n+ Response 200 (application/json)\n\n            {\n                \"contextResponses\": [\n                {\n                    \"contextElement\": {\n                        \"attributes\": [\n                        {\n                            \"name\": \"temperature\",\n                            \"type\": \"float\",\n                            \"value\": \"23\"\n                        },\n                        {\n                            \"name\": \"pressure\",\n                            \"type\": \"integer\",\n                            \"value\": \"720\"\n                        }\n                    ],\n                        \"id\": \"Room1\",\n                        \"isPattern\": \"false\",\n                        \"type\": \"Room\"\n                },\n                    \"statusCode\": {\n                        \"code\": \"200\",\n                        \"reasonPhrase\": \"OK\"\n                    }\n                }\n            ]\n            }\n            \n+ Request Get Information for Temperature Room1  (application/json)\n\n        + Headers (application/json)\n    \n            Accept: application/json\n        \n        + Body\n            {\n                \"entities\": [\n                {\n                    \"type\": \"Room\",\n                    \"isPattern\": \"false\",\n                    \"id\": \"Room1\"\n                }\n            ],\n                \"attributes\" : [\n                \"temperature\"\n            ]\n            }\n            \n+ Response 200 (application/json)\n\n\n            {\n            \"contextResponses\": [\n                {\n                    \"contextElement\": {\n                        \"attributes\": [\n                        {\n                            \"name\": \"temperature\",\n                            \"type\": \"float\",\n                            \"value\": \"23\"\n                        }\n                    ],\n                        \"id\": \"Room1\",\n                        \"isPattern\": \"false\",\n                        \"type\": \"Room\"\n                    },\n                        \"statusCode\": {\n                            \"code\": \"200\",\n                            \"reasonPhrase\": \"OK\"\n                        }\n                    }\n                ]\n            }\n            \n\n+ Request Get Information for Temperature all Rooms  (application/json)\n\n        + Headers (application/json)\n    \n            Accept: application/json\n        \n        + Body\n        \n            {\n                \"entities\": [\n                {\n                    \"type\": \"Room\",\n                    \"isPattern\": \"true\",\n                    \"id\": \"Room.*\"\n                }\n                ],\n                    \"attributes\" : [\n                    \"temperature\"\n                ]\n            }\n            \n+ Response 200 (application/json)\n\n\n            {\n                \"contextResponses\": [\n                {\n                    {\n                        \"contextElement\": {\n                        \"attributes\": [\n                        {\n                            \"name\": \"temperature\",\n                            \"type\": \"float\",\n                            \"value\": \"23\"\n                        }\n                    ],\n                    \"id\": \"Room1\",\n                    \"isPattern\": \"false\",\n                    \"type\": \"Room\"\n                },\n                    \"statusCode\": {\n                        \"code\": \"200\",\n                        \"reasonPhrase\": \"OK\"\n                    }\n                }\n            ]\n            }\n\n+ Request Get Information for a non-exisiting room  (application/json)\n\n        + Headers (application/json)\n    \n            Accept: application/json\n\n        + Body\n        \n            {\n                \"entities\": [\n                {\n                \"type\": \"Room\",\n                \"isPattern\": \"false\",\n                \"id\": \"Room5\"\n                }\n                ]\n            }\n        \n\n+ Response 404 (application/json)\n\n        + Headers (application/json)\n    \n            Accept: application/json\n        \n        + Body \n        \n            {\n                \"errorCode\": {\n                \"code\": \"404\",\n                \"reasonPhrase\": \"No context elements found\"\n            }\n            }\n\n+ Request Defining a polygon (application/json)\n\n        + Headers (application/json)\n    \n            Accept: application/json\n        + Body \n        \n        {\n            \"entities\": [\n            {\n                \"type\": \"Point\",\n                \"isPattern\": \"true\",\n                \"id\": \".*\"\n            }\n            ],\n            \"restriction\": {\n                \"scopes\": [\n                {\n                    \"type\" : \"FIWARE::Location\",\n                    \"value\" : {\n                    \"polygon\": {\n                    \"vertices\": [\n                        {\n                        \"latitude\": \"0\",\n                        \"longitude\": \"0\"\n                        },\n                        {\n                        \"latitude\": \"0\",\n                        \"longitude\": \"6\"\n                        },\n                        {\n                        \"latitude\": \"6\",\n                        \"longitude\": \"6\"\n                        },\n                        {\n                        \"latitude\": \"6\",\n                        \"longitude\": \"0\"\n                        }\n                    ]\n                    }\n                    }\n                }\n                ]\n            }\n        }\n\n+ Response 200 (application/json)\n\n+ Request Defining a circle (application/json)\n\n        + Headers (application/json)\n    \n            Accept: application/json\n        + Body \n        \n         {\n           \"entities\": [\n                {\n                \"type\": \"City\",\n                \"isPattern\": \"true\",\n                \"id\": \".*\"\n                }\n                ],\n            \"restriction\": {\n                \"scopes\": [\n                    {\n                    \"type\" : \"FIWARE::Location\",\n                    \"value\" : {\n                    \"circle\": {\n                    \"centerLatitude\": \"40.418889\",\n                    \"centerLongitude\": \"-3.691944\",\n                    \"radius\": \"15000\"\n                    }\n                }\n                }\n                ]\n            }\n        }\n        \n\n+ Response 200 (application/json)  \n\n        + Headers (application/json)\n    \n            Accept: application/json\n        \n        + Body \n    \n        \"contextResponses\": [\n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"metadatas\": [\n                                {\n                                    \"name\": \"location\", \n                                    \"type\": \"string\", \n                                    \"value\": \"WGS84\"\n                                }\n                            ], \n                            \"name\": \"position\", \n                            \"type\": \"coords\", \n                            \"value\": \"40.418889, -3.691944\"\n                        }\n                    ], \n                    \"id\": \"Madrid\", \n                    \"isPattern\": \"false\", \n                    \"type\": \"City\"\n                }, \n                \"statusCode\": {\n                    \"code\": \"200\", \n                    \"reasonPhrase\": \"OK\"\n                }\n            }, \n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"metadatas\": [\n                                {\n                                    \"name\": \"location\", \n                                    \"type\": \"string\", \n                                    \"value\": \"WGS84\"\n                                }\n                            ], \n                            \"name\": \"position\", \n                            \"type\": \"coords\", \n                            \"value\": \"40.316667, -3.75\"\n                        }\n                    ], \n                    \"id\": \"Leganes\", \n                    \"isPattern\": \"false\", \n                    \"type\": \"City\"\n                }, \n                \"statusCode\": {\n                    \"code\": \"200\", \n                    \"reasonPhrase\": \"OK\"\n                    }\n                }\n            ]\n        }\n    \n\n        \n## /v1/subscribeContext\n\nThe NGSI10 operations you know up to now (updateContext and queryContext) are the basic building blocks for synchronous context producer and context consumer applications. However, Orion Context Broker has another  feature (explained in the section /v1/contextSubscriptions) that you can take advantage of: the ability to subscribe to context information so when \"something\" happens your application will get an asynchronous notification.In that way, you don\'t need to continuously repeat queryContext requests, the Orion Context Broker will let you know the information when it comes.\n\nBefore starting to play with feature, start the accumulator server (explained in the section /v1/contextSubscriptions) to capture notifications.\n\nActually, there are two kinds of subscribeContext: ONTIMEINTERVAL and ONCHANGE subscriptions, described in the next two subsections.\n\n#  ONTIMEINTERVAL/ONCHANGE subscription [POST]\n\n+ ONTIMEINTERVAL\n\nThe following is the request corresponding to an ONTIMEINTERVAL subscription:\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>Define which context elements will be included in the notification message<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>define which context elements will be associated to the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Reference<\/b><\/td>\n    <td>The callback URL to send notifications<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Duration<\/b><\/td>\n    <td>Duration of the subscriptions,specified using the ISO 8601<\/td>\n  <\/tr>\n  <tr>\n    <td><b>NotifyConditions<\/b><\/td>\n    <td>There is a type element and a condValueList element<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscribeResponse<\/b><\/td>\n    <td>Contains a subscription ID and a duration acknowledgement<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nThe following is the request corresponding to an ONTIMEINTERVAL subscription:\n<center>\n\n|Payload Information Request       |Description     | Value                           |\n|:---------------------------------|:---------------|:--------------------------------|\n|<b>Entities<\/b>                   |                |                                 | \n|                                  | Type           | Room                            | \n|                                  | IsPattern      | False                           |              \n|                                  | Id             | Room1                           |\n|<b>Attributes<\/b>                 |                |                                 |        \n|                                  | Temperature    |                                 |\n|<b>Reference<\/b>                  |                | http://localhost:1028/accumulate|\n|<b>Duration<\/b>                   |                | P1M                             |\n|<b>NotifyConditions<\/b>           |                |                                 |\n|                                  | Type           | ONTIMEINTERVAL                  |\n|                                  | CondValues     | PT10S                           |\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description     | Value                   |\n|:---------------------------------|:---------------|:------------------------|\n|<b>SubscribeResponse<\/b>          |                |                         | \n|                                  | duration       | P1M                     | \n|                                  | subscriptionId | 552f7481983d79a38fbd5a74|                           |              \n\n<\/center>\n\nIf you look at the accumulator-script.py terminal window, you will see that a message resembling the following one is received each 10 seconds:\n\n        POST http://localhost:1028/accumulate\n        Content-Length: 492\n        User-Agent: orion/0.9.0\n        Host: localhost:1028\n        Accept: application/xml, application/json\n        Content-Type: application/json\n\n        {\n        \"subscriptionId\" : \"51c04a21d714fb3b37d7d5a7\",\n        \"originator\" : \"localhost\",\n        \"contextResponses\" : [\n        {\n            \"contextElement\" : {\n                \"attributes\" : [\n                {\n                    \"name\" : \"temperature\",\n                    \"type\" : \"float\",\n                    \"value\" : \"26.5\"\n                }\n                ],\n                    \"type\" : \"Room\",\n                    \"isPattern\" : \"false\",\n                    \"id\" : \"Room1\"\n                },\n                    \"statusCode\" : {\n                        \"code\" : \"200\",\n                        \"reasonPhrase\" : \"OK\"\n                        }\n                }\n                ]\n        }\n\nOrion Context Broker notifies NGSI10 subscribeContext using the POST HTTP method (on the URL used as reference for the subscription) with a notifyContextRequest payload. Apart from the subscriptionId element (that matches the one in the response to subscribeContext request) and the originator element, there is a contextResponseList element which is the same that the one used in the queryContext responses.\n\n+ ONCHANGE\n\nWe assume that the accumulator-server.py program is still running.\n\nONCHANGE subscriptions are used when you want to be notified not when a given time interval has passed but when some attribute changes\n\nThe following is the request corresponding to an ONCHANGE subscription:\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>Entities<\/b><\/td>\n    <td>Define which context elements will be included in the notification message<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Attributes<\/b><\/td>\n    <td>define which context elements will be associated to the entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Reference<\/b><\/td>\n    <td>The callback URL to send notifications<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Duration<\/b><\/td>\n    <td>Duration of the subscriptions,specified using the ISO 8601<\/td>\n  <\/tr>\n  <tr>\n    <td><b>NotifyConditions<\/b><\/td>\n    <td>There is a type element and a condValueList element<\/td>\n  <\/tr>\n  <tr>\n    <td><b>Throttling<\/b><\/td>\n    <td>To specify a minimum inter-notification arrival time<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscribeResponse<\/b><\/td>\n    <td>Contains a subscription ID and a duration acknowledgement<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n*The notifyCondition element uses the type ONCHANGE (obviously :) but, in this case the condValueList contains an actual list of condValue elements, each one with an attribute name. They define the \"triggering attributes\", i.e. attributes that upon creation/change due to entity creation or update trigger the notification. The rule is that if at least one of the attributes in the list changes (e.g. some kind of \"OR\" condition), then a notification is sent. But note that that notification includes the attributes in the attributeList part, which doesn\'t necessarily include any attribute in the condValue.\n\n*The throttling element is used to specify a minimum inter-notification arrival time. So, setting throttling to 5 seconds as in the example above makes that a notification will not be sent if a previous notification was sent less than 5 seconds ago, no matter how many actual changes take place in that period.his is to not stress the notification receptor in case of having context producers that update attribute values too frequently. Actually, throttling is not an \"exclusive\" field for ONCHANGE subscriptions: from a theoretical point of view it can be used in ONTIMEINTERVAL subscriptions but, given that in that case you can precisely control the notification frequency it doesn\'t have any practical sense.\n\n\n<center>\n\n|Payload Information Request       |Description     | Value                           |\n|:---------------------------------|:---------------|:--------------------------------|\n|<b>Entities<\/b>                   |                |                                 | \n|                                  | Type           | Room                            | \n|                                  | IsPattern      | False                           |              \n|                                  | Id             | Room1                           |\n|<b>Attributes<\/b>                 |                |                                 |        \n|                                  | Temperature    |                                 |\n|<b>Reference<\/b>                  |                | http://localhost:1028/accumulate|\n|<b>Duration<\/b>                   |                | P1M                             |\n|<b>NotifyConditions<\/b>           |                |                                 |\n|                                  | Type           | ONCHANGE                        |\n|                                  | CondValues     | Pressure                        |\n|<b>Throttling<\/b>                 |                | PT5S                            |\n\n<\/center>\n\nAs in ONTIMEINTERVAL subscriptions, the response consists of a subscription ID, a duration acknowledgement and (given that we used throttling in the request) a throttling acknowledgement.\n\n\nLet\'s have a look now at accumulator-server.py. We will see one (and just one by the moment, no matter how much you wait) notifyContextRequest, similar to this one:\n\n        POST http://localhost:1028/accumulate\n        Content-Length: 492\n        User-Agent: orion/0.9.0\n        Host: localhost:1028\n        Accept: application/xml, application/json\n        Content-Type: application/json\n\n        {\n        \"subscriptionId\" : \"51c0ac9ed714fb3b37d7d5a8\",\n        \"originator\" : \"localhost\",\n        \"contextResponses\" : [\n        {\n            \"contextElement\" : {\n                \"attributes\" : [\n                {\n                    \"name\" : \"temperature\",\n                    \"type\" : \"float\",\n                    \"value\" : \"26.5\"\n                }\n                ],\n                \"type\" : \"Room\",\n                \"isPattern\" : \"false\",\n                \"id\" : \"Room1\"\n            },\n            \"statusCode\" : {\n                \"code\" : \"200\",\n                \"reasonPhrase\" : \"OK\"\n            }\n            }\n        ]\n        }\n        \nYou may wonder why accumulator-server.py is getting this message if you don\'t actually do any update. This is because the Orion Context Broker considers the transition from \"non existing subscription\" to \"subscribed\" as a change.\n\n\n+ Request ONTIMEINTERVAL (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n\n            {\n                \"entities\": [\n                {\n                    \"type\": \"Room\",\n                    \"isPattern\": \"false\",\n                    \"id\": \"Room1\"\n                }\n                ],\n                    \"attributes\": [\n                    \"temperature\"\n                ],\n                    \"reference\": \"http://localhost:1028/accumulate\",\n                    \"duration\": \"P1M\",\n                    \"notifyConditions\": [\n                    {\n                    \"type\": \"ONTIMEINTERVAL\",\n                    \"condValues\": [\n                    \"PT10S\"\n                ]\n                }\n            ]\n            }\n            \n+ Response 200 (application/json)\n\n        {\n            \"subscribeResponse\": {\n            \"duration\": \"P1M\", \n            \"subscriptionId\": \"552f7481983d79a38fbd5a74\"\n            }\n        }\n\n\n\n+ Request ONCHANGE (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n\n            {\n                \"entities\": [\n                    {\n                        \"type\": \"Room\",\n                        \"isPattern\": \"false\",\n                        \"id\": \"Room1\"\n                    }\n                ],\n                    \"attributes\": [\n                        \"temperature\"\n                ],\n                    \"reference\": \"http://localhost:1028/accumulate\",\n                    \"duration\": \"P1M\",\n                    \"notifyConditions\": [\n                    {\n                        \"type\": \"ONCHANGE\",\n                        \"condValues\": [\n                        \"pressure\"\n                    ]\n                }\n            ],\n                \"throttling\": \"PT5S\"\n            }\n\n            \n+ Response 200 (application/json)\n\n            {\n                \"subscribeResponse\": {\n                \"duration\": \"P1M\",\n                \"subscriptionId\": \"51c0ac9ed714fb3b37d7d5a8\",\n                \"throttling\": \"PT5S\"\n                }\n            }\n\n\n## /v1/updateContextSubscription\n\nYou can update the value of entities attributes using the updateContext operation with UPDATE action type. The basic rule to take into account with updateContext is that APPEND creates new context elements, while UPDATE updates already existing context elements (however, current Orion Context Broker version interprets APPEND as UPDATE if the entity already exists).\n\n\n#  Update context elements [POST]\n\nAs you can see, the structure of the request is exactly the same we used for updateContext with APPEND for creating entities, except we use UPDATE now as action type.\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextElements<\/b><\/td>\n    <td>An array containing  the information for the attribute requested<\/td>\n  <\/tr>\n  <tr>\n    <td><b>UpdateAction<\/b><\/td>\n    <td>Updates already existing context elements<\/td>\n  <\/tr>\n  <tr>\n  <\/tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>ContextResponse<\/b><\/td>\n    <td>An array containing a contextElement for each entity<\/td>\n  <\/tr>\n  <tr>\n    <td><b>ContextElement<\/b><\/td>\n    <td>An array containing  the information for the attribute requested<\/td>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr>  \n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\nThe following is the request corresponding to an ONTIMEINTERVAL subscription:\n<center>\n\n|Payload Information Request  |Description  |              |Value          |\n|:----------------------------|:------------|:-------------|:--------------|\n| <b>ContextElements<\/b>      |             |              |               |  \n|                             | Attributes  |              |               |\n|                             |             | Name         |Temperature    |\n|                             |             | Value        |Float          |\n|                             |             | Type         |26.5           |\n|                             |             | Name         |Pressure       |\n|                             |             | Value        |Integer        |\n|                             |             | Type         |763            |\n|                             | Id          |              |Room1          |\n|                             | IsPattern   |              |false          |\n|                             | Type        |              |Room           |\n| <b>UpdateAction<\/b>         |             |              |UPDATE         |\n\n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description            |             |              | Value         |\n|:---------------------------------|:----------------------|:------------|:-------------|:--------------|\n|<b>ContextResponses<\/b>           |                       |             |              |               |\n|                                  | <b>ContextElement<\/b> |             |              |               |  \n|                                  |                       | Attributes  |              |               |\n|                                  |                       |             | Name         |Temperature    |\n|                                  |                       |             | Value        |Float          |\n|                                  |                       |             | Type         |\"\"             |\n|                                  |                       |             | Name         |Pressure       |\n|                                  |                       |             | Value        |Integer        |\n|                                  |                       |             | Type         |\"\"             |\n|                                  |                       | Id          |              |Room1          |\n|                                  |                       | IsPattern   |              |false          |\n|                                  |                       | Type        |              |Room           |\n|                                  | <b>StatusCode<\/b>     |             |              |               |\n|                                  |                       |             |Code          |200            |\n|                                  |                       |             |ReasonPhrase  |OK             |\n\n\n<\/center>\n\nAgain, the structure of the response is exactly the same one we used for updateContext with APPEND for creating entities.\nThe updateContext operation is quite flexible as it allows you to update as many entities and attributes as you want: it is just a matter of which contextElements you include in the list. You could even update the whole database of Orion Context Broker (maybe including thousands of entities/attributes) in just one updateContext operation (at least in theory).\n\n\n\n\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n\n            {\n                \"contextElements\": [\n                    {\n                        \"type\": \"Room\",\n                        \"isPattern\": \"false\",\n                        \"id\": \"Room1\",\n                        \"attributes\": [\n                    {\n                        \"name\": \"temperature\",\n                        \"type\": \"float\",\n                        \"value\": \"26.5\"\n                    },\n                    {\n                        \"name\": \"pressure\",\n                        \"type\": \"integer\",\n                        \"value\": \"763\"\n                    }\n                    ]\n                }\n            ],\n                \"updateAction\": \"UPDATE\"\n            }\n            \n+ Response 200 (application/json)\n\n        {\n            \"contextResponses\": [\n            {\n                \"contextElement\": {\n                    \"attributes\": [\n                        {\n                            \"name\": \"temperature\",\n                            \"type\": \"float\",\n                            \"value\": \"\"\n                        },\n                        {\n                            \"name\": \"pressure\",\n                            \"type\": \"integer\",\n                            \"value\": \"\"\n                        }\n                    ],\n                        \"id\": \"Room1\",\n                        \"isPattern\": \"false\",\n                        \"type\": \"Room\"\n                    },\n                        \"statusCode\": {\n                            \"code\": \"200\",\n                            \"reasonPhrase\": \"OK\"\n                        }\n                }\n            ]\n        }\n        \n\n## /v1/unsubscribeContext\n\nFinally, you can cancel a subscription using the NGSI10 unsubscribeContext operation, that just uses de subscriptionId in the request payload :\n\n#  Cancel a subscription  [POST]\n\n<table width=\"600\">\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n  <tr>\n    <th>Payload Information Request<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>SubscriptionId<\/b><\/td>\n    <td>Number of the subscription you want to cancel<\/td>\n  <\/tr>\n  <tr>\n    <th>Payload Information Response<\/th>\n    <th>Description<\/th>\n  <\/tr>\n  <tr>\n    <td><b>StatusCode<\/b><\/td>\n    <td>Contains the confirmation that all has worked properly<\/td>\n  <\/tr> \n  <tr>\n    <td><b>SubscriptionId<\/b><\/td>\n    <td>Number of the subscription cancelled<\/td>\n  <\/tr>\n  <tr bgcolor=\"silver\"><td><\/td><td><\/td><\/tr>\n<\/table>\n\n<center>\n\n|Payload Information Request      |Description     | Value                    |\n|:--------------------------------|:---------------|:-------------------------|\n|<b>SubscriptionId<\/b>            |                | 552f7481983d79a38fbd5a74 |                        \n                                   \n\n<\/center>\n\n<center>\n\n|Payload Information Response      |Description      | Value                    |\n|:---------------------------------|:----------------|:-------------------------|\n|<b>StatusCode<\/b>                 |                 |                          | \n|                                  | Code            | 200                      | \n|                                  | ReasonPhrase    | Ok                       |              \n|<b>SubscriptionId<\/b>             |                 | 552f7481983d79a38fbd5a74 |   \n<\/center>\n\n\n\n+ Request (application/json)\n\n    + Headers (application/json)\n    \n        Accept: application/json\n        \n\n    + Body\n    \n            {\n             \"subscriptionId\": \"51c04a21d714fb3b37d7d5a7\"\n            }\n        \n+ Response 200 (application/json)\n\n         {\n            \"statusCode\": {\n                \"code\": \"200\",\n                \"reasonPhrase\": \"OK\"\n            },\n            \"subscriptionId\": \"51c04a21d714fb3b37d7d5a7\"\n         }\n"
    });
  </script>
</body>
</html>
