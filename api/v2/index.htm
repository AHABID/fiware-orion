<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>fiware-ngsiv2-reference</title>
</head>
<body>
  <script src="https://api.apiary.io/seeds/embed.js"></script>
  <script>
    var embed = new Apiary.Embed({
      apiBlueprint: "FORMAT: 1A\nHOST: http://fiware-ngsi2.apiblueprint.org/\n\n# FIWARE-NGSI-Simple\n\n<!--\n Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U\n\n This file is part of Orion Context Broker.\n\n Orion Context Broker is free software: you can redistribute it and/or\n modify it under the terms of the GNU Affero General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n\n Orion Context Broker is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n General Public License for more details.\n\n You should have received a copy of the GNU Affero General Public License\n along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.\n\n For those usages not covered by this license please contact with\n iot_support at tid dot es\n-->\n\nFIWARE-NGSI Simple API.\n\n# FIWARE-NGSI-Simple API Root [/v2]\n\nThis resource does not have any attributes. Instead it offers the initial\nAPI affordances in the form of the links in the JSON body.\n\nIt is recommended to follow the “url” link values,\n[Link](https://tools.ietf.org/html/rfc5988) or Location headers where\napplicable to retrieve resources. Instead of constructing your own URLs,\nto keep your client decoupled from implementation details.\n\n## JSON entity representation\n\nAn entity is represented by a a JSON object which contain the following properties:\n\n* `id` for the entity ID, represented by a JSON string. If the entity has an `id` attribute itself it will be ignored.\n* `type` for the entity type, represented by a JSON string. If the entity has a `type` attribute itself it will be ignored.\n  If the entity doesn\'t have a type, then this property is not included.\n* A collection of properties, one per entity attribute. Property values can be single values or they can include,\n  `type` and properties representing metadata as well. Property values which correspond to the primitive JSON datatypes\n  \"string\", \"number\" and \"boolean\" and with no metadata are rendered as regular JSON values. Property values\n  which specify a custom type or include metadata are rendered as JSON objects with the following properties:\n  * `value`: for the attribute value, rendered as a regular JSON value depending on the type. Attributes with an\n    user-defined informative types are rendered as JSON strings (TBD).\n  * `type`: a JSON string which represents the attribute type provided at attribute creation time.\n  * A collection of properties one per metadata field associated to the attribute value. Metadata properties follow the\n    same representation rules that applies to properties which represent attributes (except that a metadata\n    cannot have metadata properties). \n\nCanonical format description (TBD).\n\n### Predefined types\n\nAll attribute types not included in the list below are considered *user-defined informative* types. The values of\nuser-defined informative types are represented by JSON string.\n\n* `number` (or `Number`):  identifies numbers, either integer or float.\nThey are associated to JSON number type (see https://developer.mozilla.org/en-US/docs/Glossary/Number).\nOperators allowed are: greater than, lesser than, greater or equal, lesser or equal and range.\n\n```\n\"temperature\": 32.5\n```\n\n* `string` (or `String`): identifies text string. They are represented by JSON strings (see https://developer.mozilla.org/en-US/docs/Glossary/String).\n\n```\n\"msg\": \"Hello world\"\n```\n\n* `boolean` (or `Boolean`): identifies a logical value, either true or false. They are represented by JSON booleans (see https://developer.mozilla.org/en-US/docs/Glossary/Boolean).\n\n```\n\"active\": true\n```\n\n* `date` (or `Date`):  identifies dates, in ISO8601 format. They are represented by JSON strings. Operators allowed are:\ngreater than, lesser than, greater or equal, lesser or equal and range.\n\n```\n\"timestamp\": \"2017-06-17T07:21:24.238Z\"\n```\n\n\n* `geo:point`: identifies a geolocation. They are represented by JSON strings. An\nentity can only have one `geo:point` attribute (TBD: this is yet under discussion, one possibility is\nthere can be multiple points associated to an entity but an entity can only be located on one place).\n\n```\n{\n  ...\n  \"location\": {\n    \"value\": \"41.3763726, 2.1864475,14\",\n    \"type\": \"geo:point\"\n  }\n}\n```\n\nAt creation or update time, the type has to be coherent with the value of the attribute, e.g the following\nwill result in an error response:\n\n(TBD: this behaviour is under discussion, specially the case for the \"myType\" with JSON number for the value)\n\n```\n{\n  \"value\": \"23.5\", -> value should be: 23.5\n  \"type\": \"number\"\n}\n\n\n{\n  \"value\": 23.5,   -> value should be: \"23.5\"\n  \"type\": \"string\"\n}\n\n{\n  \"value\": \"23.5\", -> value should be: \"23.5\" (user defined types always use JSON strings as value)\n  \"type\": \"myType\"\n}\n\n{\n  \"value\": \"foo, bar\", -> it is not correctly formated as coordinates\n  \"type\": \"geo:point\"\n}\n```\n\n## Error responses\n\nIn the case of being present, the error payload is JSON object including the following fields:\n\n* `error` (mandatory): a textual description of the error.\n* `description` (optional): additional information about the error.\n\n# API entry point\n\n## Retrieve the Entry Point [GET]\n\n+ Response 200 (application/json)\n\n        {\n            \"entities_url\":      \"/v2/entities\",\n            \"types_url\":         \"/v2/types\",\n            \"subscriptions_url\": \"/v2/subscriptions\",\n            \"registrations_url\": \"/v2/registrations\"\n        }\n\n## Context Entities [/v2/entities]\n\n### List entities [GET /v2/entities{?limit,offset,count,type,id,idPattern,q,geometry,coords,attrs}]\n\nRetrieves a list of entities which match criteria defined by the following parameters: `id`, `type`, `idPattern`, `q`,\n`geometry` and `coords` attribute (see below for a detailed description of these parameters). A given entity\nhave to match all the criteria to be retrieved (i.e. criteria are combined in a logical AND way).\n\n<table style=\"width: 100%; margin: 12px 0 0 0;\">\n<tr><td colspan=\"2\"><strong>Required Parameters<\/strong><\/td><\/tr>\n<tr><td colspan=\"2\">none<\/td><\/tr>\n<tr><td colspan=\"2\"><strong>Optional Parameters<\/strong><\/td><\/tr>\n<tr>\n  <td style=\"padding-right: 40px; width: 140px;\">id<\/td><td>A comma separated list of elements.\n  Retrieve entities which ID match one of the elements in the list.<\/td>\n<\/tr>\n<tr>\n  <td style=\"padding-right: 40px; width: 140px;\">type<\/td><td>A comma separated list of elements.\n  Retrieve entities which type match one of the elements in the list.<\/td>\n<\/tr>\n<tr>\n  <td style=\"padding-right: 40px; width: 140px;\">idPattern<\/td><td>A correctly formated regular\n  expression. Retrieve entities which ID matches the regular expression.<\/td>\n<\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">q<\/td><td>\n\n<p>A query expression, composed of a list of statements separated by <code>;<\/code>, i.e.<\/p>\n\n<p><code>\nq=statement;statements;statement\n<\/code><\/p>\n\n<p>Each statement express a matching condition. The result of the query is the match on each one of the statements, e.g. a\nAND logical condition among the different statements. There are two kind of statements: <em>unary statements<\/em> and\n<em>binary staments<\/em>.<\/p>\n\n<p>Binary statements are composed by an attribute name (e.g. \"temperature\"), operator and value (which format\ndepends on the operator), e.g.:<\/p>\n\n<p><code>\ntemperature==50<br/>\ntemperature<=20\n<\/code><\/p>\n\n<p>The list of operators (and the format of the values they use) is as follows:<\/p>\n\n<ul>\n  <li>Equal: <code>==<\/code>. It accepts the following values:\n    <ul>\n      <li>Single element, e.g. <code>temperature==40<\/code>. It matches entities whose attribute value\n      that exact value.<\/li>\n      <li>A list of comma-separated values, e.g. <code>color==black,red<\/code>. It matches entities whose\n      attribute value is one of the values (OR clause). Eg. entities which <code>color<\/code> is set to\n      <code>black<\/code> will match, while entities which <code>color<\/code> is set to <code>white<\/code>\n      will not match.<\/li>\n      <li>A range, specified as a minimum and maximum separated by <code>..<\/code>. It match if\n      the value is in the interval between the minimum and the maximum (both included). It can only be used\n      with attributes which contain dates or numbers. E.g. <code>temperature==10..20<\/code> matchs if the\n      temperature is greater or equal than 10 and lower or equal than 20.<\/li>\n    <\/ul>\n  <\/li>\n  <li>Unequal: <code>!=<\/code>. It accepts the following values:\n    <ul>\n      <li>The value is a single element, e.g. <code>temperature!=40<\/code>. It matches entities whose attribute\n      value is not that exact value.<\/li>\n      <li>A list of comma-separated values, e.g. <code>color!=black,red<\/code>. It matches entities whose\n      attribute value is not any of the values (AND clause). Eg. entities whose <code>color<\/code> is set\n      to <code>black<\/code> will not match, while entities whose <code>color<\/code> is set to\n      <code>white<\/code> match.<\/li>\n      <li>A range, specified as a minimum and maximum separated by <code>..<\/code>. It match\n      if the value is not in the interval between the minimum and the maximum (both included). It can only\n      be used with attributes which contain dates or numbers. E.g. <code>temperature!=10..20<\/code>matchs if\n      the temperature is lower than 10 or greater than 20 (it will not match if the tempeature is 10 or the\n      temperature is 20).<\/li>\n    <\/ul>\n  <\/li>\n  <li>Greater than: <code>&gt;<\/code>. The value is a single element, e.g. <code>temperature&gt;40<\/code>. It\n  matches entities which attribute value is strictly greater than that value. It can only\n  be used with attributes which contain dates or numbers.<\/li>\n  <li>Lesser than: <code>&lt;<\/code>. The value is a single element, e.g. <code>temperature&lt;40<\/code>. It\n  matches entities which attribute value is strictly lesser than that value. It can only\n  be used with attributes which contain dates or numbers.<\/li>\n  <li>Greater or equal than: <code>&gt;=<\/code>. The value is a single element, e.g. <code>temperature&gt;=40<\/code>.\n  It matches entities which attribute value is greater than or equal to that value. It can only\n  be used with attributes which contain dates or numbers.<\/li>\n  <li>Lesser or equal than: <code>&lt;=<\/code>. The value is a single element, e.g. <code>temperature&lt;=40<\/code>. It\n  matches entities which attribute value is lesser than or equal to that value. It can only\n  be used with attributes which contain dates or numbers.<\/li>\n<\/ul>\n\n<p>In the case of equal or inequal, if the value to match include a <code>,<\/code>, you can use simple quote\n(<code>\'<\/code>), e.g: <code>color==\'light,green\',\'deep,blue\'<\/code>.<\/p>\n\n<p>Unary statements are composed of a unary operator (either <code>+<\/code>or <code>-<\/code>) and are used in two situations:<\/p>\n\n<ul>\n  <li>To check for attribute existence. E.g. <code>+temperature<\/code>matches entities which have\n  a temperature attribute (no matter its value), while <code>-temperature<\/code>matches entities which don\'t have\n  a temperature attribute.<\/li>\n  <li>To check for entity type existence, with the <code>type<\/code>keyword. E.g, <code>-type<\/code>\n  matches entities which don\'t have a type.<\/li>\n<\/ul>\n\n<\/td><\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">geometry<\/td><td>\n\n<p>Defines a geografical area so only the entities located in that area matches the query. It is composed of a tokens list\nseparated by <code>;<\/code>. The first token is the shape of the geometry, the rest of the tokens (if any) depends\non the shape. In particular, the following geometries can be defined so far:<\/p>\n\n<ul>\n  <li><code>geometry=circle;radius:4000<\/code>, inside a circle (radius is in meters).<\/li>\n  <li><code>geometry=circle;radius:4000;external<\/code>, outside a circle (radius is in meters).<\/li>\n  <li><code>geometry=polygon<\/code>, inside a polygon.<\/li>\n  <li><code>geometry=polygon;external<\/code>, outside a polygon.<\/li>\n<\/ul>\n\n<\/td><\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">coords<\/td><td>\n\n<p>List of coordinates (separated by <code>;<\/code>) are interpreted depending on the geometry parameter as follows:<\/p>\n\n<ul>\n  <li>In the case of <code>circle<\/code>geometry, the parameter includes just one element, which\n  is the center of the circle.<\/li>\n  <li>In the case of <code>polygon<\/code>includes a list of elements, which are the vertices of\n  the polygon.<\/li>\n<\/ul>\n\n<\/td><\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">attrs<\/td>\n    <td>List of comma separated attributes to include in the entities of the response. If this parameter is not\n    included, all the attributes are retrieved.<\/td>\n<\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">limit<\/td><td>Limit the number of entities to be retrieved<\/td><\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">offset<\/td><td>Skip a number of records<\/td><\/tr>\n<tr><td style=\"padding-right: 40px; width: 140px;\">options<\/td><td>\nThis operation supports two options:\n\n<ul>\n  <li><code>count<\/code>: when used, the total entities number is returned as a HTTP in the response name <code>X-Total-Count<\/code>.<\/li>\n  <li><code>cannonical<\/code>: when used, the response payload used the \"cannonical form\". See JSON entity representation format section\n  for details.<\/li>\n<\/td><\/tr>\n<\/table>\n\nThe response payload is an Array which contains one object per matching entity. Each entity follows\nthe JSON entity representation format (described in a section above).\n\nResponse code:\n\n* Successful operation uses 200 OK\n* Error use a non-200 and (optionally) an error payload. See subsection on Error Resposnes for more detail.\n\n+ Parameters\n    + limit: 20 (optional, number)\n    + offset: 20 (optional, number)\n    + type: Room (optional, string)\n    + id: Bcn_Welt (optional, string)\n    + idPattern: (optional, string)\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1-D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe-Idearium\",\n            \"temperature\": 22.5\n         },\n         {\n            \"type\": \"Car\",\n            \"id\": \"P-9873-K\",\n            \"speed\": {\n                \"value\": 100,\n                \"type\": \"number\",\n                \"accuracy\": 2,\n                \"timestamp\": {\n                    \"value\": \"2015-06-04T07:20:27.378Z\",\n                    \"type\": \"date\"\n                }\n            }\n         }\n        ]\n\n### Create entity [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            },\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /v2/entities/Bcn-Welt\n\n\n### Create entity. Error [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7\n        }\n\n+ Response 422 (application/json)\n\n        {\n            \"error\": \"AlreadyExists\",\n            \"description\": \"An entity with the same id and type is already present\"\n        }\n\n\n## ContextEntity [/v2/entities/{entityId}]\n\n### Retrieve entity data by Id [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn_Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            }\n        }\n\n### Retrieve entity data by Id. Not exists [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 404 (application/json)\n\n        {\n            \"error\": \"NotFound\",\n            \"description\": \"There is no entity with such an id\"\n        }\n\n### Retrieve entity data by id and type [GET /v2/entities/type/{entityType}/id/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + entityType: Room (required, string) - Entity Type\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n        }\n\n### Get entity attributes [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: \'Bcn_Welt\' (required, string) - Entity ID\n    + attrs: temperature, humidity (optional, string) - Attributes to be retrieved. Coma separated list.\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n        }\n\n### Get entity attributes. Not present [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: mistake (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n        }\n\n### Update or append  entity attributes. POST [POST /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n    + Body\n\n            {\n                \"ambientNoise\": 31.5\n            }\n\n+ Response 204\n\n\n### Update entity attributes. [PATCH /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 25.5,\n            \"seatsNumber\": 6\n        }\n\n+ Response 204\n\n\n### Update entity attributes. POST [POST /v2/entities/{entityId}{?op}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + op: update - Indicates that an update must be forced\n\n+ Request (application/json)\n\n    + Headers\n\n            X-HTTP-Method-Override: PATCH\n\n    + Body\n\n            {\n                \"temperature\": 21.7,\n                \"humidity\": 60,\n            }\n\n+ Response 200\n\n\n### Remove an entity[DELETE /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n\n+ Response 204\n\n### Remove entity attributes[DELETE /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + attrs: humidity, seatsNumber - Attributes\n\n+ Response 204\n\n## Context Entity Attributes [/v2/entities/{entityId}/attrs]\n\n### List all attributes [GET /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            }\n        }\n\n### Replace all attributes [PUT /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"relativeHumidity\": {\n                \"value\": 60,\n                \"accuracy\": 1\n            },\n            \"seatsNumber\": 12\n        }\n\n+ Response 200\n\n### Get attribute data [GET /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute to be retrieved.\n\n+ Response 200 (application/json)\n\n        {\n            \"value\": 21.7\n        }\n\n### Get a single attribute value. Not exists [GET /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: mistake (required, string) - Attribute to be retrieved.\n\n+ Response 404 (application/json)\n\n        {\n            \"error\": \"NotFound\",\n            \"description\": \"The entity does not have such an attribute\"\n        }\n\n### Update an attribute value - JSON [PUT /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute ID\n\n+ Request (application/json)\n\n        {\n            \"value\": 25.0,\n            \"unitCode\": \"CEL\"\n        }\n\n+ Response 200\n\n\n### Remove a single attribute [DELETE /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute ID\n\n+ Response 204\n\n\n## Context Entity Subscriptions [/v2/entities/{entityId}/subscriptions]\n\n### List all subscriptions present in the system [GET /v2/subscriptions]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a subscription [GET /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n### Remove a suscription [DELETE /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 204\n\n\n### Create a new subscription [POST /v2/subscriptions]\n\n+ Request (application/json)\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcde98765\n\n### Partial - Update an existing subscription [PATCH /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefgh (required, string) - ID of the suscription\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### List all subscriptions associated to an entity [GET /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            }\n        ]\n\n\n### Create a new subscription associated to an entity [POST /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcd9867hshshs\n\n### Get the details of a subscription associated to an entity [GET /v2/entities/{entityId}/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + subscriptionId: abcdefgh (required, string) - ID of the subscription\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n\n## Context Entity Registrations [/v2/registrations]\n\n### List all registrations present in the system [GET /v2/registrations]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a registration [GET /v2/subscriptions/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n        }\n\n### Create a new registration [POST /v2/registrations]\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /registrations/abcde98765\n\n### Partial update an existing registration [PATCH /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### Full update of an existing registration [PUT /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://provider2.example.com/provide\"\n        }\n\n+ Response 204\n\n### Remove a registration [DELETE /v2/registrations/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 204\n\n### List all registrations associated to an entity [GET /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            }\n        ]\n\n\n### Create a new registration associated to an entity [POST /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /registration/abcd9867hshshs\n\n### Get the details of a registration associated to an entity [GET /v2/entities/{entityId}/registrations/{registrationId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + registrationId: abcdefgh (required, string) - ID of the registration\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\"\n            }\n        }\n"
    });
  </script>
</body>
</html>
