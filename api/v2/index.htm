<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>fiware-ngsi-simple</title>
</head>
<body>
  <script src="https://api.apiary.io/seeds/embed.js"></script>
  <script>
    var embed = new Apiary.Embed({
      apiBlueprint: "FORMAT: 1A\nHOST: http://fiware-ngsi2.apiblueprint.org/\n\n# FIWARE-NGSI-Simple\n\n<!--\n Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U\n\n This file is part of Orion Context Broker.\n\n Orion Context Broker is free software: you can redistribute it and/or\n modify it under the terms of the GNU Affero General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n\n Orion Context Broker is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n General Public License for more details.\n\n You should have received a copy of the GNU Affero General Public License\n along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.\n\n For those usages not covered by this license please contact with\n iot_support at tid dot es\n-->\n\nFIWARE-NGSI Simple API.\n\n# FIWARE-NGSI-Simple API Root [/v2]\n\nThis resource does not have any attributes. Instead it offers the initial\nAPI affordances in the form of the links in the JSON body.\n\nIt is recommended to follow the “url” link values,\n[Link](https://tools.ietf.org/html/rfc5988) or Location headers where\napplicable to retrieve resources. Instead of constructing your own URLs,\nto keep your client decoupled from implementation details.\n\n## Retrieve the Entry Point [GET]\n\n+ Response 200 (application/json)\n\n        {\n            \"entities_url\":      \"/v2/entities\",\n            \"types_url\":         \"/v2/types\",\n            \"subscriptions_url\": \"/v2/subscriptions\",\n            \"registrations_url\": \"/v2/registrations\"\n        }\n\n## Context Entities [/v2/entities{?type,pattern,limit,offset}]\n\n### List all entities [GET /v2/entities{?limit,offset}]\n\n+ Parameters\n    + limit: 20 (optional, number) - Limit the number of entities to be retrieved\n    + offset: 20 (optional, number) - Skip a number of records. Pagination\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1-D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe-Idearium\",\n            \"temperature\": 22.5\n         },\n         {\n            \"type\": \"Car\",\n            \"id\": \"P-9873-K\",\n            \"speed\": {\n                \"value\": 100,\n                \"type\": \"number\",\n                \"accuracy\": 2,\n                \"timestamp\": {\n                    \"value\": \"2015-06-04T07:20:27.378Z\",\n                    \"type\": \"date\"\n                }\n            }\n         }\n        ]\n\n### List all entities of an specific type [GET /v2/entities{?type}]\n\n+ Parameters\n    + type: Room (optional, string) - Only retrieve entities of this type\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1-D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n         }\n        ]\n\n### List all entities by pattern matching [GET /v2/entities{?pattern}]\n\n+ Parameters\n    + pattern: DC_* (optional, string) - Only retrieve entities which id matches this pattern.\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1-D41\",\n            \"temperature\": 35.6\n         }\n        ]\n\n### List all Entities. Pagination [GET /v2/entities{?limit,offset,count}]\n\n+ Parameters\n    + count: true\n    + limit: 2\n    + offset: 2\n\n+ Response 200 (application/json)\n\n    + Headers\n\n            X-Total-Count: 30\n            Link: http://context.example.org/v2/entities?offset=4&limit=2; rel=\"next\", http://context.example.org/v2/entities?offset=28&limit=2; rel=\"last\", http://context.example.org/v2/entities?offset=0&limit=2; rel=\"first\", http://context.example.org/v2/entities?offset=2&limit=2; rel=\"prev\"\n\n    + Body\n\n            [{\n                \"type\": \"Room\",\n                \"id\": \"DC_S1-D41\",\n                \"temperature\": 35.6\n            },\n            {\n                \"type\": \"Room\",\n                \"id\": \"Boe_Idearium\",\n                \"temperature\": 22.5\n            }]\n\n### Query Entities [GET /v2/entities{?q,limit,offset,coords,geometry,attrs,count}]\n\n+ Parameters\n    + q: temperature=22.5;humidity=60 (optional, string) - General query parameter that allows to filter by attribute content\n    + coords: 41.3763726, 2.1864475 (optional, string) - Coordinates. Comma separated values. The number of values will depend on the \'geometry\' attribute.\n    + geometry: point (optional, string)- It can be any type defined by the GeoJSON spec or \'circle;radius=&lt;a radius&gt;\'.\n    The \'exterior\' modifier allows to indicate that the referred area is the outside of the region, for instance, \'polygon;exterior\'\n    + limit: 20 - Limit the number of results (optional, number) - Maximum number of results to return\n    + attrs: seatsNumber (optional, string) - Attributes to be returned\n    + count: true (optional, string) - If \'true\' the total number of records will be returned\n\n+ Response 200 (application/json)\n\n        [{\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            seatsNumber: 15\n        }]\n\n\n### Query Entities. No results [GET /v2/entities{?q,limit,coords,geometry,attrs}]\n\n+ Response 200 (application/json)\n\n        []\n\n### Create a new entity [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475,14\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            },\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /entities/Bcn-Welt\n\n\n### Create a new entity. Error [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7\n        }\n\n+ Response 422 (application/json)\n\n        {\n            \"code\": 1234,\n            \"message\": \"Already exists\",\n            \"description\": \"An entity with the same id and type is already present\"\n        }\n\n\n## ContextEntity [/v2/entities/{entityId}]\n\n### Retrieve all entity data by Id [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn_Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475,14\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            }\n        }\n\n### Retrieve all entity data by Id. Not exists [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 404 (application/json)\n\n        {\n            \"code\": 4567,\n            \"message\": \"Not Found\",\n            \"description\": \"There is no entity with such an id\"\n        }\n\n### Retrieve all entity data by id and type [GET /v2/entities/type/{entityType}/id/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + entityType: Room (required, string) - Entity Type\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n        }\n\n### Get one entity attribute [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: temperature (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7\n        }\n\n### Get one entity attribute. Not present [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: mistake (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n        }\n\n### Get several entity attributes [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: \'Bcn_Welt\' (required, string) - Entity ID\n    + attrs: temperature, humidity (optional, string) - Attributes to be retrieved. Coma separated list.\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n        }\n\n### Update or append an entity attribute. POST or PATCH [POST /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n    + Headers\n\n            X-HTTP-Method-Override: PATCH\n\n    + Body\n\n            {\n                \"ambientNoise\": 31.5\n            }\n\n+ Response 204\n\n\n### Update or append several entity attributes. POST or PATCH. [PATCH /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 25.5,\n            \"seatsNumber\": 6\n        }\n\n+ Response 204\n\n\n### Update one or more entity attributes. POST or PATCH [POST /v2/entities/{entityId}{?op}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + op: update - Indicates that an update must be forced\n\n+ Request (application/json)\n\n    + Headers\n\n            X-HTTP-Method-Override: PATCH\n\n    + Body\n\n            {\n                \"temperature\": 21.7,\n                \"humidity\": 60,\n            }\n\n+ Response 200\n\n\n### Remove an entity[DELETE /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n\n+ Response 204\n\n### Remove one or more entity attributes[DELETE /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + attrs: humidity, seatsNumber - Attributes\n\n+ Response 204\n\n## Context Entity Attributes [/v2/entities/{entityId}/attrs]\n\n### List all attributes [GET /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475,14\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            }\n        }\n\n### Replace all attributes [PUT /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"relativeHumidity\": {\n                \"value\": 60,\n                \"accuracy\": 1\n            },\n            \"seatsNumber\": 12\n        }\n\n+ Response 200\n\n### Get a single attribute value [GET /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute to be retrieved.\n\n+ Response 200 (text/plain)\n\n        21.7\n\n### Get a single attribute value as JSON [GET /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute to be retrieved.\n\n+ Request\n\n    + Headers\n\n            Accept: application/json\n\n+ Response 200 (application/json)\n\n        {\n            \"value\": 21.7\n        }\n\n### Get a single attribute value. Not exists [GET /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: mistake (required, string) - Attribute to be retrieved.\n\n+ Response 404 (application/json)\n\n        {\n            \"code\": 4567,\n            \"message\": \"Not found\",\n            \"description\": \"The entity does not have such an attribute\"\n        }\n\n### Update an attribute value [PUT /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute ID\n\n+ Request (text/plain)\n\n        17.9\n\n+ Response 200\n\n### Update an attribute value - JSON [PUT /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute ID\n\n+ Request (application/json)\n\n        {\n            \"value\": 25.0,\n            \"unitCode\": \"CEL\"\n        }\n\n+ Response 200\n\n\n### Remove a single attribute [DELETE /v2/entities/{entityId}/attrs/{attrId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrId: temperature (required, string) - Attribute ID\n\n+ Response 204\n\n\n## Context Entity Subscriptions [/v2/entities/{entityId}/subscriptions]\n\n### List all subscriptions present in the system [GET /v2/subscriptions]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a subscription [GET /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n### Remove a suscription [DELETE /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 204\n\n\n### Create a new subscription [POST /v2/subscriptions]\n\n+ Request (application/json)\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcde98765\n\n### Partial - Update an existing subscription [PATCH /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefgh (required, string) - ID of the suscription\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### List all subscriptions associated to an entity [GET /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            }\n        ]\n\n\n### Create a new subscription associated to an entity [POST /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcd9867hshshs\n\n### Get the details of a subscription associated to an entity [GET /v2/entities/{entityId}/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + subscriptionId: abcdefgh (required, string) - ID of the subscription\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n\n## Context Entity Registrations [/v2/registrations]\n\n### List all registrations present in the system [GET /v2/registrations]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a registration [GET /v2/subscriptions/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n        }\n\n### Create a new registration [POST /v2/registrations]\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /registrations/abcde98765\n\n### Partial update an existing registration [PATCH /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### Full update of an existing registration [PUT /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://provider2.example.com/provide\"\n        }\n\n+ Response 204\n\n### Remove a registration [DELETE /v2/registrations/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 204\n\n### List all registrations associated to an entity [GET /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            }\n        ]\n\n\n### Create a new registration associated to an entity [POST /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /registration/abcd9867hshshs\n\n### Get the details of a registration associated to an entity [GET /v2/entities/{entityId}/registrations/{registrationId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + registrationId: abcdefgh (required, string) - ID of the registration\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\"\n            }\n        }\n"
    });
  </script>
</body>
</html>
