<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>fiware-ngsiv2-cookbook</title>
</head>
<body>
  <script src="https://api.apiary.io/seeds/embed.js"></script>
  <script>
    var embed = new Apiary.Embed({
      apiBlueprint: "FORMAT: 1A\nHOST: http://fiware-ngsi2.apiblueprint.org/\n\n# FIWARE-NGSI Simple API (v2) Cookbook\n\n<!--\n Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U\n\n This file is part of Orion Context Broker.\n\n Orion Context Broker is free software: you can redistribute it and/or\n modify it under the terms of the GNU Affero General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n\n Orion Context Broker is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n General Public License for more details.\n\n You should have received a copy of the GNU Affero General Public License\n along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.\n\n For those usages not covered by this license please contact with\n iot_support at tid dot es\n-->\n\nFIWARE-NGSI Simple API (v2) Cookbook.\n\nThis is a cookbook with recipes that show how to use FIWARE-NGSI v2 aka FIWARE-NGSI Simple API.\nUse this examples for learning and enjoy!\n\nThis is a work in progress and is changing on a daily basis.\nPlease send your comments to fiware-ngsi@lists.fiware.org\n\n# FIWARE-NGSI Simple API Root [/v2]\n\nThis resource allows you to obtain a list of subresources published by the API:\n\n* entities to deal with your NGSI entities\n* types to deal with your entity types\n* subscriptions to deal with subscriptions to context changes\n* registrations to deal with context data by registering external providers\n\n## Retrieve the Entry Point [GET]\n\n+ Response 200 (application/json)\n\n        {\n            \"entities_url\":      \"/v2/entities\",\n            \"types_url\":         \"/v2/types\",\n            \"subscriptions_url\": \"/v2/subscriptions\",\n            \"registrations_url\": \"/v2/registrations\"\n        }\n\n## Listing context entities [/v2/entities{?type,id,idPattern,attrs,limit,offset,options}]\n\n### List all entities [GET /v2/entities]\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n         },\n         {\n            \"type\": \"Car\",\n            \"id\": \"P-9873-K\",\n            \"speed\": {\n                \"value\": 100,\n                \"type\": \"number\",\n                \"accuracy\": 2,\n                \"timestamp\": {\n                    \"value\": \"2015-06-04T07:20:27.378Z\",\n                    \"type\": \"date\"\n                }\n            }\n         }\n        ]\n\n### List entities by id [GET /v2/entities{?id}]\n\n+ Parameters\n    + id: DC_S1_D41 (optional, string) - Only retrieve entities with this id\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         }\n        ]\n\n### List all entities of an specific type [GET /v2/entities{?type}]\n\n+ Parameters\n    + type: Room (optional, string) - Only retrieve entities of this type\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n         }\n        ]\n\n### List entities by id list [GET /v2/entities{?id}]\n\n+ Parameters\n    + id: DC_S1_D41, Boe_Idearium (optional, string) - Id list with the entities to be retrieved\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n         }\n        ]\n\n\n### List entities by type list [GET /v2/entities{?type}]\n\n+ Parameters\n    + type: Room,Car (optional, string) - Type list\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n         },\n         {\n            \"type\": \"Car\",\n            \"id\": \"P-9873-K\",\n            \"speed\": {\n                \"value\": 100,\n                \"type\": \"number\",\n                \"accuracy\": 2,\n                \"timestamp\": {\n                    \"value\": \"2015-06-04T07:20:27.378Z\",\n                    \"type\": \"date\"\n                }\n            }\n         }\n        ]\n\n### List all entities which id matches a pattern [GET /v2/entities{?idPattern}]\n\n+ Parameters\n    + idPattern: DC_* (optional, string) - Only retrieve entities which id matches this pattern.\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         }\n        ]\n\n### Paginate over a list of entities [GET /v2/entities{?limit,offset,options}]\n\n+ Parameters\n    + options: count\n    + limit: 2\n    + offset: 2\n\n+ Response 200 (application/json)\n\n    + Headers\n\n            X-Total-Count: 30\n            Link: http://context.example.org/v2/entities?offset=4&limit=2; rel=\"next\", http://context.example.org/v2/entities?offset=28&limit=2; rel=\"last\", http://context.example.org/v2/entities?offset=0&limit=2; rel=\"first\", http://context.example.org/v2/entities?offset=2&limit=2; rel=\"prev\"\n\n    + Body\n\n            [\n             {\n                \"type\": \"Room\",\n                \"id\": \"DC_S1_D41\",\n                \"temperature\": 35.6\n             },\n             {\n                \"type\": \"Room\",\n                \"id\": \"Boe_Idearium\",\n                \"temperature\": 22.5\n             }\n            ]\n\n## Querying context [/v2/entities{?q,limit,offset,coords,geometry,attrs,options}]\n\n\n### Query Entities [GET /v2/entities{?q,limit,offset,coords,geometry,attrs,options}]\n\n+ Parameters\n    + q: temperature==22.5;humidity==60 (optional, string) - General query parameter that allows\n    to filter by attribute content\n    + coords: 41.3763726, 2.1864475 (optional, string) - Coordinates. Comma separated values.\n    The number of values will depend on the \'geometry\' attribute.\n    + geometry: circle;radius=10000 (optional, string) - It can be any type defined by the\n    GeoJSON spec or \'circle;radius=&lt;a radius&gt;\'.\n    The \'exterior\' modifier allows to indicate that the referred area is the outside\n    of the region, for instance, \'polygon;exterior\'\n    + limit: 20 - Limit the number of results (optional, number) - Maximum number of results to return\n    + attrs: seatsNumber (optional, string) - Attributes to be returned\n    + options: count (optional, string) - count indicates that the total number of records must be returned\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"seatsNumber\": 15\n         }\n        ]\n\n\n### Query Entities. No results [GET /v2/entities{?q,limit,coords,geometry,attrs}]\n\n+ Response 200 (application/json)\n\n        []\n\n## Creating entities [/v2/entities]\n\n### Create a new entity [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            },\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /v2/entities/Bcn-Welt\n\n\n### Create a new entity. Error [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7\n        }\n\n+ Response 422 (application/json)\n\n        {\n            \"error\": \"AlreadyExists\",\n            \"description\": \"An entity with the same id and type is already present\"\n        }\n\n\n## ContextEntity [/v2/entities/{entityId}]\n\n### Retrieve all entity data by Id [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn_Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            }\n        }\n\n### Retrieve all entity data by Id. Not exists [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 404 (application/json)\n\n        {\n            \"error\": \"NotFound\",\n            \"description\": \"There is no entity with such an id\"\n        }\n\n### Retrieve all entity data by id and type [GET /v2/entities/type/{entityType}/id/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + entityType: Room (required, string) - Entity Type\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n        }\n\n### Get one entity attribute [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: temperature (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7\n        }\n\n### Get one entity attribute. Not present [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: mistake (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n        }\n\n### Get several entity attributes [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: \'Bcn_Welt\' (required, string) - Entity ID\n    + attrs: temperature, humidity (optional, string) - Attributes to be retrieved. Coma separated list.\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n        }\n\n### Update entity attributes. [PATCH /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n    + Body\n\n            {\n                \"temperature\": 21.7,\n                \"ambientNoise\": 31.5\n            }\n\n+ Response 204\n\n\n### Update or append entity attributes. [POST /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 25.5,\n            \"seatsNumber\": 6\n        }\n\n+ Response 204\n\n\n### Remove an entity[DELETE /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n\n+ Response 204\n\n### Remove one or more entity attributes[DELETE /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + attrs: humidity, seatsNumber - Attributes\n\n+ Response 204\n\n## Context Entity Attributes [/v2/entities/{entityId}/attrs]\n\n### List all attributes [GET /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"location\": {\n                \"value\":  \"41.3763726, 2.1864475\",\n                \"type\": \"geo:point\",\n                \"crs\": \"WGS84\"\n            }\n        }\n\n### Replace all attributes [PUT /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"relativeHumidity\": {\n                \"value\": 60,\n                \"accuracy\": 1\n            },\n            \"seatsNumber\": 12\n        }\n\n+ Response 200\n\n\n### Get a single attribute, including type and metadata values [GET /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: illuminance (required, string) - Attribute to be retrieved.\n\n+ Response 200 (application/json)\n\n        {\n            \"value\": 300,\n            \"type\": \"number\",\n            \"accuracy\": 1.0,\n            \"unitCode\": \"LX\"\n        }\n\n### Get an attribute value as text [GET /v2/entities/{entityId}/attrs/{attrName}/value{?options}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute to be retrieved.\n    + options: text (optional, string) - Indicates format as text\n\n+ Response 200 (text/plain)\n\n        300\n\n### Get an attribute value as JSON [GET /v2/entities/{entityId}/attrs/{attrName}/value]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute to be retrieved.\n\n+ Response 200 (application/json)\n\n        {\n            \"value\": 300\n        }\n\n### Get an attribute. Not exists [GET /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: mistake (required, string) - Attribute to be retrieved.\n\n+ Response 404 (application/json)\n\n        {\n            \"error\": \"NotFound\",\n            \"description\": \"The entity does not have such an attribute\"\n        }\n\n\n### Update an attribute [PUT /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute Name\n\n+ Request (application/json)\n\n        {\n            \"value\": 25.0,\n            \"unitCode\": \"CEL\"\n        }\n\n+ Response 200\n\n\n### Update an attribute value [PUT /v2/entities/{entityId}/attrs/{attrName}/value]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute Name\n\n+ Request (application/json)\n\n        {\n            \"value\": 25.0\n        }\n\n+ Response 200\n\n\n### Remove an attribute [DELETE /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute Name\n\n+ Response 204\n\n\n## Context Entity Subscriptions [/v2/entities/{entityId}/subscriptions]\n\n### List all subscriptions present in the system [GET /v2/subscriptions]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a subscription [GET /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n### Remove a suscription [DELETE /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 204\n\n\n### Create a new subscription [POST /v2/subscriptions]\n\n+ Request (application/json)\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcde98765\n\n### Partial - Update an existing subscription [PATCH /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefgh (required, string) - ID of the suscription\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### List all subscriptions associated to an entity [GET /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            }\n        ]\n\n\n### Create a new subscription associated to an entity [POST /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcd9867hshshs\n\n### Get the details of a subscription associated to an entity [GET /v2/entities/{entityId}/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + subscriptionId: abcdefgh (required, string) - ID of the subscription\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n\n## Context Entity Registrations [/v2/registrations]\n\n### List all registrations present in the system [GET /v2/registrations]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a registration [GET /v2/subscriptions/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n        }\n\n### Create a new registration [POST /v2/registrations]\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /registrations/abcde98765\n\n### Partial update an existing registration [PATCH /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### Full update of an existing registration [PUT /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://provider2.example.com/provide\"\n        }\n\n+ Response 204\n\n### Remove a registration [DELETE /v2/registrations/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 204\n\n### List all registrations associated to an entity [GET /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            }\n        ]\n\n\n### Create a new registration associated to an entity [POST /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /registration/abcd9867hshshs\n\n### Get the details of a registration associated to an entity [GET /v2/entities/{entityId}/registrations/{registrationId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + registrationId: abcdefgh (required, string) - ID of the registration\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\"\n            }\n        }\n"
    });
  </script>
</body>
</html>
